name: SSLServerProfile
description: The TLS server profile secures connections with clients.
cli_alias: ssl-server
cmd_group: crypto
rest_endpoint: /mgmt/config/{domain}/SSLServerProfile
attributes:
- name: Id
  tf_name: id
  path: name
  type: String
  required: true
  test_value: '"ResTestSSLServerProfile"'
  test_expect_ds: '"AccTest_SSLServerProfile"'
  example: SSLServerProfileName
  description: Name of the object. Must be unique among object types in application
    domain.
  string_patterns:
  - ^[a-zA-Z0-9_-]+$
  string_min_length: 1
  string_max_length: 128
- name: AppDomain
  tf_name: app_domain
  type: String
  required: true
  example: test_domain
  description: The name of the application domain the object belongs to
  string_patterns:
  - ^[a-zA-Z0-9_-]+$
  string_min_length: 1
  string_max_length: 128
- name: UserSummary
  type: String
  description: Comments
  cli_alias: summary
- name: Protocols
  dm_type: DmSSLProtoVersionsBitmap
  description: Protocols
  cli_alias: protocols
- name: Ciphers
  type: List
  enum:
  - RSA_WITH_NULL_MD5
  - RSA_WITH_NULL_SHA
  - RSA_WITH_RC4_128_MD5
  - RSA_WITH_RC4_128_SHA
  - RSA_WITH_DES_CBC_SHA
  - RSA_WITH_3DES_EDE_CBC_SHA
  - DHE_DSS_WITH_DES_CBC_SHA
  - DHE_DSS_WITH_3DES_EDE_CBC_SHA
  - DHE_RSA_WITH_DES_CBC_SHA
  - DHE_RSA_WITH_3DES_EDE_CBC_SHA
  - RSA_WITH_AES_128_CBC_SHA
  - DHE_DSS_WITH_AES_128_CBC_SHA
  - DHE_RSA_WITH_AES_128_CBC_SHA
  - RSA_WITH_AES_256_CBC_SHA
  - DHE_DSS_WITH_AES_256_CBC_SHA
  - DHE_RSA_WITH_AES_256_CBC_SHA
  - RSA_WITH_NULL_SHA256
  - RSA_WITH_AES_128_CBC_SHA256
  - RSA_WITH_AES_256_CBC_SHA256
  - DHE_DSS_WITH_AES_128_CBC_SHA256
  - DHE_RSA_WITH_AES_128_CBC_SHA256
  - DHE_DSS_WITH_AES_256_CBC_SHA256
  - DHE_RSA_WITH_AES_256_CBC_SHA256
  - RSA_WITH_AES_128_GCM_SHA256
  - RSA_WITH_AES_256_GCM_SHA384
  - DHE_RSA_WITH_AES_128_GCM_SHA256
  - DHE_RSA_WITH_AES_256_GCM_SHA384
  - DHE_DSS_WITH_AES_128_GCM_SHA256
  - DHE_DSS_WITH_AES_256_GCM_SHA384
  - AES_128_GCM_SHA256
  - AES_256_GCM_SHA384
  - CHACHA20_POLY1305_SHA256
  - AES_128_CCM_SHA256
  - AES_128_CCM_8_SHA256
  - ECDHE_RSA_WITH_NULL_SHA
  - ECDHE_RSA_WITH_RC4_128_SHA
  - ECDHE_RSA_WITH_3DES_EDE_CBC_SHA
  - ECDHE_RSA_WITH_AES_128_CBC_SHA
  - ECDHE_RSA_WITH_AES_256_CBC_SHA
  - ECDHE_RSA_WITH_AES_128_CBC_SHA256
  - ECDHE_RSA_WITH_AES_256_CBC_SHA384
  - ECDHE_RSA_WITH_AES_128_GCM_SHA256
  - ECDHE_RSA_WITH_AES_256_GCM_SHA384
  - ECDHE_ECDSA_WITH_NULL_SHA
  - ECDHE_ECDSA_WITH_RC4_128_SHA
  - ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA
  - ECDHE_ECDSA_WITH_AES_128_CBC_SHA
  - ECDHE_ECDSA_WITH_AES_256_CBC_SHA
  - ECDHE_ECDSA_WITH_AES_128_CBC_SHA256
  - ECDHE_ECDSA_WITH_AES_256_CBC_SHA384
  - ECDHE_ECDSA_WITH_AES_128_GCM_SHA256
  - ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
  element_type: String
  required: true
  list_example:
  - AES_256_GCM_SHA384
  - CHACHA20_POLY1305_SHA256
  - AES_128_GCM_SHA256
  - ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
  - ECDHE_ECDSA_WITH_AES_256_CBC_SHA384
  - ECDHE_ECDSA_WITH_AES_128_GCM_SHA256
  - ECDHE_ECDSA_WITH_AES_128_CBC_SHA256
  - ECDHE_ECDSA_WITH_AES_256_CBC_SHA
  - ECDHE_ECDSA_WITH_AES_128_CBC_SHA
  - ECDHE_RSA_WITH_AES_256_GCM_SHA384
  - ECDHE_RSA_WITH_AES_256_CBC_SHA384
  - ECDHE_RSA_WITH_AES_128_GCM_SHA256
  - ECDHE_RSA_WITH_AES_128_CBC_SHA256
  - ECDHE_RSA_WITH_AES_256_CBC_SHA
  - ECDHE_RSA_WITH_AES_128_CBC_SHA
  - DHE_RSA_WITH_AES_256_GCM_SHA384
  - DHE_RSA_WITH_AES_256_CBC_SHA256
  - DHE_RSA_WITH_AES_128_GCM_SHA256
  - DHE_RSA_WITH_AES_128_CBC_SHA256
  - DHE_RSA_WITH_AES_256_CBC_SHA
  - DHE_RSA_WITH_AES_128_CBC_SHA
  description: Specify the cipher suites to support in preference order. Ensure that
    the order of cipher suites are in preference order. Otherwise, change the sequence
    order to meet your preference.
  cli_alias: ciphers
- name: Idcred
  type: String
  reference_to: CryptoIdentCred
  required: true
  test_value: '"AccTest_CryptoIdentCred"'
  test_bed_value: datapower_crypto_ident_cred.acc_test.id
  description: Identification credentials
  cli_alias: idcred
- name: RequestClientAuth
  type: Bool
  default: false
  description: Request client authentication
  cli_alias: request-client-auth
- name: RequireClientAuth
  type: Bool
  default: true
  description: Specify whether to require client authentication during the TLS handshake.
    When enabled, the handshake is aborted if the client certificate is not provided.
    Otherwise, the request does not fail when there is no client certificate.
  cli_alias: require-client-auth
  ignored_when:
  - evaluation: property-value-in-list
    attribute: RequestClientAuth
    value:
    - false
- name: ValidateClientCert
  type: Bool
  default: true
  description: Validate client certificate
  cli_alias: validate-client-cert
  ignored_when:
  - evaluation: property-value-in-list
    attribute: RequestClientAuth
    value:
    - false
- name: SendClientAuthCAList
  type: Bool
  default: true
  description: Send client authentication CA list
  cli_alias: send-client-auth-ca-list
  ignored_when:
  - evaluation: logical-or
    conditions:
    - evaluation: property-value-in-list
      attribute: RequestClientAuth
      value:
      - false
    - evaluation: property-value-in-list
      attribute: ValidateClientCert
      value:
      - false
- name: Valcred
  type: String
  reference_to: CryptoValCred
  description: Validation credentials
  cli_alias: valcred
  required_when:
  - evaluation: logical-and
    conditions:
    - evaluation: property-value-in-list
      attribute: RequestClientAuth
      value:
      - true
    - evaluation: property-value-in-list
      attribute: ValidateClientCert
      value:
      - true
  ignored_when:
  - evaluation: logical-true
- name: Caching
  type: Bool
  default: true
  description: Enable session caching
  cli_alias: caching
- name: CacheTimeout
  type: Int64
  minimum: 1
  maximum: 86400
  default: 300
  description: Specify the number of seconds that TLS sessions are allowed to remain
    in the TLS session cache before they are removed. Enter a value in the range 1
    - 86400. The default value is 300.
  cli_alias: cache-timeout
  ignored_when:
  - evaluation: property-value-in-list
    attribute: Caching
    value:
    - false
- name: CacheSize
  type: Int64
  minimum: 1
  maximum: 500
  default: 20
  description: Specify the maximum number of entries (multiplied by 1024) in the session
    cache. Enter a value in the range 1 - 500. The default value is 20.
  cli_alias: cache-size
  ignored_when:
  - evaluation: property-value-in-list
    attribute: Caching
    value:
    - false
- name: SSLOptions
  dm_type: DmSSLOptions
  description: Specify the options to apply to the TLS connection. These options have
    negative impact on the performance.
  cli_alias: ssl-options
- name: MaxSSLDuration
  type: Int64
  minimum: 1
  maximum: 11520
  default: 60
  description: Specify the maximum duration of an established TLS session. The TLS
    connection terminates when the duration is reached. Enter a value in the range
    1 - 11520. The default value is 60.
  cli_alias: max-duration
  ignored_when:
  - evaluation: property-value-not-in-list
    attribute: SSLOptions
    value:
    - max-duration
- name: DisableRenegotiation
  type: Bool
  default: false
  description: Disable renegotiation
  cli_alias: disable-renegotiation
- name: NumberOfRenegotiationAllowed
  type: Int64
  maximum: 512
  default: 0
  description: Specify the maximum number of client initiated renegotiations to allow.
    Enter a value in the range 0 - 512. The default value is 0, which indicates TLS
    client initiated renegotiation is not allowed.
  cli_alias: max-renegotiation-allowed
  ignored_when:
  - evaluation: property-value-not-in-list
    attribute: SSLOptions
    value:
    - max-renegotiation
- name: ProhibitResumeOnReneg
  type: Bool
  default: false
  description: Prohibit session resumption on renegotiation
  cli_alias: prohibit-resume-on-reneg
  ignored_when:
  - evaluation: logical-and
    conditions:
    - evaluation: property-value-in-list
      attribute: SSLOptions
      value:
      - max-renegotiation
    - evaluation: property-value-in-list
      attribute: NumberOfRenegotiationAllowed
      value:
      - '0'
- name: Compression
  type: Bool
  default: false
  description: Specify whether to enable TLS compression. TLS compression in HTTPS
    is dangerous because the connection becomes vulnerable to the CRIME attack.
  cli_alias: compression
- name: AllowLegacyRenegotiation
  type: Bool
  default: false
  description: Specify whether to allow TLS renegotiation with TLS clients that do
    not support RFC 5746. By default, this support is disabled because renegotiation
    is vulnerable to man-in-the-middle attacks as documented in CVE-2009-3555. Renegotiation
    with TLS clients that support RFC 5746 is permitted regardless of the setting.
  cli_alias: allow-legacy-renegotiation
  ignored_when:
  - evaluation: logical-and
    conditions:
    - evaluation: property-value-in-list
      attribute: SSLOptions
      value:
      - max-renegotiation
    - evaluation: property-value-in-list
      attribute: NumberOfRenegotiationAllowed
      value:
      - '0'
- name: PreferServerCiphers
  type: Bool
  default: true
  description: Use server cipher suite preferences
  cli_alias: prefer-server-ciphers
- name: EllipticCurves
  type: List
  enum:
  - sect163k1
  - sect163r1
  - sect163r2
  - sect193r1
  - sect193r2
  - sect233k1
  - sect233r1
  - sect239k1
  - sect283k1
  - sect283r1
  - sect409k1
  - sect409r1
  - sect571k1
  - sect571r1
  - secp160k1
  - secp160r1
  - secp160r2
  - secp192k1
  - secp192r1
  - secp224k1
  - secp224r1
  - secp256k1
  - secp256r1
  - secp384r1
  - secp521r1
  - brainpoolP256r1
  - brainpoolP384r1
  - brainpoolP512r1
  element_type: String
  list_example:
  - secp224r1
  description: Elliptic curves
  cli_alias: curves
- name: PrioritizeChaCha
  type: Bool
  default: false
  description: Specify whether to move ChaCha20-Poly1305 cipher to the top of preference
    list sent to the client when this cipher is at the top of client cipher list When
    server cipher suite preferences is in effect, enabling this property temporarily
    moves the ChaCha20-Poly1305 cipher to the top of preference list when clients
    that present ChaCha20-Poly1305 cipher have this cipher at the top of their preference
    list. This setting allows the client to negotiate ChaCha20-Poly1305 cipher while
    other clients can use other ciphers.
  cli_alias: prioritize-chacha
  ignored_when:
  - evaluation: property-value-in-list
    attribute: PreferServerCiphers
    value:
    - false
- name: SigAlgs
  type: List
  enum:
  - ecdsa_secp256r1_sha256
  - ecdsa_secp384r1_sha384
  - ecdsa_secp521r1_sha512
  - ed25519
  - ed448
  - ecdsa_sha224
  - ecdsa_sha1
  - rsa_pss_rsae_sha256
  - rsa_pss_rsae_sha384
  - rsa_pss_rsae_sha512
  - rsa_pss_pss_sha256
  - rsa_pss_pss_sha384
  - rsa_pss_pss_sha512
  - rsa_pkcs1_sha256
  - rsa_pkcs1_sha384
  - rsa_pkcs1_sha512
  - rsa_pkcs1_sha224
  - rsa_pkcs1_sha1
  - dsa_sha256
  - dsa_sha384
  - dsa_sha512
  - dsa_sha224
  - dsa_sha1
  element_type: String
  list_example:
  - ecdsa_secp521r1_sha512
  description: Specify the signature algorithms to advertise and support. An empty
    list uses the default algorithms.
  cli_alias: sign-alg
- name: RequireClosureNotification
  type: Bool
  default: true
  description: Require closure notification
  cli_alias: require-closure-notification
