name: AssemblyActionWebSocketUpgrade
description: The WebSocket upgrade assembly action processes API requests and responses
  through a WebSocket connection.
cli_alias: assembly-websocket-upgrade
cmd_group: assembly
rest_endpoint: /mgmt/config/{domain}/AssemblyActionWebSocketUpgrade
attributes:
- name: Id
  tf_name: id
  path: name
  type: String
  required: true
  test_value: '"ResTestAssemblyActionWebSocketUpgrade"'
  test_expect_ds: '"AccTest_AssemblyActionWebSocketUpgrade"'
  example: AssemblyActionWebSocketUpgradeName
  description: Name of the object. Must be unique among object types in application
    domain.
  string_patterns:
  - ^[a-zA-Z0-9_-]+$
  string_min_length: 1
  string_max_length: 128
- name: AppDomain
  tf_name: app_domain
  type: String
  required: true
  example: test_domain
  description: The name of the application domain the object belongs to
  string_patterns:
  - ^[a-zA-Z0-9_-]+$
  string_min_length: 1
  string_max_length: 128
- name: Url
  type: String
  required: true
  example: https://localhost
  description: Specify the URL to invoke. You can reference a custom API property
    that resolves as the value. To reference an API property, use the <tt>$(api.properties.
    <i>property_name</i> )</tt> format, where <tt><i>property_name</i></tt> is the
    name of the property to reference. You can use the short <tt>$( <i>property_name</i>
    )</tt> format when the assembly action does not have a property with the same
    name.
  cli_alias: url
- name: SSLClient
  type: String
  description: TLS client profile
  cli_alias: ssl-client
- name: Timeout
  type: Int64
  default: 60
  description: Specify the duration in seconds to wait for a reply from the target.
    The default value is 60.
  cli_alias: timeout
- name: UserName
  type: String
  description: User name
  cli_alias: username
  string_patterns:
  - ^[^ ]+$
- name: Password
  type: String
  reference_to: PasswordAlias
  description: Password alias
  cli_alias: password
- name: FollowRedirects
  type: Bool
  default: false
  description: Specify whether to follow the redirects. When enabled, attempts to
    resolve any redirect transparently.
  cli_alias: follow-redirects
- name: DecodeRequestParams
  type: Bool
  default: false
  description: Specify whether to decode request parameters in the target URL. When
    enabled, request parameters are decoded. The default behavior is to not decode
    request parameters.
  cli_alias: decode-request-params
- name: EncodePlusChar
  type: Bool
  default: false
  description: Specify whether to encode + characters in query strings. When enabled,
    + characters are encoded to <tt>%2F</tt> . The default behavior is to not encode
    + characters.
  cli_alias: encode-plus-char
- name: InjectUserAgentHeader
  type: Bool
  default: true
  description: Inject User-Agent header
  cli_alias: inject-user-agent
- name: InjectProxyHeaders
  type: Bool
  default: false
  description: Specify whether to inject proxy-related headers when not found in the
    request. The proxy-related headers are <tt>X-Forwarded-For</tt> , <tt>X-Forwarded-Host</tt>
    , and <tt>X-Forwarded-Port</tt> .
  cli_alias: inject-proxy-headers
- name: HeaderControlList
  type: String
  reference_to: ControlList
  default: default-accept-all
  description: Specify the control list that manages whether to accept or reject headers.
    The default behavior is to accept all headers.
  cli_alias: header-control-list
- name: ParameterControlList
  type: String
  reference_to: ControlList
  default: default-reject-all
  description: Specify the control list that manages whether to accept or reject URL
    parameters. The default behavior is to reject all URL parameters.
  cli_alias: parameter-control-list
- name: APIRequestProcessingAssembly
  type: String
  reference_to: Assembly
  description: API request processing assembly
  cli_alias: request-processing-assembly
- name: APIResponseProcessingAssembly
  type: String
  reference_to: Assembly
  description: API response processing assembly
  cli_alias: response-processing-assembly
- name: UserSummary
  type: String
  description: Comments
  cli_alias: summary
- name: Title
  type: String
  description: Title
  cli_alias: title
- name: CorrelationPath
  type: String
  description: Specify the path that correlates the API action to a specific part
    of the API specification. The correlation path specifies the part of the API definition
    that correlates with the API action. This path is exposed in the debug data by
    the API gateway for use by debugging tools. For example, for an API configuration
    that is retrieved from API Connect and specified in an OpenAPI document with IBM
    extensions, this path is the JSON path to the assembly policy in the IBM extensions
    section of the document. The path can be expressed in any form that the debugging
    tool can correlate to the API definition.
  cli_alias: correlation-path
- name: ActionDebug
  type: Bool
  default: false
  description: <p>Specify whether to enable the GatewayScript debugger to troubleshoot
    the following GatewayScript files or script.</p><ul><li>Troubleshoot a GatewayScript
    file that is called from the GatewayScript assembly action.</li><li>Troubleshoot
    a GatewayScript file that is called from an XSLT assembly action that uses the
    <tt>gatewayscript()</tt> extension function.</li><li>Troubleshoot a GatewayScript
    script that is called through the <tt>value</tt> or <tt>default</tt> property
    in the JSON file from the map assembly action.</li></ul><p>To debug a file or
    script, the following conditions must be met.</p><ul><li>The file contains one
    or more <tt>debugger;</tt> statements at the points in your script where you want
    to start debugging.</li><li>The GatewayScript debugger is enabled.</li></ul><p>You
    run the <tt>debug-action</tt> command.</p>
  cli_alias: debug
