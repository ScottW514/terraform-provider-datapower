name: DmAAAPPostProcess
model_only: true
attributes:
- name: PPEnabled
  type: Bool
  default: false
  description: Specify whether to run a custom stylesheet or GatewayScript file.
  cli_alias: custom-processing
- name: PPCustomURL
  type: String
  description: Specify the location of the custom file for the postprocessing activity.
  cli_alias: custom-url
  required_when:
  - evaluation: property-equals
    attribute: PPEnabled
    value:
    - 'on'
  ignored_when:
  - evaluation: logical-true
- name: PPSAMLAuthAssertion
  type: Bool
  default: false
  description: Specify whether to generate a SAML assertion that contains a SAML authentication
    statement for the authenticated user identity.
  cli_alias: saml-generate-assertion
- name: PPSAMLServerName
  type: String
  default: XS
  description: <p>Specify the value of the <tt>saml:Issuer</tt> of the generated SAML
    assertion or SAML SLO request. The default value is XS.</p><ul><li>If generating
    an SAML assertion, identifies the server that makes the assertion.</li><li>If
    sending an SLO request, identifies the issuer that sends the request.</li></ul>
  cli_alias: saml-server-name
  ignored_when:
  - evaluation: logical-and
    conditions:
    - evaluation: property-equals
      attribute: PPSAMLIdentityProvider
      value:
      - 'off'
    - evaluation: property-equals
      attribute: PPSAMLAuthAssertion
      value:
      - 'off'
    - evaluation: property-equals
      attribute: PPSAMLSendSLO
      value:
      - 'off'
- name: PPSAMLNameQualifier
  type: String
  description: Specify the value of the NameQualifier attribute of the NameIdentifier
    in the generated SAML assertion. Although the attribute is an optional attribute,
    some SAML implementations require that this attribute must be present.
  cli_alias: saml-name-qualifier
  ignored_when:
  - evaluation: logical-and
    conditions:
    - evaluation: property-equals
      attribute: PPSAMLAuthAssertion
      value:
      - 'off'
    - evaluation: logical-or
      conditions:
      - evaluation: property-equals
        attribute: PPSAMLIdentityProvider
        value:
        - 'off'
      - evaluation: property-equals
        attribute: PPSAMLNameID
        value:
        - 'off'
- name: PPKerberosTicket
  type: Bool
  default: false
  description: Specify whether to include a WS-Security Kerberos AP-REQ BinarySecurityToken
    for the specified client and server principals in the WS-Security header. By default,
    token are not included.
  cli_alias: kerberos-include-token
- name: PPKerberosClient
  type: String
  description: Specify the client identity (cname of the Kerberos ticket) for the
    Kerberos client principal.
  cli_alias: kerberos-client-principal
  required_when:
  - evaluation: logical-and
    conditions:
    - evaluation: logical-or
      conditions:
      - evaluation: property-equals
        attribute: PPKerberosTicket
        value:
        - 'on'
      - evaluation: property-equals
        attribute: PPKerberosSPNEGOToken
        value:
        - 'on'
    - evaluation: logical-or
      conditions:
      - evaluation: property-equals
        attribute: PPKerberosUseS4U2Proxy
        value:
        - 'off'
      - evaluation: logical-and
        conditions:
        - evaluation: property-equals
          attribute: PPKerberosUseS4U2Proxy
          value:
          - 'on'
        - evaluation: property-does-not-equal
          attribute: AUMethod
          value:
          - kerberos
    - evaluation: logical-or
      conditions:
      - evaluation: property-equals
        attribute: PPKerberosUseS4U2SelfAndS4U2Proxy
        value:
        - 'off'
      - evaluation: logical-and
        conditions:
        - evaluation: property-equals
          attribute: PPKerberosUseS4U2SelfAndS4U2Proxy
          value:
          - 'on'
        - evaluation: property-equals
          attribute: AUMethod
          value:
          - kerberos
  ignored_when:
  - evaluation: logical-true
- name: PPKerberosClientPassword
  type: String
  sensitive: true
  ignored_when:
  - evaluation: logical-true
- name: PPKerberosServer
  type: String
  description: Specify the server identity (sname of the Kerberos ticket) for the
    Kerberos server principal.
  cli_alias: kerberos-server
  required_when:
  - evaluation: logical-and
    conditions:
    - evaluation: logical-or
      conditions:
      - evaluation: property-equals
        attribute: PPKerberosTicket
        value:
        - 'on'
      - evaluation: property-equals
        attribute: PPKerberosSPNEGOToken
        value:
        - 'on'
    - evaluation: property-does-not-equal
      attribute: PPKerberosServerSource
      value:
      - custom-url
    - evaluation: property-does-not-equal
      attribute: PPKerberosServerSource
      value:
      - ctx-var
  ignored_when:
  - evaluation: logical-true
- name: PPWSTrust
  type: Bool
  default: false
  description: Specify whether to generate the appropriate security token response
    for a valid WS-Trust SecurityContextToken request.
  cli_alias: ws-trust-generate-resp
- name: PPTimestamp
  type: Bool
  default: true
  description: Specify whether to generate a WS-Trust token time stamp for the security
    token response.
  cli_alias: ws-trust-add-timestamp
  ignored_when:
  - evaluation: property-equals
    attribute: PPWSTrust
    value:
    - 'off'
- name: PPTimestampExpiry
  type: Int64
  maximum: 31622400
  default: 0
  description: Specify the validity duration for the WS-Trust SCT in seconds to issue
    a new security context or to renew a context instance with new instance. Enter
    a value in the range 0 - 31622400. The default value is 0, which uses the value
    of the <tt>var://system/AAA/defaultexpiry</tt> variable if defined. If you did
    not define this variable, the value is 14400. If this setting is to renew a security
    context or instance, the value 0 means to use the old duration for the renewed
    cycle.
  cli_alias: ws-trust-timestamp-expiry
  ignored_when:
  - evaluation: logical-or
    conditions:
    - evaluation: property-equals
      attribute: PPWSTrust
      value:
      - 'off'
    - evaluation: property-equals
      attribute: PPWSTrustNeverExpire
      value:
      - 'on'
- name: PPAllowRenewal
  type: Bool
  default: false
  description: Specify whether WS-Trust tokens can have their lifetime period reset
    without a new bootstrapping authentication event. If the WS-Trust request asks
    to renew the issued token, this setting is ignored.
  cli_alias: ws-trust-allow-renewal
  ignored_when:
  - evaluation: logical-or
    conditions:
    - evaluation: property-equals
      attribute: PPWSTrust
      value:
      - 'off'
    - evaluation: property-equals
      attribute: PPWSTrustNeverExpire
      value:
      - 'on'
- name: PPSAMLVersion
  type: String
  enum:
  - '2'
  - '1.1'
  - '1'
  default: '2'
  description: Specify the protocol level of SAML messages. The version affects the
    identity extraction from the original message and the format of messages. The
    default value is 1.1.
  cli_alias: saml-version
  ignored_when:
  - evaluation: logical-and
    conditions:
    - evaluation: property-equals
      attribute: PPSAMLIdentityProvider
      value:
      - 'off'
    - evaluation: property-equals
      attribute: PPSAMLAuthAssertion
      value:
      - 'off'
- name: PPSAMLSendSLO
  type: Bool
  default: false
  description: <p>Specify whether to send a SAML Logout (SLO) request to revoke the
    SAML Assertion token that is used for single-sign-on (SSO). The SLO is a request-response
    that the DataPower&#174; Gateway handles differently when it is working as a service
    provider (SP) or identity provider (IdP).</p><ul><li>When an SP, the DataPower
    Gateway sends an SLO request to the SAML SLO endpoint (IdP). On response, the
    DataPower Gateway processes the SLO response for its status.</li><li>When an IdP,
    the request to the DataPower Gateway contains the SLO request. Postprocessing
    validates against the SAML metadata file and sends the corresponding endpoint
    the SLO response.</li></ul>
  cli_alias: saml-send-slo
- name: PPSAMLSLOEndpoint
  type: String
  description: Specify the endpoint URL for SAML 2.0 Single Logout (SLO) messages.
    This endpoint is the authority that authenticated the assertion subject.
  cli_alias: saml-slo-endpoint
  ignored_when:
  - evaluation: property-equals
    attribute: PPSAMLSendSLO
    value:
    - 'off'
- name: PPWSUsernameToken
  type: Bool
  default: false
  description: Specify whether to add a WS-Security UsernameToken. The username and
    password are taken from the output of the map credentials phase.
  cli_alias: wssec-add-user-name-token
- name: PPWSUsernameTokenPasswordType
  type: String
  enum:
  - Text
  - Digest
  default: Digest
  description: Specify the type of password that the UsernameToken provides. By default,
    use the digest of the password as defined in the "Web Services Security UsernameToken
    Profile 1.0" specification.
  cli_alias: wssec-user-name-token-type
  ignored_when:
  - evaluation: logical-or
    conditions:
    - evaluation: property-equals
      attribute: PPWSUsernameToken
      value:
      - 'off'
    - evaluation: property-equals
      attribute: PPWSUsernameTokenIncludePwd
      value:
      - 'off'
- name: PPSAMLValidity
  type: Int64
  default: 0
  description: Specify the validity duration of the SAML assertion in seconds. This
    value and the skew time are for fine control of the validity duration. The default
    value is 0.
  cli_alias: saml-validity
  ignored_when:
  - evaluation: logical-and
    conditions:
    - evaluation: property-equals
      attribute: PPSAMLIdentityProvider
      value:
      - 'off'
    - evaluation: property-equals
      attribute: PPSAMLAuthAssertion
      value:
      - 'off'
- name: PPSAMLSkew
  type: Int64
  default: 0
  description: Specify the acceptable skew interval in seconds. The IdP and SP system
    clocks can have a skew time. When the SAML assertion is generated, the expiration
    takes the skew time setting into account. <ul><li>When <tt>NotBefore</tt> has
    the value of <tt>(CurrentTime - SkewTime)</tt> .</li><li>When <tt>NotOnOrAfter</tt>
    has the value of <tt>(CurrentTime + Validity + SkewTime)</tt> .</li></ul>
  cli_alias: saml-skew
  ignored_when:
  - evaluation: logical-and
    conditions:
    - evaluation: property-equals
      attribute: PPSAMLIdentityProvider
      value:
      - 'off'
    - evaluation: property-equals
      attribute: PPSAMLAuthAssertion
      value:
      - 'off'
- name: PPWSUsernameTokenIncludePwd
  type: Bool
  default: true
  description: Specify whether the WS-Security UsernameToken must include the password.
    By default, the token must contain the password.
  cli_alias: wssec-user-name-token-contains-pwd
  ignored_when:
  - evaluation: property-equals
    attribute: PPWSUsernameToken
    value:
    - 'off'
- name: PPLTPA
  type: Bool
  default: false
  description: Specify whether to generate an LTPA token.
  cli_alias: lpta-generate-token
- name: PPLTPAVersion
  type: String
  enum:
  - LTPA
  - LTPA1FIPS
  - LTPA2
  - LTPA2WAS7
  - LTPADomino
  default: LTPA2
  description: Specify the LTPA token version to generate. By default, generates a
    WebSphere version 2 token.
  cli_alias: lpta-version
  ignored_when:
  - evaluation: property-equals
    attribute: PPLTPA
    value:
    - 'off'
- name: PPLTPAExpiry
  type: Int64
  minimum: 1
  maximum: 628992000
  default: 600
  description: Specify the lifetime of LTPA token in seconds. Enter a value in the
    range 1 - 628992000. The default value is 600.
  cli_alias: lpta-expiry
  ignored_when:
  - evaluation: property-equals
    attribute: PPLTPA
    value:
    - 'off'
- name: PPLTPAKeyFile
  type: String
  description: Specify the location of the LTPA key file that secures the LTPA token.
    The LTPA key file contains the crypto material to create an LTPA token that can
    be consumed by WebSphere or Domino. <ul><li>For WebSphere tokens, you must export
    the LTPA key file from WebSphere. This file has portions encrypted by a password.</li><li>For
    Domino tokens, the key file should contain only the base 64-encoded Domino shared
    secret.</li></ul>
  cli_alias: lpta-key-file
  required_when:
  - evaluation: property-equals
    attribute: PPLTPA
    value:
    - 'on'
  ignored_when:
  - evaluation: property-equals
    attribute: PPLTPA
    value:
    - 'off'
  file_locations:
  - local
  - store
  - cert
  - sharedcert
- name: PPLTPAKeyFilePassword
  type: String
  sensitive: true
  description: Use the LTPA key file password alias.
  cli_alias: lpta-key-file-password
  ignored_when:
  - evaluation: logical-or
    conditions:
    - evaluation: logical-or
      conditions:
      - evaluation: property-equals
        attribute: PPLTPA
        value:
        - 'off'
      - evaluation: logical-and
        conditions:
        - evaluation: property-value-not-in-list
          attribute: PPLTPAVersion
          value:
          - LTPA
          - LTPA1FIPS
          - LTPA2
          - LTPA2WAS7
        - evaluation: property-value-in-list
          attribute: PPLTPAVersion
          value:
          - LTPADomino
    - evaluation: property-equals
      attribute: PPLTPAKeyFilePassword
      value:
      - ''
- name: PPLTPAStashFile
  type: String
  description: Specify the location of the file that contains the LTPA key file password.
  cli_alias: lpta-stash-file
  ignored_when:
  - evaluation: logical-true
- name: PPKerberosSPNEGOToken
  type: Bool
  default: false
  description: Specify whether to generate an SPNEGO token to insert into the HTTP
    WWW-Authenticate header.
  cli_alias: kerberos-generate-spnego
- name: PPKerberosBstValueType
  type: String
  enum:
  - http://docs.oasis-open.org/wss/oasis-wss-kerberos-token-profile-1.1#Kerberosv5_AP_REQ
  - http://docs.oasis-open.org/wss/oasis-wss-kerberos-token-profile-1.1#GSS_Kerberosv5_AP_REQ
  - http://docs.oasis-open.org/wss/oasis-wss-kerberos-token-profile-1.1#Kerberosv5_AP_REQ1510
  - http://docs.oasis-open.org/wss/oasis-wss-kerberos-token-profile-1.1#GSS_Kerberosv5_AP_REQ1510
  - http://docs.oasis-open.org/wss/oasis-wss-kerberos-token-profile-1.1#Kerberosv5_AP_REQ4120
  - http://docs.oasis-open.org/wss/oasis-wss-kerberos-token-profile-1.1#GSS_Kerberosv5_AP_REQ4120
  - http://docs.oasis-open.org/wss/2005/xx/oasis-2005xx-wss-kerberos-token-profile-1.1#Kerberosv5_AP_REQ
  - http://docs.oasis-open.org/wss/2005/xx/oasis-2005xx-wss-kerberos-token-profile-1.1#GSS_Kerberosv5_AP_REQ
  - http://www.docs.oasis-open.org/wss/2004/07/oasis-000000-wss-kerberos-token-profile-1.0#Kerberosv5_AP_REQ
  default: http://docs.oasis-open.org/wss/oasis-wss-kerberos-token-profile-1.1#GSS_Kerberosv5_AP_REQ
  description: Specify the value for the <tt>ValueType</tt> attribute of the WS-Security
    BinarySecurityToken. The Kerberos AP-REQ message contains the <tt>ValueType</tt>
    attribute. The default value is for WSS Kerberos Token Profile 1.1 (GSS).
  cli_alias: kerberos-value-type
  required_when:
  - evaluation: property-equals
    attribute: PPKerberosTicket
    value:
    - 'on'
  ignored_when:
  - evaluation: logical-true
- name: PPSAMLUseWSSec
  type: Bool
  default: false
  description: Specify where to insert the SAML assertion. By default, the assertion
    is inserted as a child element of the SOAP header. When enabled, the assertion
    is inserted in a WS-Security-compliant header as defined by the WS-Security SAML
    token profile.
  cli_alias: saml-in-wssec
  ignored_when:
  - evaluation: property-equals
    attribute: PPSAMLAuthAssertion
    value:
    - 'off'
- name: PPKerberosClientKeytab
  type: String
  reference_to: CryptoKerberosKeytab
  description: Specify the Kerberos keytab that defines the keytab for the client.
    This keytab is required to authenticate the client to the KDC.
  cli_alias: kerberos-client-keytab
  required_when:
  - evaluation: logical-and
    conditions:
    - evaluation: logical-or
      conditions:
      - evaluation: property-equals
        attribute: PPKerberosTicket
        value:
        - 'on'
      - evaluation: property-equals
        attribute: PPKerberosSPNEGOToken
        value:
        - 'on'
    - evaluation: logical-or
      conditions:
      - evaluation: property-equals
        attribute: PPKerberosUseS4U2Proxy
        value:
        - 'off'
      - evaluation: logical-and
        conditions:
        - evaluation: property-equals
          attribute: PPKerberosUseS4U2Proxy
          value:
          - 'on'
        - evaluation: property-does-not-equal
          attribute: AUMethod
          value:
          - kerberos
    - evaluation: logical-or
      conditions:
      - evaluation: property-equals
        attribute: PPKerberosUseS4U2SelfAndS4U2Proxy
        value:
        - 'off'
      - evaluation: logical-and
        conditions:
        - evaluation: property-equals
          attribute: PPKerberosUseS4U2SelfAndS4U2Proxy
          value:
          - 'on'
        - evaluation: property-equals
          attribute: AUMethod
          value:
          - kerberos
  ignored_when:
  - evaluation: logical-true
- name: PPUseWSSec
  type: Bool
  default: false
  description: Specify whether the token can be wrapped by the WS-Security <tt>wsse:Security</tt>
    header. This setting for the LTPA token. By default, the token cannot be wrapped
    by this header. When enabled, generate a WS-Security header that contains the
    token.
  cli_alias: wssec-header-wrap-token
  ignored_when:
  - evaluation: logical-and
    conditions:
    - evaluation: logical-or
      conditions:
      - evaluation: property-equals
        attribute: PPLTPA
        value:
        - 'off'
      - evaluation: property-equals
        attribute: PPLTPAVersion
        value:
        - LTPADomino
- name: PPActorRoleID
  type: String
  description: Specify the identifier for the SOAP 1.1 actor or SOAP 1.2 role for
    processing a WS-Security Security header. The DataPower Gateway works as that
    actor or role in consuming the input and generating the output for the next SOAP
    endpoint. This setting is meaningful when a SOAP message is being used for WS-Security
    1.0 or 1.1. <table border="1"><tr><td valign="left">http://schemas.xmlsoap.org/soap/actor/next</td><td>Each
    receiver, including the intermediary and ultimate receiver, can process the Security
    header.</td></tr><tr><td valign="left">http://www.w3.org/2003/05/soap-envelope/role/none</td><td>No
    one can process the Security header.</td></tr><tr><td valign="left">http://www.w3.org/2003/05/soap-envelope/role/next</td><td>Each
    receiver, including the intermediary and ultimate receiver, can process the Security
    header.</td></tr><tr><td valign="left">http://www.w3.org/2003/05/soap-envelope/role/ultimateReceiver</td><td>The
    ultimate receiver of the message can process the Security header. This value is
    the default value if such setting is not configured.</td></tr><tr><td valign="left">&lt;blank
    or empty string></td><td>The empty string "" (without quotation marks) indicates
    that no actor or role identifier is configured. If no actor or role setting is
    configured, the ultimate receiver is assumed during message processing, and no
    actor or role attribute is added during the generation of the Security header.
    <p>This value does not generate an attribute with an empty value, which is the
    behavior as defined by the USE_MESSAGE_BASE_URI constant string. There cannot
    be more than one Security header that omits the actor or role identifier.</p></td></tr><tr><td
    valign="left">USE_MESSAGE_BASE_URI</td><td>The constant value indicates that the
    actor or role identifier is the base URL of the message. If the SOAP message is
    transported over HTTP, the base URI is the Request-URI of the HTTP request.</td></tr><tr><td
    valign="left">any other customized string</td><td>You can input any string to
    identify the actor or role of the Security header.</td></tr></table>
  cli_alias: wssec-actor-role-id
  ignored_when:
  - evaluation: logical-not
    conditions:
    - evaluation: logical-or
      conditions:
      - evaluation: property-equals
        attribute: PPWSUsernameToken
        value:
        - 'on'
      - evaluation: property-equals
        attribute: PPTFIMTokenMapping
        value:
        - 'on'
      - evaluation: property-equals
        attribute: PPICRXToken
        value:
        - 'on'
      - evaluation: property-equals
        attribute: PPSAMLIdentityProvider
        value:
        - 'on'
      - evaluation: logical-and
        conditions:
        - evaluation: property-equals
          attribute: PPLTPA
          value:
          - 'on'
        - evaluation: property-does-not-equal
          attribute: PPLTPAVersion
          value:
          - LTPADomino
        - evaluation: property-equals
          attribute: PPUseWSSec
          value:
          - 'on'
- name: PPWSDerivedKeyUsernameToken
  type: Bool
  default: false
  description: Specify whether to generate a derived key from a password. By default,
    a derived key is not generated. When enabled, the process adds a WS-Security derived-key
    UsernameToken to the message and adds an HMAC signature with the derived-key.
    The username and password are taken from the output of the map credentials phase.
  cli_alias: wssec-use-derived-key
  required_when:
  - evaluation: logical-and
    conditions:
    - evaluation: property-equals
      attribute: PPWSUsernameToken
      value:
      - 'on'
    - evaluation: property-equals
      attribute: PPWSUsernameTokenIncludePwd
      value:
      - 'off'
  ignored_when:
  - evaluation: logical-true
- name: PPWSDerivedKeyUsernameTokenIterations
  type: Int64
  minimum: 2
  maximum: 65535
  default: 1000
  description: Specify the number of hashing cycles during the generation of a derived
    key from a password. The minimum value is 2. The default value is 1000.
  cli_alias: wssec-derived-key-hash-iter
  required_when:
  - evaluation: logical-and
    conditions:
    - evaluation: property-equals
      attribute: PPWSUsernameToken
      value:
      - 'on'
    - evaluation: property-equals
      attribute: PPWSUsernameTokenIncludePwd
      value:
      - 'off'
    - evaluation: property-equals
      attribute: PPWSDerivedKeyUsernameToken
      value:
      - 'on'
  ignored_when:
  - evaluation: logical-true
- name: PPWSUsernameTokenAllowReplacement
  type: Bool
  default: false
  description: Specify whether to retain the original token, not generate a new one,
    if the message already contains a UsernameToken. By default, the original otken
    is retained. When enabled, the generated token replaces any existing ones.
  cli_alias: wssec-replace-existing
  ignored_when:
  - evaluation: property-equals
    attribute: PPWSUsernameToken
    value:
    - 'off'
- name: PPHMACSigningAlg
  type: String
  enum:
  - hmac-sha1
  - hmac-sha224
  - hmac-sha256
  - hmac-sha384
  - hmac-sha512
  - hmac-ripemd160
  - hmac-md5
  default: hmac-sha1
  description: Specify the HMAC algorithm to sign the token. This property is available
    to request a WS-Security UsernameToken in postprocessing and WS-Security Derived-Key
    UsernameToken is added to the message with an HMAC signature. The default value
    is hmac-sha1.
  cli_alias: hmac-signing-algorithm
  required_when:
  - evaluation: logical-and
    conditions:
    - evaluation: property-equals
      attribute: PPWSUsernameToken
      value:
      - 'on'
    - evaluation: property-equals
      attribute: PPWSUsernameTokenIncludePwd
      value:
      - 'off'
    - evaluation: property-equals
      attribute: PPWSDerivedKeyUsernameToken
      value:
      - 'on'
  ignored_when:
  - evaluation: logical-true
- name: PPSigningHashAlg
  type: String
  enum:
  - sha1
  - sha256
  - sha512
  - ripemd160
  - sha224
  - sha384
  - md5
  default: sha1
  description: Specify the algorithm for the message digest for the generation of
    a digital signature. This algorithm is for only the UsernameToken postprocessing
    method. The default value is sha1.
  cli_alias: message-digest-algorithm
  required_when:
  - evaluation: logical-and
    conditions:
    - evaluation: property-equals
      attribute: PPWSUsernameToken
      value:
      - 'on'
    - evaluation: property-equals
      attribute: PPWSUsernameTokenIncludePwd
      value:
      - 'off'
    - evaluation: property-equals
      attribute: PPWSDerivedKeyUsernameToken
      value:
      - 'on'
  ignored_when:
  - evaluation: logical-true
- name: PPWSTrustHeader
  type: Bool
  default: false
  description: Specify whether to return the WS-Trust token as a SOAP header. By default,
    the token is put in the SOAP body. When enabled, return the token as a SOAP header
    by wrapping the <tt>wst:RequestedSecurityToken</tt> by a <tt>wst:IssuedToken</tt>
    .
  cli_alias: ws-trust-in-header
  ignored_when:
  - evaluation: property-equals
    attribute: PPWSTrust
    value:
    - 'off'
- name: PPWSSCKeySource
  type: String
  enum:
  - client-entropy
  - in-kerberos
  - in-encryptedkey
  - static
  - random
  default: random
  description: Specify the source of the key. For WS-Trust postprocessing, the DataPower
    Gateway works as an on-box WS-Trust security token service that is backed by WS-SecureConversation.
    A symmetric shared secret key is needed to initialize the WS-SecureConversation
    SecurityContext. By default, a random key is generated.
  cli_alias: ws-trust-key-source
  ignored_when:
  - evaluation: property-equals
    attribute: PPWSTrust
    value:
    - 'off'
- name: PPSharedSecretKey
  type: String
  reference_to: CryptoSSKey
  description: Specify the shared secret key as the WS-Trust key source.
  cli_alias: ws-trust-shared-key
  ignored_when:
  - evaluation: property-does-not-equal
    attribute: PPWSSCKeySource
    value:
    - static
- name: PPWSTrustRenewalWait
  type: Int64
  maximum: 2678400
  default: 0
  description: Specify the duration to allow the STS to keep an expired SecurityContext
    token in seconds. After a WS-Trust token expires, it can be removed from the STS
    and cannot be renewed. Therefore, the token must be renewed before expiry. Enter
    a value in the range of 0 - 2678400. The default value is 0. <p>The token is issued
    or renewed with a 1-hour wait time in the following situation.</p><ul><li>The
    WS-Trust request asks that the issued token can be renewed after expiration.</li><li>This
    setting has a value of 0.</li></ul>
  cli_alias: ws-trust-renewal-wait
  ignored_when:
  - evaluation: logical-or
    conditions:
    - evaluation: property-equals
      attribute: PPWSTrust
      value:
      - 'off'
    - evaluation: property-equals
      attribute: PPWSTrustNeverExpire
      value:
      - 'on'
    - evaluation: property-equals
      attribute: PPAllowRenewal
      value:
      - 'off'
- name: PPWSTrustNewInstance
  type: Bool
  default: false
  description: Specify whether the STS renewal request issues a new instance for WS-Trust
    renewal. By default, the STS renewal request renews the existing instance. When
    enabled, the STS renewal request creates a new instance.
  cli_alias: ws-trust-new-instance
  ignored_when:
  - evaluation: logical-or
    conditions:
    - evaluation: property-equals
      attribute: PPWSTrust
      value:
      - 'off'
    - evaluation: property-equals
      attribute: PPWSTrustNeverExpire
      value:
      - 'on'
    - evaluation: property-equals
      attribute: PPAllowRenewal
      value:
      - 'off'
- name: PPWSTrustNewKey
  type: Bool
  default: false
  description: Specify whether to update the context key for WS-Trust renewal.By default,
    the SCT renewal request uses the existing shared secret key. When enabled, the
    SCT renewal request does not use the existing shared secret key.
  cli_alias: ws-trust-new-key
  ignored_when:
  - evaluation: logical-or
    conditions:
    - evaluation: property-equals
      attribute: PPWSTrust
      value:
      - 'off'
    - evaluation: property-equals
      attribute: PPWSTrustNeverExpire
      value:
      - 'on'
    - evaluation: property-equals
      attribute: PPAllowRenewal
      value:
      - 'off'
    - evaluation: property-equals
      attribute: PPWSTrustNewInstance
      value:
      - 'off'
- name: PPWSTrustNeverExpire
  type: Bool
  default: false
  description: Specify whether the WS-Trust security context expires. By default,
    the security context expires. When enabled, the security context never expires.However,
    you can change the duration afterward with an explicit duration in seconds before
    expiry.
  cli_alias: ws-trust-never-expire
  ignored_when:
  - evaluation: property-equals
    attribute: PPWSTrust
    value:
    - 'off'
- name: PPICRXToken
  type: Bool
  default: false
  description: Specify whether to generate an Extended Identity Context Reference
    (ICRX) for z/OS identity propagation from the authenticated credentials. When
    generated, the WS-Security binary token with an ICRX token is inserted into the
    WS-Security header. You can use this token interoperability with the CICS Transaction
    Server for z/OS identity propagation support.
  cli_alias: generate-icrx
- name: PPICRXUserRealm
  type: String
  description: Specify the realm of a user for ICRX identity propagation. The ICRX
    realm is defined in the SAF configuration. Generally, this value is the equivalent
    of the prefix for a DN in a user registry.
  cli_alias: icrx-user-realm
  ignored_when:
  - evaluation: property-does-not-equal
    attribute: PPICRXToken
    value:
    - 'on'
- name: PPSAMLIdentityProvider
  type: Bool
  default: false
  description: <p>Specify whether to generate a SAML assertion. The SAML assertion
    can contain an authentication statement, an authorization statement, an attribute
    statement, or any combination of these statements. The SAML attribute value can
    be a user LDAP Attribute value that can be retrieved in the following ways.</p><ul><li>Directly
    by the LDAP authentication or authorization method with the list of LDAP attribute
    names that are defined by user auxiliary LDAP attributes.</li><li>Indirectly with
    the <tt>var://context/ldap/auxiliary-attributes</tt> variable in a stylesheet
    or GatewayScript file. A call with <tt>dp:ldap-search</tt> to the user registry,
    and put the <tt>attribute-value</tt> elements of search result to the variable.</li></ul><p>To
    sign the SAML assertion, configure a WS-Security sign action or SAML enveloped
    sign action after the AAA action in the processing rule.</p>
  cli_alias: generate-saml-assertion
- name: PPSAMLProtocol
  type: String
  enum:
  - assertion
  - response
  default: assertion
  description: Specify the SAML protocol to wrap up the SAML assertion. By default,
    the SAML assertion can be put to WS-Security wrap-up later.
  cli_alias: saml-protocol
  ignored_when:
  - evaluation: property-equals
    attribute: PPSAMLIdentityProvider
    value:
    - 'off'
- name: PPSAMLResponseDestination
  type: String
  description: Specify the destination for a SAML response. This information can prevent
    malicious forwarding of requests to unintended recipients, which is a required
    protection by some protocol bindings. If it is present, the actual recipient must
    check that the URI reference identifies the location at which the message was
    received. If it does not check that the URI reference identifies the location,
    the request must be discarded. Some protocol bindings might require the use of
    this attribute.
  cli_alias: saml-response-destination
  ignored_when:
  - evaluation: logical-or
    conditions:
    - evaluation: property-equals
      attribute: PPSAMLIdentityProvider
      value:
      - 'off'
    - evaluation: property-does-not-equal
      attribute: PPSAMLVersion
      value:
      - '2.0'
    - evaluation: property-equals
      attribute: saml-protocol
      value:
      - assertion
- name: PPResultWrapup
  type: String
  enum:
  - wssec-replace
  - wssec-new
  - wssec-inject
  - soap-body
  - none
  default: wssec-replace
  description: Specify the method to generate the result. When the DataPower Gateway
    is configured for SOAP or WS-Security processing, different output methods can
    be used. By default, generates the results to an existing WS-Security message
    and replaces the same token in the requesting message.
  cli_alias: result-wrapup
  ignored_when:
  - evaluation: property-equals
    attribute: PPSAMLIdentityProvider
    value:
    - 'off'
- name: PPSAMLAssertionType
  dm_type: DmSAMLStatementType
  default: authentication+attribute
  description: Specify the supported SAML statement types. By default, supports both
    attributes and authentication statements.
  cli_alias: saml-assertion-type
  required_when:
  - evaluation: property-equals
    attribute: PPSAMLIdentityProvider
    value:
    - 'on'
  ignored_when:
  - evaluation: property-equals
    attribute: PPSAMLIdentityProvider
    value:
    - 'off'
- name: PPSAMLSubjectConfirm
  type: String
  enum:
  - bearer
  - hok
  - sv
  default: bearer
  description: Specify the method that allows the destination system to confirm the
    subject of the SAML assertion. By default, the subject is bearer.
  cli_alias: saml-subject-confirm
  ignored_when:
  - evaluation: property-equals
    attribute: PPSAMLIdentityProvider
    value:
    - 'off'
- name: PPSAMLNameID
  type: Bool
  default: true
  description: Specify whether the SAML Subject element contains the name identifier.
    By default, the SAML subject contains the name identifier. When disabled, the
    SAML subject does not contain the name identifier. Use this value if the subject
    confirmation method is holder-of-key because the key represent the same entity
    as the subject.
  cli_alias: saml-nid
  ignored_when:
  - evaluation: property-equals
    attribute: PPSAMLIdentityProvider
    value:
    - 'off'
- name: PPSAMLNameIDFormat
  type: String
  description: Specify the URI reference that represents the classification of string-based
    identifier information. Any standard or arbitrary URI is allowed. If the value
    is an empty string, the DataPower Gateway attempts to determine the value from
    the AAA context. Some SAML protocols require a specified value, such as <tt>urn:oasis:names:tc:SAML:2.0:nameid-format:entity</tt>
    or <tt>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</tt> .
  cli_alias: saml-nid-format
  ignored_when:
  - evaluation: logical-or
    conditions:
    - evaluation: property-equals
      attribute: PPSAMLIdentityProvider
      value:
      - 'off'
    - evaluation: property-equals
      attribute: PPSAMLNameID
      value:
      - 'off'
- name: PPSAMLRecipient
  type: String
  description: Specify a URI that identifies the entity or location that an attesting
    entity can present the assertion to. Any standard or arbitrary URI is allowed.
    If the value is an empty string, the optional attribute is not generated. This
    setting is applicable for only SAML 2.0.
  cli_alias: saml-recipient
  ignored_when:
  - evaluation: property-equals
    attribute: PPSAMLIdentityProvider
    value:
    - 'off'
- name: PPSAMLAudience
  type: String
  description: Specify URI references that identify an intended audience. Enter any
    number of the audience URIs to process the generated SAML assertion. If the value
    is an empty string, the SAML audience is not restricted. If there is more than
    one audience URI, use a + delimiter between URIs. In this case, you must convert
    any URI that contains the + characters to \+.
  cli_alias: saml-audience
  ignored_when:
  - evaluation: property-equals
    attribute: PPSAMLIdentityProvider
    value:
    - 'off'
- name: PPSAMLOmitNotBefore
  type: Bool
  default: false
  description: whether to omit the <tt>NotBefore</tt> attribute in the SAML assertion.
    When omitted, the assertion is considered valid even before the time it was issued.
    By default, the <tt>NotBefore</tt> attribute is not omitted. When enabled, the
    <tt>NotBefore</tt> attribute in the SAML assertion is omitted. This behavior might
    be required to respond to an <tt>AuthnRequest</tt> .
  cli_alias: saml-omit-notbefore
  ignored_when:
  - evaluation: property-equals
    attribute: PPSAMLIdentityProvider
    value:
    - 'off'
- name: PPOneTimeUse
  type: Bool
  default: false
  description: Specify whether the destination system or relying party should cache
    the generated token. The generated token might contain the property for this characteristic,
    which is especially practical for SAML assertions. By default, the destination
    system can cache the generated token. When enabled, he destination system should
    not cache the generated token.
  cli_alias: one-time-use
  ignored_when:
  - evaluation: logical-or
    conditions:
    - evaluation: property-equals
      attribute: PPSAMLIdentityProvider
      value:
      - 'off'
    - evaluation: property-equals
      attribute: PPSAMLVersion
      value:
      - '1.0'
- name: PPSAMLProxy
  type: Bool
  default: false
  description: <p>Specify whether to allow SAML proxy restriction. The generated SAML
    assertion provides limitations that the asserting party imposes on relying parties
    that want to act as asserting parties.</p><ul><li>A relying party that acts as
    an asserting party can issue subsequent assertions that are based on the information
    in the original assertion.</li><li>The relying party cannot issue an assertion
    that violates these restrictions.</li></ul><p>By default, proxy restrictions are
    not allowd. When enabled, proxy restrictions are allows.</p>
  cli_alias: saml-proxy
  ignored_when:
  - evaluation: logical-or
    conditions:
    - evaluation: property-equals
      attribute: PPSAMLIdentityProvider
      value:
      - 'off'
    - evaluation: property-does-not-equal
      attribute: PPSAMLVersion
      value:
      - '2.0'
- name: PPSAMLProxyAudience
  type: String
  description: Specify the set of audiences (proxy) to whom the asserting party permits
    new assertions to be issued based on this assertion. If the value is an empty
    string, the audience for the <tt>ProxyRestriction</tt> is not issued with this
    SAML assertion. If there is more than one audience URI, use a + delimiter between
    URIs. In this case, you must convert any URI that contains the + characters to
    \+.
  cli_alias: saml-proxy-audience
  ignored_when:
  - evaluation: logical-or
    conditions:
    - evaluation: property-equals
      attribute: PPSAMLIdentityProvider
      value:
      - 'off'
    - evaluation: property-equals
      attribute: PPSAMLProxy
      value:
      - 'off'
    - evaluation: property-does-not-equal
      attribute: PPSAMLVersion
      value:
      - '2.0'
- name: PPSAMLProxyCount
  type: Int64
  maximum: 65535
  default: 0
  description: Specify the maximum number of indirections that the asserting party
    permits between this assertion and an assertion that was issued. Enter a value
    in the range 0 - 65535. The default value is 0. A value of 0 indicates that a
    relying party must not issue an assertion to another relying party based on this
    assertion. If greater than zero, any assertion that is issued must itself contain
    a <tt>ProxyRestriction</tt> element with a <tt>Count</tt> value of at most one
    less than this value.
  cli_alias: saml-proxy-count
  ignored_when:
  - evaluation: logical-or
    conditions:
    - evaluation: property-equals
      attribute: PPSAMLIdentityProvider
      value:
      - 'off'
    - evaluation: property-equals
      attribute: PPSAMLProxy
      value:
      - 'off'
    - evaluation: property-does-not-equal
      attribute: PPSAMLVersion
      value:
      - '2.0'
- name: PPSAMLAuthzAction
  type: String
  enum:
  - AllHTTP
  - POST
  - GET
  - PUT
  - HEAD
  - General
  - Read
  - Write
  - Execute
  - Delete
  - Control
  - NegatedRead
  - NegatedWrite
  - NegatedExecute
  - NegatedDelete
  - NegatedControl
  default: AllHTTP
  description: Specify the standard action that the subject can take on the resource.
    The SAML specification defines the list of action identifiers with corresponding
    namespace URIs. By default, all HTTP operations, where <tt>urn:oasis:names:tc:SAML:1.0:action:ghpp</tt>
    is the namespace URI.
  cli_alias: saml-authz-action
  ignored_when:
  - evaluation: logical-or
    conditions:
    - evaluation: property-equals
      attribute: PPSAMLIdentityProvider
      value:
      - 'off'
    - evaluation: property-does-not-equal
      attribute: PPSAMLAssertionType
      value:
      - authorization
- name: PPSAMLAttributes
  type: String
  reference_to: SAMLAttributes
  description: Specify the name of an existing SAML attributes. The SAML attributes
    define the information to put in the SAML assertion to generate the attribute
    statement. Each SAML attribute requires the name, format or namespace, and value.
    The value can be from a DataPower variable.
  cli_alias: saml-attributes
  required_when:
  - evaluation: logical-and
    conditions:
    - evaluation: property-equals
      attribute: PPSAMLIdentityProvider
      value:
      - 'on'
    - evaluation: property-equals
      attribute: PPSAMLAssertionType
      value:
      - attribute
  ignored_when:
  - evaluation: logical-true
- name: PPLTPAInsertCookie
  type: Bool
  default: true
  description: Specify whether to insert a <tt>Set-Cookie</tt> header in the response
    that contains the LTPA token. This setting is for generating LTPA tokens that
    are not wrapped in the WS-Security <tt>wsse:Security</tt> header. By default,
    inserts a Set-Cookie header in the response. When disabled, does not insert a
    Set-Cookie header in the response.
  cli_alias: ltpa-insert-cookie
  ignored_when:
  - evaluation: logical-or
    conditions:
    - evaluation: property-equals
      attribute: PPLTPA
      value:
      - 'off'
    - evaluation: property-equals
      attribute: PPUseWSSec
      value:
      - 'on'
- name: PPTAMPACPropagate
  type: Bool
  default: false
  description: Specify whether to add the Access Manager privilege attribute certificate
    (PAC) token to an HTTP header. The PAC token was returned from the previous authentication
    or authorization phase. By default, does not add the PAC token. When enabled,
    adds the PAC token.
  cli_alias: propagate-tam-pac
- name: PPTAMHeader
  type: String
  default: iv-creds
  description: Specify the name of the HTTP header to store the token in. The default
    value is iv_creds, which is HTTP header that WebSEAL uses to write headers.
  cli_alias: tam-header
  required_when:
  - evaluation: property-equals
    attribute: PPTAMPACPropagate
    value:
    - 'on'
  ignored_when:
  - evaluation: property-equals
    attribute: PPTAMPACPropagate
    value:
    - 'off'
- name: PPTAMHeaderSize
  type: Int64
  default: 0
  description: Specify the maximum size in bytes of HTTP headers. A value of 0 disables
    this function. If the value is nonzero, the PAC token is split across multiple
    headers of the specified length. The default value is 0.
  cli_alias: tam-header-size
  required_when:
  - evaluation: property-equals
    attribute: PPTAMPACPropagate
    value:
    - 'on'
  ignored_when:
  - evaluation: property-equals
    attribute: PPTAMPACPropagate
    value:
    - 'off'
- name: PPKerberosUseS4U2Proxy
  type: Bool
  default: false
  description: Specify whether to use constrained delegation, namely S4U2Proxy, when
    a WS-Security Kerberos AP-REQ token or a Kerberos SPNEGO token is generated. By
    default, does not use constrained delegation. When enabled, uses constrained delegation.
  cli_alias: kerberos-use-s4u2proxy
  ignored_when:
  - evaluation: logical-or
    conditions:
    - evaluation: property-does-not-equal
      attribute: AUMethod
      value:
      - kerberos
    - evaluation: logical-and
      conditions:
      - evaluation: property-equals
        attribute: PPKerberosTicket
        value:
        - 'off'
      - evaluation: property-equals
        attribute: PPKerberosSPNEGOToken
        value:
        - 'off'
- name: PPCookieAttributes
  type: String
  reference_to: CookieAttributePolicy
  description: Specify the cookie attribute policy to include standard or custom attributes
    in the cookie. The response message that contains a <tt>Set-Cookie</tt> header
    is updated with the attributes defined in this policy.
  cli_alias: cookie-attributes
  ignored_when:
  - evaluation: logical-or
    conditions:
    - evaluation: property-does-not-equal
      attribute: PPLTPA
      value:
      - 'on'
    - evaluation: property-does-not-equal
      attribute: PPLTPAInsertCookie
      value:
      - 'on'
- name: PPKerberosUseS4U2SelfAndS4U2Proxy
  type: Bool
  default: false
  description: <p>Specify whether to use protocol transition, namely S4U2Self, and
    then use constrained delegation, namely S4U2Proxy.</p><ul><li>Use S4U2Self to
    convert a non-Kerberos token to a Kerberos token to the DataPower Gateway itself.</li><li>Use
    S4U2Proxy to generate a WS-Security Kerberos AP-REQ token or a Kerberos SPNEGO
    token.</li></ul><p>By default, does not use protocol transition and constrained
    delegation. When enabled, uses protocol transition and constrained delegation.</p>
  cli_alias: kerberos-use-s4u2self
  ignored_when:
  - evaluation: logical-or
    conditions:
    - evaluation: property-equals
      attribute: AUMethod
      value:
      - kerberos
    - evaluation: logical-and
      conditions:
      - evaluation: property-equals
        attribute: PPKerberosTicket
        value:
        - 'off'
      - evaluation: property-equals
        attribute: PPKerberosSPNEGOToken
        value:
        - 'off'
- name: PPKerberosClientSource
  type: String
  enum:
  - mc-output
  - custom-url
  - ctx-var
  default: mc-output
  description: Specify where to get the principal name of the Kerberos client. By
    default, uses the output of credential mapping. The client principal is based
    on the authenticated identity, which is followed by the corresponding realm name.
    For example, if the authenticated user is <tt>alice</tt> , the client principal
    name can be <tt>HTTP/alice.datapower.com@DATAPOWER.COM</tt> . The client principal
    must be present in the KDC for S4U2Self to work.
  cli_alias: kerberos-client-source
  required_when:
  - evaluation: logical-and
    conditions:
    - evaluation: logical-or
      conditions:
      - evaluation: property-equals
        attribute: PPKerberosTicket
        value:
        - 'on'
      - evaluation: property-equals
        attribute: PPKerberosSPNEGOToken
        value:
        - 'on'
    - evaluation: property-does-not-equal
      attribute: AUMethod
      value:
      - kerberos
    - evaluation: property-equals
      attribute: PPKerberosUseS4U2SelfAndS4U2Proxy
      value:
      - 'on'
  ignored_when:
  - evaluation: logical-true
- name: PPKerberosSelf
  type: String
  description: Specify the principal name of the DataPower Gateway.
  cli_alias: kerberos-self-principal
  required_when:
  - evaluation: logical-and
    conditions:
    - evaluation: logical-or
      conditions:
      - evaluation: property-equals
        attribute: PPKerberosTicket
        value:
        - 'on'
      - evaluation: property-equals
        attribute: PPKerberosSPNEGOToken
        value:
        - 'on'
    - evaluation: property-does-not-equal
      attribute: AUMethod
      value:
      - kerberos
    - evaluation: property-equals
      attribute: PPKerberosUseS4U2SelfAndS4U2Proxy
      value:
      - 'on'
  ignored_when:
  - evaluation: logical-true
- name: PPKerberosSelfKeytab
  type: String
  reference_to: CryptoKerberosKeytab
  description: Specify the name of the Kerberos keytab that defines the keytab for
    the DataPower Gateway. This keytab is required to authenticate the DataPower Gateway
    to the KDC.
  cli_alias: kerberos-self-keytab
  required_when:
  - evaluation: logical-and
    conditions:
    - evaluation: logical-or
      conditions:
      - evaluation: property-equals
        attribute: PPKerberosTicket
        value:
        - 'on'
      - evaluation: property-equals
        attribute: PPKerberosSPNEGOToken
        value:
        - 'on'
    - evaluation: property-does-not-equal
      attribute: AUMethod
      value:
      - kerberos
    - evaluation: property-equals
      attribute: PPKerberosUseS4U2SelfAndS4U2Proxy
      value:
      - 'on'
  ignored_when:
  - evaluation: logical-true
- name: PPKerberosClientCustomURL
  type: String
  description: <p>Specify the location of the stylesheet or GatewayScript file. This
    file returns the client principal name within the <tt>kerberos-client-principal</tt>
    element. This file gets the following input.</p><ul><li>The output of all the
    steps that are executed in this AAA action.</li><li>The incoming request message.</li></ul>
  cli_alias: kerberos-client-custom-url
  required_when:
  - evaluation: logical-and
    conditions:
    - evaluation: logical-or
      conditions:
      - evaluation: property-equals
        attribute: PPKerberosTicket
        value:
        - 'on'
      - evaluation: property-equals
        attribute: PPKerberosSPNEGOToken
        value:
        - 'on'
    - evaluation: property-does-not-equal
      attribute: AUMethod
      value:
      - kerberos
    - evaluation: property-equals
      attribute: PPKerberosUseS4U2SelfAndS4U2Proxy
      value:
      - 'on'
    - evaluation: property-equals
      attribute: PPKerberosClientSource
      value:
      - custom-url
  ignored_when:
  - evaluation: logical-true
- name: PPKerberosClientCtxVar
  type: String
  description: Specify the context variable. The value of this context variable is
    used as the Kerberos client principal. This context variable must be specified
    in the <tt>var://context/name</tt> format. For example, <tt>var://context/AAA/krb-client-princ</tt>
    . You can use the set variable action to set this variable in the processing rule
    before the AAA action.
  cli_alias: kerberos-client-ctx-var
  required_when:
  - evaluation: logical-and
    conditions:
    - evaluation: logical-or
      conditions:
      - evaluation: property-equals
        attribute: PPKerberosTicket
        value:
        - 'on'
      - evaluation: property-equals
        attribute: PPKerberosSPNEGOToken
        value:
        - 'on'
    - evaluation: property-does-not-equal
      attribute: AUMethod
      value:
      - kerberos
    - evaluation: property-equals
      attribute: PPKerberosUseS4U2SelfAndS4U2Proxy
      value:
      - 'on'
    - evaluation: property-equals
      attribute: PPKerberosClientSource
      value:
      - ctx-var
  ignored_when:
  - evaluation: logical-true
- name: PPKerberosServerSource
  type: String
  enum:
  - as-is-string
  - custom-url
  - ctx-var
  default: as-is-string
  description: Specify where to get the principal name of the Kerberos server. By
    default, the server principal name is the value that is specified by the Kerberos
    server principal property. Ensure that the server principal is in the correct
    format. For example, <tt>HTTP/was-backend.datapower.com@DATAPOWER.COM</tt> .
  cli_alias: kerberos-server-source
  required_when:
  - evaluation: logical-or
    conditions:
    - evaluation: property-equals
      attribute: PPKerberosTicket
      value:
      - 'on'
    - evaluation: property-equals
      attribute: PPKerberosSPNEGOToken
      value:
      - 'on'
  ignored_when:
  - evaluation: logical-true
- name: PPKerberosServerCustomURL
  type: String
  description: <p>Specify the location of the stylesheet or GatewayScript file. This
    file returns the client principal name within the <tt>kerberos-server-principal</tt>
    element.</p><p>When constrained delegation is not used, this file gets the following
    input.</p><ul><li>The output of all phases that this AAA action processes.</li><li>The
    incoming request message.</li></ul><p>When constrained delegation is used, this
    file gets the following input.</p><ul><li>The output of only the identity extraction
    phase.</li><li>The incoming request message.</li></ul>
  cli_alias: kerberos-server-custom-url
  required_when:
  - evaluation: logical-and
    conditions:
    - evaluation: logical-or
      conditions:
      - evaluation: property-equals
        attribute: PPKerberosTicket
        value:
        - 'on'
      - evaluation: property-equals
        attribute: PPKerberosSPNEGOToken
        value:
        - 'on'
    - evaluation: property-equals
      attribute: PPKerberosServerSource
      value:
      - custom-url
  ignored_when:
  - evaluation: logical-true
- name: PPKerberosServerCtxVar
  type: String
  description: Specify the context variable. The value of this context variable is
    used as the Kerberos server principal. This context variable must be specified
    in the <tt>var://context/name format</tt> . For example, <tt>var:///context/AAA/krb-server-princ</tt>
    . You can use the set variable action to set this variable in the processing rule
    before the AAA action.
  cli_alias: kerberos-server-ctx-var
  required_when:
  - evaluation: logical-and
    conditions:
    - evaluation: logical-or
      conditions:
      - evaluation: property-equals
        attribute: PPKerberosTicket
        value:
        - 'on'
      - evaluation: property-equals
        attribute: PPKerberosSPNEGOToken
        value:
        - 'on'
    - evaluation: property-equals
      attribute: PPKerberosServerSource
      value:
      - ctx-var
  ignored_when:
  - evaluation: logical-true
- name: PPSSLClientConfigType
  type: String
  enum:
  - proxy
  - client
  default: proxy
  description: Specify the TLS client type to secure connections.
  cli_alias: ssl-client-type
  ignored_when:
  - evaluation: property-equals
    attribute: PPSAMLSendSLO
    value:
    - 'off'
- name: PPSSLClientProfile
  type: String
  reference_to: SSLClientProfile
  description: Specify the TLS client profile to secure connections.
  cli_alias: ssl-client
  ignored_when:
  - evaluation: logical-or
    conditions:
    - evaluation: property-equals
      attribute: PPSAMLSendSLO
      value:
      - 'off'
    - evaluation: property-does-not-equal
      attribute: PPSSLClientConfigType
      value:
      - client
- name: PPLTPAKeyFilePasswordAlias
  type: String
  reference_to: PasswordAlias
  description: Specify the the alias for password of the LTPA key file.
  cli_alias: ltpa-key-file-password-alias
  required_when:
  - evaluation: logical-and
    conditions:
    - evaluation: property-equals
      attribute: PPLTPAKeyFilePassword
      value:
      - ''
    - evaluation: logical-and
      conditions:
      - evaluation: property-equals
        attribute: PPLTPA
        value:
        - 'on'
      - evaluation: property-value-in-list
        attribute: PPLTPAVersion
        value:
        - LTPA
        - LTPA1FIPS
        - LTPA2
        - LTPA2WAS7
  ignored_when:
  - evaluation: logical-or
    conditions:
    - evaluation: property-equals
      attribute: PPLTPA
      value:
      - 'off'
    - evaluation: logical-and
      conditions:
      - evaluation: property-value-not-in-list
        attribute: PPLTPAVersion
        value:
        - LTPA
        - LTPA1FIPS
        - LTPA2
        - LTPA2WAS7
      - evaluation: property-value-in-list
        attribute: PPLTPAVersion
        value:
        - LTPADomino
- name: PPJWT
  type: Bool
  default: false
  description: Specify whether to generate a JWT token.
  cli_alias: jwt
- name: PPJWTGenerator
  type: String
  reference_to: AAAJWTGenerator
  description: Specify the JWT generator.
  cli_alias: generate-jwt
  required_when:
  - evaluation: property-equals
    attribute: PPJWT
    value:
    - 'on'
  ignored_when:
  - evaluation: logical-true
