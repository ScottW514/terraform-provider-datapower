name: AAAJWTValidator
description: <p>The JSON Web Token (JWT) Validator specifies credentials and different
  methods to validate a JWT.</p>
cli_alias: jwt-validator
cmd_group: crypto
rest_endpoint: /mgmt/config/{domain}/AAAJWTValidator
attributes:
- name: Id
  tf_name: id
  path: name
  type: String
  required: true
  test_value: '"ResTestAAAJWTValidator"'
  test_expect_ds: '"AccTest_AAAJWTValidator"'
  example: AAAJWTValidatorName
  description: Name of the object. Must be unique among object types in application
    domain.
  string_patterns:
  - ^[a-zA-Z0-9_-]+$
  string_min_length: 1
  string_max_length: 128
- name: AppDomain
  tf_name: app_domain
  type: String
  required: true
  example: test_domain
  description: The name of the application domain the object belongs to
  string_patterns:
  - ^[a-zA-Z0-9_-]+$
  string_min_length: 1
  string_max_length: 128
- name: UserSummary
  type: String
  description: A descriptive summary for the JWT Validator configuration.
  cli_alias: summary
- name: Issuer
  type: String
  description: The optional issuer claim. The "iss" PCRE can be used to verify the
    JWT. The maximum length of the value is 256 characters.
  cli_alias: iss
  string_max_length: 256
  string_min_length: 0
- name: Aud
  type: String
  description: The optional audience claim. The "aud" PCRE can be used to verify the
    JWT. The maximum length of the value is 256 characters.
  cli_alias: aud
  string_max_length: 256
  string_min_length: 0
- name: ValMethod
  dm_type: DmJWTValMethod
  description: Various methods can be used to validate the JWT. You can decrypt the
    JWT, verify the JWT signature, and process a custom GatewayScript or XSLT file
    for further processing.
  cli_alias: validate-method
- name: CustomizedScript
  type: String
  description: A custom GatewayScript or XSLT file is processed to validate the JWT.
    The GatewayScript or XSLT file must be stored in the <tt>local:</tt> (the default)
    or <tt>store:</tt> directory. This field is meaningful when you select <tt>Custom
    processing</tt> in the Validation method field.
  cli_alias: customized-script
  required_when:
  - evaluation: property-value-in-list
    attribute: ValMethod
    value:
    - customized
  ignored_when:
  - evaluation: logical-true
  file_locations:
  - local
  - store
- name: DecryptCredentialType
  type: String
  enum:
  - pkix
  - ssecret
  - jwk
  - jwk-remote
  - custom
  description: Various decryption methods (such as PKIX, shared secret key, JSON Web
    Key (JWK), custom processing, remotely retrieve JWK) can be used to decrypt the
    JWT. The default method is PKIX. This field is meaningful when you select <tt>Decrypt</tt>
    in the Validation method field.
  cli_alias: decrypt-type
  required_when:
  - evaluation: property-value-in-list
    attribute: ValMethod
    value:
    - decrypt
  ignored_when:
  - evaluation: logical-true
- name: DecryptKey
  type: String
  reference_to: CryptoKey
  description: The private key can be used to decrypt the JWT. You can get the key
    alias by configuring the Crypto Key. This field is meaningful when you select
    <tt>Decrypt</tt> in the Validation Method field and choose <tt>PKIX</tt> from
    the Decrypt method list.
  cli_alias: decrypt-key
  required_when:
  - evaluation: logical-and
    conditions:
    - evaluation: property-value-in-list
      attribute: ValMethod
      value:
      - decrypt
    - evaluation: property-value-in-list
      attribute: DecryptCredentialType
      value:
      - pkix
  ignored_when:
  - evaluation: logical-true
- name: DecryptSSecret
  type: String
  reference_to: CryptoSSKey
  description: The shared secret key can be used to decrypt the JWT. You can get the
    shared secret key alias by configuring the Crypto Shared Secret Key. This field
    is meaningful when you select <tt>Decrypt</tt> in the Validation method field
    and choose <tt>Shared secret</tt> from the Decrypt method list.
  cli_alias: decrypt-ssecret
  required_when:
  - evaluation: logical-and
    conditions:
    - evaluation: property-value-in-list
      attribute: ValMethod
      value:
      - decrypt
    - evaluation: property-value-in-list
      attribute: DecryptCredentialType
      value:
      - ssecret
  ignored_when:
  - evaluation: logical-true
- name: DecryptJWK
  type: String
  description: 'The file containing the JWK or key set is fetched to decrypt the JWT.
    The file must be stored in the local: or store: directory. This field is meaningful
    when you select <tt>Decrypt</tt> in the Validation method field and choose <tt>JWK</tt>
    from the Decrypt method list.'
  cli_alias: decrypt-jwk
  required_when:
  - evaluation: logical-and
    conditions:
    - evaluation: property-value-in-list
      attribute: ValMethod
      value:
      - decrypt
    - evaluation: property-value-in-list
      attribute: DecryptCredentialType
      value:
      - jwk
  ignored_when:
  - evaluation: logical-true
  file_locations:
  - local
  - store
- name: DecryptFetchCredURL
  type: String
  default: http://example.com/v3/key
  example: https://example.com/v3/key
  description: The URL indicates the source location where the decryption credentials
    can be fetched for decrypting the JWT. The URL must be in the format of http or
    https. By default, the URL is http://example.com/v3/key. This field is meaningful
    when you choose <tt>Decrypt</tt> in the Validation method field and choose <tt>Remotely
    retrieve JWK</tt> from the Decrypt method list.
  cli_alias: decrypt-fetch-cred-url
  required_when:
  - evaluation: logical-and
    conditions:
    - evaluation: property-value-in-list
      attribute: ValMethod
      value:
      - decrypt
    - evaluation: property-value-in-list
      attribute: DecryptCredentialType
      value:
      - jwk-remote
  ignored_when:
  - evaluation: logical-true
  string_max_length: 255
  string_min_length: 7
- name: DecryptFetchCredSSLProfile
  type: String
  reference_to: SSLClientProfile
  description: The TLS client profile is specified for fetching the decryption credentials.
    This field is meaningful when you select <tt>Decrypt</tt> in the Validation method
    field and choose <tt>Remotely retrieve JWK</tt> from the Decrypt method list.
  cli_alias: decrypt-fetch-cred-sslprofile
  ignored_when:
  - evaluation: logical-not
    conditions:
    - evaluation: logical-and
      conditions:
      - evaluation: property-value-in-list
        attribute: ValMethod
        value:
        - decrypt
      - evaluation: property-value-in-list
        attribute: DecryptCredentialType
        value:
        - jwk-remote
- name: ValidateCustom
  type: String
  description: A custom GatewayScript or XSLT file provides the key material information
    to decrypt or verify the JWT. This field is meaningful when you select <tt>Custom</tt>
    for the Decrypt method or Verify method list.
  cli_alias: validate-custom
  required_when:
  - evaluation: logical-or
    conditions:
    - evaluation: logical-and
      conditions:
      - evaluation: property-value-in-list
        attribute: ValMethod
        value:
        - verify
      - evaluation: property-value-in-list
        attribute: VerifyCredentialType
        value:
        - custom
    - evaluation: logical-and
      conditions:
      - evaluation: property-value-in-list
        attribute: ValMethod
        value:
        - decrypt
      - evaluation: property-value-in-list
        attribute: DecryptCredentialType
        value:
        - custom
  ignored_when:
  - evaluation: logical-true
  file_locations:
  - local
  - store
- name: VerifyCredentialType
  type: String
  enum:
  - pkix
  - ssecret
  - jwk
  - jwk-remote
  - custom
  description: Various methods (such as PKIX, shared secret key, JWK, custom processing,
    remotely retrieve JWK) can be used to verify the JWT signature. The default method
    is PKIX. This field is meaningful when you select <tt>Verify</tt> in the Validation
    method field.
  cli_alias: verify-type
  required_when:
  - evaluation: property-value-in-list
    attribute: ValMethod
    value:
    - verify
  ignored_when:
  - evaluation: logical-true
- name: VerifyCertificate
  type: String
  reference_to: CryptoCertificate
  description: The certificate can be used to verify the JWT signature. You can get
    the certificate by configuring the Crypto Certificate. This field is meaningful
    when you select <tt>Verify</tt> in the Validation method field and choose <tt>PKIX</tt>
    from the Verify method field.
  cli_alias: verify-certificate
  required_when:
  - evaluation: logical-and
    conditions:
    - evaluation: property-value-in-list
      attribute: ValMethod
      value:
      - verify
    - evaluation: property-value-in-list
      attribute: VerifyCredentialType
      value:
      - pkix
  ignored_when:
  - evaluation: logical-true
- name: VerifyCertificateAgainstValCred
  type: Bool
  default: false
  description: You decide whether to use validation credentials to verify the JWT
    signature. This field is meaningful when you select <tt>Verify</tt> in the Validation
    method field and choose <tt>PKIX</tt> from the Verify method list.
  cli_alias: verify-certificate-against-valcred
  required_when:
  - evaluation: logical-and
    conditions:
    - evaluation: property-value-in-list
      attribute: ValMethod
      value:
      - verify
    - evaluation: property-value-in-list
      attribute: VerifyCredentialType
      value:
      - pkix
  ignored_when:
  - evaluation: logical-true
- name: VerifyValCred
  type: String
  reference_to: CryptoValCred
  description: The validation credentials can be used to verify the signers' certificate
    for the JWT. You can get credentials by configuring the Crypto Validation Credentials.
    This field is meaningful when you select <tt>on</tt> in the Signature validation
    credentials field.
  cli_alias: valcred
  required_when:
  - evaluation: logical-and
    conditions:
    - evaluation: property-value-in-list
      attribute: ValMethod
      value:
      - verify
    - evaluation: property-value-in-list
      attribute: VerifyCredentialType
      value:
      - pkix
    - evaluation: property-value-in-list
      attribute: VerifyCertificateAgainstValCred
      value:
      - true
  ignored_when:
  - evaluation: logical-true
- name: VerifySSecret
  type: String
  reference_to: CryptoSSKey
  description: The shared secret key can be used to verify the JWT signature. This
    field is meaningful when you select <tt>Verify</tt> in the Validation method field
    and choose <tt>Shared secret</tt> from the Verify method list.
  cli_alias: verify-ssecret
  required_when:
  - evaluation: logical-and
    conditions:
    - evaluation: property-value-in-list
      attribute: ValMethod
      value:
      - verify
    - evaluation: property-value-in-list
      attribute: VerifyCredentialType
      value:
      - ssecret
  ignored_when:
  - evaluation: logical-true
- name: VerifyJWK
  type: String
  description: 'The file containing the JWK or key set is fetched to verify the JWT
    signature. The file must be stored in the local: or store: directory. This field
    is meaningful when you select <tt>Verify</tt> in the Validation method field and
    choose <tt>JWK</tt> from the Verify method list.'
  cli_alias: verify-jwk
  required_when:
  - evaluation: logical-and
    conditions:
    - evaluation: property-value-in-list
      attribute: ValMethod
      value:
      - verify
    - evaluation: property-value-in-list
      attribute: VerifyCredentialType
      value:
      - jwk
  ignored_when:
  - evaluation: logical-true
  file_locations:
  - local
  - store
- name: VerifyFetchCredURL
  type: String
  default: http://example.com/v3/certs
  example: https://example.com/v3/certs
  description: The URL indicates the source location where the verification credentials
    can be fetched for verifying the JWT signature. The URL must be in the format
    of http or https. By default, the URL is http://example.com/v3/certs. This field
    is meaningful when you select <tt>Verify</tt> in the Validation method field and
    choose <tt>Remotely retrieve JWK</tt> from the Verify method list.
  cli_alias: verify-fetch-cred-url
  required_when:
  - evaluation: logical-and
    conditions:
    - evaluation: property-value-in-list
      attribute: ValMethod
      value:
      - verify
    - evaluation: property-value-in-list
      attribute: VerifyCredentialType
      value:
      - jwk-remote
  ignored_when:
  - evaluation: logical-true
  string_max_length: 255
  string_min_length: 7
- name: VerifyFetchCredSSLProfile
  type: String
  reference_to: SSLClientProfile
  description: The TLS client profile is provided for fetching the verification credentials.
    This field is meaningful when you select <tt>Verify</tt> in the Validation method
    field and choose <tt>Remotely retrieve JWK</tt> from the Verify method list.
  cli_alias: verify-fetch-cred-sslprofile
  ignored_when:
  - evaluation: logical-not
    conditions:
    - evaluation: logical-and
      conditions:
      - evaluation: property-value-in-list
        attribute: ValMethod
        value:
        - verify
      - evaluation: property-value-in-list
        attribute: VerifyCredentialType
        value:
        - jwk-remote
- name: Claims
  type: List
  element_type: DmClaim
  description: JWT claims need to be validated. You must enter the claim name, value,
    and data type. If the data type is string, specify the PCRE regular expression
    to verify the claim value.
  cli_alias: claims
- name: UsernameClaim
  type: String
  required: true
  default: sub
  description: This field is applicable only when the JWT Validator is used in the
    AAA identity extraction phase. By default, the value of the "sub" claim is populated
    as the username element of the identity extraction output. Ensure that the claim
    specified in this field is present in the incoming JWT. If no match is found,
    no username is populated in the AAA processing.
  cli_alias: username-claim
