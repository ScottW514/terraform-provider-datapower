name: StylePolicyAction
description: Define processing actions for the processing rules in a processing policy.
cli_alias: action
cmd_group: stylesheetaction
rest_endpoint: /mgmt/config/{domain}/StylePolicyAction
attributes:
- name: Id
  tf_name: id
  path: name
  type: String
  required: true
  test_value: '"ResTestStylePolicyAction"'
  test_expect_ds: '"__default-accept-service-providers-filter-action__"'
  example: StylePolicyActionName
  description: Name of the object. Must be unique among object types in application
    domain.
  string_patterns:
  - ^[a-zA-Z0-9_-]+$
  string_min_length: 1
  string_max_length: 128
- name: AppDomain
  tf_name: app_domain
  type: String
  required: true
  example: test_domain
  description: The name of the application domain the object belongs to
  string_patterns:
  - ^[a-zA-Z0-9_-]+$
  string_min_length: 1
  string_max_length: 128
- name: UserSummary
  type: String
  description: Comments
  cli_alias: summary
- name: Type
  type: String
  enum:
  - validate
  - filter
  - route-action
  - aaa
  - xformpi
  - xformbin
  - cryptobin
  - xform
  - convert-http
  - log
  - results
  - results-async
  - setvar
  - fetch
  - extract
  - rewrite
  - route-set
  - strip-attachments
  - call
  - on-error
  - checkpoint
  - slm
  - quota-enforcement
  - sql
  - conditional
  - for-each
  - event-sink
  - method-rewrite
  - xformng
  - gatewayscript
  - jose-sign
  - jose-verify
  - jose-encrypt
  - jose-decrypt
  - parse
  required: true
  default: xform
  test_expect_ds: '"filter"'
  description: Action type
  cli_alias: type
- name: Input
  type: String
  description: Specify the input context for the action, which identifies the context
    that contains the document to act. Enter the context name, the string <tt>PIPE</tt>
    for streaming mode, or the string <tt>INPUT</tt> to identify the original input
    of the policy rule.
  test_value: '"INPUT"'
  cli_alias: input
- name: Transform
  type: String
  description: Specify the location of the XSL stylesheet or transform file. The location
    uses one of the following formats. <ul><li>Use a URL, for example, <tt>store:///myTest.xsl</tt></li><li>Use
    a context variable that expands to a URL, for example, <tt>var://context/contextName/varName</tt></li><li>Use
    a context, for example, <tt>var://context/Name</tt> or <tt>var://context/Name/</tt>
    . The context runs as a stylesheet.</li></ul>
  test_value: '"tfile"'
  cli_alias: transform
- name: ParseSettingsReference
  dm_type: DmDynamicParseSettingsReference
  description: Specify the configuration that defines the constraints against the
    documents to parse. Use any or all of the following ways to define the constraints.
    <ul><li>Specify a URL reference from which to retrieve the constraints definition.</li><li>Specify
    a literal configuration string in XML or JSON format that contains the constraints
    definition.</li><li>Specify an instance of the parse settings configuration object
    to retrieve constraints definition.</li></ul><p>Precedence rules apply when the
    constraint for the same aspect of an input document is configured with more than
    one method.</p>
  cli_alias: parse-settings-reference
- name: ParseMetricsResultType
  type: String
  enum:
  - none
  - xml
  - json
  - graphql
  default: none
  description: Parse metrics result type
  cli_alias: parse-settings-result-type
- name: ParseMetricsResultLocation
  type: String
  description: Parse metrics result location
  cli_alias: parse-settings-result-location
- name: InputLanguage
  type: String
  enum:
  - xml
  - dfdl
  - xsd
  - json
  default: xml
  description: Input language
  cli_alias: input-language
- name: DFDLInputRootName
  type: String
  description: Specify the root element in the DFDL model from which to start a parse.
    This property is only meaningful in the context of a DFDL parse. <p>For the input
    root name, specify the global xsd:element in the XSD file to use to begin the
    parsing of binary input. The input root name can be selected from the specified
    XSD file or specified as a variable. For a variable, it must resolve to a valid
    namespace URL with the name between braces ({}) as a prefix to the local part.
    For instance, if in the DFDL Schema, the target namespace is "http://example.com/messages"
    and the local element is &lt;xsd:element name="Message">...&lt;/xsd:element>,
    the variable must resolve to {http://example.com/messages}Message.</p><p>The schema
    author might specify the root parse element by using the ibmSchExtn:docRoot="true"
    element within the schema. For instance, &lt;xsd:element ibmSchExtn:docRoot="true"
    name="Message">...&lt;/xsd:element>. In this case, the input root name shows in
    the selection as the element name followed by (@ibmSchExtn:docRoot="true"). Use
    of another value for the DFDL input root name overrides the value that is specified
    in the schema.</p>
  cli_alias: input-root-name
- name: InputDescriptor
  type: String
  description: Specify the input descriptor as understood according to the input language.
    <ul><li>When DFDL, the input descriptor must be a URL to a schema file that defines
    the input. The input descriptor can be a URL to a directory from which you can
    select a schema file a variable that resolves to a schema at run time.</li><li>When
    XML, do not specify an input descriptor.</li><li>When XSD, the input descriptor
    must be a URL to an XML schema.</li><li>When JSON, do not specify an input descriptor.</li></ul>
  cli_alias: input-descriptor
- name: OutputDescriptor
  type: String
  description: Specify the output descriptor as understood by the output language.
    When DFDL, the output descriptor must be a URL to a DFDL schema to serialize the
    output.
  cli_alias: output-descriptor
- name: TransformLanguage
  type: String
  enum:
  - none
  - xquery
  default: none
  description: Transform language
  cli_alias: transform-language
- name: OutputLanguage
  type: String
  enum:
  - default
  - dfdl
  default: default
  description: Output language
  cli_alias: output-language
- name: TxMap
  type: String
  description: Specify the location of the Transformation Extender map file. The generated
    map file is either on the DataPower Gateway or on a remote HTTP or HTTPS server.
    Use one of the following formats. <ul><li>When the file is local, use &lt;directory>:///&lt;file></li><li>When
    the file is remote, use HTTP://&lt;path_qualified_file> or HTTPS://&lt;path_qualified_file></li></ul>
  cli_alias: tx-map
- name: GatewayScriptLocation
  type: String
  description: Specify the location of the GatewayScript file. The file location can
    be specified in one of the following formats. <ul><li>As a URL, where the file
    is in the <tt>local:</tt> , <tt>store:</tt> , or <tt>temporary:</tt> directory.</li><li>As
    a context variable that expands to a URL, such as <tt>var://context/contextName/varName</tt>
    .</li><li>As a context, for example, <tt>var://context/Name</tt> or <tt>var://context/Name/</tt>
    . The context content runs as GatewayScript.</li></ul>
  cli_alias: gatewayscript-location
- name: ActionDebug
  type: Bool
  default: false
  description: Enable GatewayScript debug
  cli_alias: debug
- name: TxTopLevelMap
  type: String
  description: Specify the name of the Transformation Extender map in the map file.
    A map file can contain more than one map. When not specified, the transform uses
    the first map in the file.
  cli_alias: tx-tlm
- name: TxMode
  type: String
  enum:
  - default
  - no-map
  - dpa
  description: Specify the Transformation Extender mode to run the map. DPA is the
    only mode.
  cli_alias: tx-mode
- name: TxAuditLog
  type: String
  description: ITX audit log
  cli_alias: tx-audit-log
- name: Output
  type: String
  description: Specify the output context for the action, which identifies the context
    that receives the document when the action completes. Enter the context name,
    the string <tt>PIPE</tt> for streaming mode, or the string <tt>OUTPUT</tt> to
    identify the final output of the policy rule.
  test_value: '"OUTPUT"'
  cli_alias: output
- name: NoTranscodeUtf8
  type: Bool
  default: false
  description: Specify whether the output from the convert action retains the input
    encoding or uses ISO 8859-1. An encoding is also known as a character set. For
    illustrative purposes, assume UTF-8 is the input encoding. <ul><li>When enabled
    and the input encoding is UTF-8, the output is UTF-8.</li><li>When not enabled
    and the input encoding is UTF-8, the output is ISO 8859-1. This behavior is the
    default behavior.</li></ul>
  cli_alias: charset-transparency
- name: NamedInOutLocationType
  type: String
  enum:
  - default
  - explicit
  - dynamic
  - interop
  default: default
  description: Specify how to locate named inputs and outputs. Use values that are
    appropriate for your Transformation Extender configuration.
  cli_alias: named-inouts
- name: NamedInputs
  type: List
  element_type: DmNamedInOut
  description: Named inputs
  cli_alias: named-input
  test_value: 'null'
- name: NamedOutputs
  type: List
  element_type: DmNamedInOut
  description: Named outputs
  cli_alias: named-output
  test_value: 'null'
- name: Destination
  type: String
  description: Specify the location of the resource, which might be either the source
    or the destination. Specify the location as either a URL or as a variable that
    expands to a URL.
  cli_alias: destination
- name: SchemaURL
  type: String
  description: Specify XML schema for document validation regardless of any <tt>xsi:schemaLocation</tt>
    attributes contained with the document. Identify the schema with one of the following
    formats. <ul><li>Use a URL, for example, <tt>store:///valHigh.xsd</tt></li><li>Use
    a context variable that expands to a URL, for example, <tt>var://context/contextName/varName</tt></li><li>Use
    a context, for example, <tt>var://context/Name</tt> or <tt>var://context/Name/</tt>
    . The context runs as a schema validation.</li></ul>
  cli_alias: schema-url
- name: JSONSchemaURL
  type: String
  description: Specify the JSON schema for JSON document validation. Identify the
    schema with one of the following formats. <ul><li>Use a URL, for example, <tt>local:///valHigh.jsv</tt></li><li>Use
    a context variable that expands to a URL, for example, <tt>var://context/contextName/varName</tt></li><li>Use
    a context, for example, <tt>var://context/Name</tt> or <tt>var://context/Name/</tt>
    . The context runs as a JSON schema validation.</li></ul>
  cli_alias: json-schema-url
- name: WsdlURL
  type: String
  description: Specify the URL of the WSDL file that defines the operations to use
    during the validate action. The WSDL file can reside on the local system or on
    the network. By default, the WSDL validation always applies to the entire input
    message, which can be modified by compile options on the XML manager. <p>Identify
    the WSDL with one of the following formats.</p><ul><li>Use a URL, for example,
    <tt>local:///myTest.wsdl</tt></li><li>Use a context variable that expands to a
    URL, for example, <tt>var://context/contextName/varName</tt></li><li>Use a context,
    for example, <tt>var://context/Name</tt> or <tt>var://context/Name/</tt> . The
    context runs as a WSDL validation.</li></ul>
  cli_alias: wsdl-url
- name: Policy
  type: String
  reference_to: URLRewritePolicy
  description: URL rewrite policy
  cli_alias: urlrewrite-policy
- name: AAA
  type: String
  reference_to: AAAPolicy
  description: AAA policy
  cli_alias: aaa-policy
- name: DynamicSchema
  type: String
  description: Dynamic schema
  cli_alias: dynamic-schema
- name: DynamicStylesheet
  type: String
  description: Dynamic stylesheet
  cli_alias: dynamic-stylesheet
- name: InputConversion
  type: String
  reference_to: HTTPInputConversionMap
  description: Input conversion
  cli_alias: input-conversion
- name: XPath
  type: String
  description: Specify the XPath expression to apply to the input context. Enter the
    XPath expression or a variable in the <tt>var://context/name</tt> format that
    expands to an XPath expression.
  cli_alias: xpath
- name: Variable
  type: String
  example: var://context/CONTEXT-NAME/VAR-NAME
  description: Specify the variable URL in one of the following formats. <ul><li>var://context/CONTEXT-NAME/VAR-NAME
    <p>This format is the primary way to reference variables. var://context/CONTEXT-NAME/_roottree
    is a special variable that holds the value of the context when used as input to
    an action. var://context/CONTEXT-NAME (or var://context/CONTEXT-NAME/) is treated
    as shorthand for var://context/CONTEXT-NAME/_roottree.</p></li><li>var://local/VAR-NAME
    <p>This format can be used to reference variables in the input or output context.
    Because this reference is context-sensitive, The use of var://context/CONTEXT-NAME/VAR-NAME
    is recommended.</p></li><li>var://system/CONTEXT-NAME/VAR-NAME <p>This format
    is used to reference global variables. These variables are rarely used.</p></li><li>var://service/SERVICE-NAME
    <p>This format is used to reference certain internal state variables. These variables
    are defined by the firmware.</p></li></ul>
  cli_alias: variable
- name: Value
  type: String
  description: Specify the variable value. The value can be a number, a string, or
    another variable URL.
  cli_alias: value
- name: SSLClientConfigType
  type: String
  enum:
  - client
  default: client
  test_expect_ds: '"proxy"'
  description: TLS client type
  cli_alias: ssl-client-type
- name: SSLClientCred
  type: String
  reference_to: SSLClientProfile
  description: TLS client profile
  cli_alias: ssl-client
- name: AttachmentURI
  type: String
  description: Specify the attachment to strip. When omitted, all attachments are
    stripped from the context.
  cli_alias: attachment-uri
- name: StylesheetParameters
  type: List
  element_type: DmStylesheetParameter
  description: Stylesheet parameters
  cli_alias: parameter
- name: ErrorMode
  type: String
  enum:
  - abort
  - continue
  - alternative
  description: Error mode
  cli_alias: error-mode
- name: ErrorInput
  type: String
  description: Error input
  cli_alias: error-input
- name: ErrorOutput
  type: String
  description: Error output
  cli_alias: error-output
- name: Rule
  type: String
  description: Processing rule
  cli_alias: rule
- name: OutputType
  type: String
  enum:
  - default
  - binary
  - xml
  description: Output type
  cli_alias: output-type
- name: LogLevel
  type: String
  enum:
  - emerg
  - alert
  - critic
  - error
  - warn
  - notice
  - info
  - debug
  description: Log level
  cli_alias: log-level
- name: LogType
  type: String
  reference_to: LogLabel
  description: Log type
  cli_alias: log-type
- name: Transactional
  type: Bool
  default: false
  description: Transactional
  cli_alias: transactional
- name: CheckpointEvent
  type: String
  enum:
  - Request
  - Response
  - Fault
  - AuthComplete
  description: Event
  cli_alias: event
- name: SLMPolicy
  type: String
  description: SLM policy
  cli_alias: slm
- name: SQLDataSource
  type: String
  reference_to: SQLDataSource
  description: SQL Data Source
  cli_alias: sql-source
- name: SQLText
  type: String
  description: SQL text
  cli_alias: sql-text
- name: SOAPValidation
  type: String
  enum:
  - body
  - body-or-detail
  - ignore-faults
  - envelope
  default: body
  description: Specify which parts of the SOAP message to validate. This setting does
    not affect the validation of the input context to ensure that it is a valid document.
  cli_alias: soap-validation
- name: SQLSourceType
  type: String
  enum:
  - static
  - variable
  - stylesheet
  - static_internal
  default: static
  description: SQL input method
  cli_alias: sql-source-type
- name: JOSESerializationType
  type: String
  enum:
  - compact
  - json
  - json_flat
  description: Serialization
  cli_alias: serialization
- name: JWEEncAlgorithm
  type: String
  enum:
  - A128CBC-HS256
  - A192CBC-HS384
  - A256CBC-HS512
  - A128GCM
  - A192GCM
  - A256GCM
  description: Algorithm
  cli_alias: jwe-enc
- name: JWSSignatureObject
  type: String
  reference_to: JWSSignature
  description: Signature
  cli_alias: jws-signature
- name: JWEHeaderObject
  type: String
  reference_to: JWEHeader
  description: JWE Header
  cli_alias: jwe-header
- name: JOSEVerifyType
  type: String
  enum:
  - identifiers
  - single-cert
  - single-sskey
  description: Identifier type
  cli_alias: jose-verify-type
- name: JOSEDecryptType
  type: String
  enum:
  - identifiers
  - single-key
  - single-sskey
  - direct-key
  description: Identifier Type
  cli_alias: jose-decrypt-type
- name: SignatureIdentifier
  type: List
  reference_to: JOSESignatureIdentifier
  element_type: String
  description: Signature Identifiers
  cli_alias: signature-identifier
- name: RecipientIdentifier
  type: List
  reference_to: JOSERecipientIdentifier
  element_type: String
  description: Recipient Identifiers
  cli_alias: recipient-identifier
- name: SingleCertificate
  type: String
  reference_to: CryptoCertificate
  description: Certificate
  cli_alias: single-cert
- name: SingleKey
  type: String
  reference_to: CryptoKey
  description: Private Key
  cli_alias: single-key
- name: SingleSSKey
  type: String
  reference_to: CryptoSSKey
  description: Shared Secret Key
  cli_alias: single-sskey
- name: JWEDirectKeyObject
  type: String
  reference_to: CryptoSSKey
  description: Direct Key
  cli_alias: direct-key
- name: JWSVerifyStripSignature
  type: Bool
  default: true
  description: Strip Signature
  cli_alias: strip-signature
- name: Asynchronous
  type: Bool
  default: false
  description: Specify whether to mark the action as asynchronous. When asynchronous,
    the action does not need to complete for the next action to start.
  cli_alias: asynchronous
- name: Condition
  type: List
  element_type: DmCondition
  description: Specify the conditions to check and action to run when a match is found
    A single condition maps an XPath expression to search for in the input context
    to an action to run when the condition is found. When no match is found, other
    conditions can be checked.
  cli_alias: condition
- name: ResultsMode
  type: String
  enum:
  - first-available
  - require-all
  - attempt-all
  default: first-available
  description: Specify the processing mode for multiple targets. The default behavior,
    is first available.
  cli_alias: results-mode
- name: RetryCount
  type: Int64
  description: Specify the number of connection attempts. The default value is 0,
    which indicates that the operation fails immediately if the connection fails.
  cli_alias: retry-count
- name: RetryInterval
  type: Int64
  default: 1000
  description: Specify the duration between connection attempts in milliseconds. The
    default value is 1000.
  cli_alias: retry-interval
- name: MultipleOutputs
  type: Bool
  default: false
  description: Specify whether to place parallel outputs into separate contexts. A
    results action can target several targets simultaneously by specifying a variable
    that contains an XML nodeset as the results target. <ul><li>When enabled, the
    context for the output context is ignored. The status of the individual attempts
    to reach the targets are recorded in separate contexts by appending a number.
    For example, the resultant context name is <tt>ctx_1</tt> for the <tt>ctx</tt>
    context name.</li><li>When not enabled, only one result is kept. <ul><li>In require-all
    mode, keep the first target that failed and has no remaining attempts or the last
    target to succeed.</li><li>In attempt-all mode, the last target attempted.</li><li>In
    first-available mode, the first target to succeed or the last to fail.</li></ul></li></ul>
  cli_alias: multiple-outputs
- name: IteratorType
  type: String
  enum:
  - XPATH
  - COUNT
  default: XPATH
  description: Iterator type
  cli_alias: iterator-type
- name: IteratorExpression
  type: String
  description: XPath expression
  cli_alias: iterator-expression
- name: IteratorCount
  type: Int64
  minimum: 1
  maximum: 32768
  description: Specify the number of times to run the loop action. Enter a value in
    the range 1 - 32768.
  cli_alias: iterator-count
- name: LoopAction
  type: String
  description: Loop action
  cli_alias: loop-action
- name: AsyncAction
  type: List
  element_type: String
  description: Asynchronous actions
  cli_alias: async-action
- name: Timeout
  type: Int64
  description: Specify the duration to wait for asynchronous actions to complete in
    milliseconds. After this period, an error is logged. A value of 0 indicates to
    wait forever.
  cli_alias: timeout
- name: WSDLPortQName
  type: String
  description: Specify the QName of the WSDL port that defines the service traffic
    to validate. The value must be a QName in the <tt>{namespace-uri}local-part</tt>
    format or <tt>*</tt> for all ports. When specified and not <tt>*</tt> , only messages
    that are defined for the named port are considered valid.
  cli_alias: wsdl-port
- name: WSDLOperationName
  type: String
  description: Specify the name of the WSDL operation that defines the service traffic
    to validate. The value must be the unqualified name of the operation or <tt>*</tt>
    for all operations. When specified and not <tt>*</tt> , only messages that are
    defined for operations that match the specified name are considered valid.
  cli_alias: wsdl-operation
- name: WSDLMessageDirectionOrName
  type: String
  description: Specify the name or direction of the WSDL input, output, or fault that
    defines the service traffic to validate. Use one of the following values. <ul><li>The
    name of one or more WSDL input, output, or fault components.</li><ul><li><tt><i>operation</i>
    Request</tt> for a specific request.</li><li><tt><i>operation</i> Response"</tt>
    for a specific response.</li><li>The value of the <tt>name</tt> attribute for
    the <tt>&lt;fault></tt> element.</li></ul><li><tt>#input</tt> for the request
    direction in the WSDL file.</li><li><tt>#output</tt> for the response direction
    in the WSDL file.</li><li><tt>*</tt> for all inputs, outputs, and faults in the
    WSDL file.</li></ul><p>When specified and not <tt>*</tt> , only messages that
    are defined for inputs, outputs, and faults that match the specified name or direction
    are considered valid. Faults are considered valid for the response direction.</p>
  cli_alias: wsdl-message-direction-or-name
- name: WSDLAttachmentPart
  type: String
  description: Specify the name of the WSDL message part that defines the content
    of a MIME attachment (mime:content/@part) to validate. The value must be the unqualified
    name of the message part. The name is the same as the part attribute on the corresponding
    <tt>mime:content</tt> component in the WSDL file. When not defined or <tt>*</tt>
    , the root MIME part is validated. The root MIME part is bound to a <tt>soap:body</tt>
    .
  cli_alias: wsdl-attachment-part
- name: MethodRewriteType
  type: String
  enum:
  - POST
  - GET
  - PUT
  - PATCH
  - DELETE
  - HEAD
  default: GET
  description: Method
  cli_alias: http-method
- name: MethodType
  type: String
  enum:
  - POST
  - GET
  - PUT
  - PATCH
  - DELETE
  - HEAD
  default: POST
  description: Method
  cli_alias: http-method-limited
- name: MethodType2
  type: String
  enum:
  - POST
  - GET
  - PUT
  - PATCH
  - DELETE
  - HEAD
  default: POST
  description: Method
  cli_alias: http-method-limited2
- name: PolicyKey
  type: String
  description: <b>Do not modify this value.</b> The DataPower Gateway uses this identifier
    to store the output from the action. The output can be used for external monitoring.
  cli_alias: policy-key
