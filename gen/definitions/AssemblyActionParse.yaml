name: AssemblyActionParse
description: The parse assembly action parses a request as XML or JSON and, if binary,
  parses the binary data into a binary large object (BLOB).
cli_alias: assembly-parse
cmd_group: assembly
rest_endpoint: /mgmt/config/{domain}/AssemblyActionParse
attributes:
- name: Id
  tf_name: id
  path: name
  type: String
  required: true
  test_value: '"ResTestAssemblyActionParse"'
  test_expect_ds: '"AccTest_AssemblyActionParse"'
  example: AssemblyActionParseName
  description: Name of the object. Must be unique among object types in application
    domain.
  string_patterns:
  - ^[a-zA-Z0-9_-]+$
  string_min_length: 1
  string_max_length: 128
- name: AppDomain
  tf_name: app_domain
  type: String
  required: true
  example: test_domain
  description: The name of the application domain the object belongs to
  string_patterns:
  - ^[a-zA-Z0-9_-]+$
  string_min_length: 1
  string_max_length: 128
- name: ParseSettingsReference
  dm_type: DmDynamicParseSettingsReference
  description: Specify the parse settings configuration. A parse settings configuration
    defines the constraints on the documents to parse. You can configure the constraints
    by specifying a URL reference from which to retrieve the constraints definition.
    You can also specify a literal configuration string in XML management interface
    or REST management interface format that contains the constraints definition.
    You can also select a parse settings configuration from the list in Object reference
    to retrieve constraints definition. Precedence rules apply when the constraint
    for the same aspect of an input document is configured with more than one method.
  cli_alias: parse-settings-reference
- name: Input
  type: String
  default: message
  description: Specify the variable in the API context that contains the message to
    parse. The content of the <tt>body</tt> field is the input. The default variable
    is <tt>message</tt> .
  cli_alias: input
- name: WarnOnEmptyInput
  type: Bool
  default: false
  description: Warn on empty input
  cli_alias: warn-on-empty-input
- name: UseContentType
  type: Bool
  default: false
  description: 'Specify whether to attempt a parse with the specified content type.
    This property is only applicable when the expected content type is either JSON
    or XML. When enabled, the action fails when the content type does not match the
    parse-settings. For example, <tt>Content-Type: application/json</tt> and the setting
    is configured for XML. If configured to detect, forced to the specified content
    type.'
  cli_alias: use-content-type
- name: Output
  type: String
  description: Specify the variable in the API context to store the results. The content
    of the <tt>body</tt> field represents the results. The metrics of the parsed message
    can be stored in different parts of the message. The default variable is the same
    as that of the variable for the input message. Therefore, by default, the input
    message is overwritten by the output message.
  cli_alias: output
- name: UserSummary
  type: String
  description: Comments
  cli_alias: summary
- name: Title
  type: String
  description: Title
  cli_alias: title
- name: CorrelationPath
  type: String
  description: Specify the path that correlates the API action to a specific part
    of the API specification. The correlation path specifies the part of the API definition
    that correlates with the API action. This path is exposed in the debug data by
    the API gateway for use by debugging tools. For example, for an API configuration
    that is retrieved from API Connect and specified in an OpenAPI document with IBM
    extensions, this path is the JSON path to the assembly policy in the IBM extensions
    section of the document. The path can be expressed in any form that the debugging
    tool can correlate to the API definition.
  cli_alias: correlation-path
- name: ActionDebug
  type: Bool
  default: false
  description: <p>Specify whether to enable the GatewayScript debugger to troubleshoot
    the following GatewayScript files or script.</p><ul><li>Troubleshoot a GatewayScript
    file that is called from the GatewayScript assembly action.</li><li>Troubleshoot
    a GatewayScript file that is called from an XSLT assembly action that uses the
    <tt>gatewayscript()</tt> extension function.</li><li>Troubleshoot a GatewayScript
    script that is called through the <tt>value</tt> or <tt>default</tt> property
    in the JSON file from the map assembly action.</li></ul><p>To debug a file or
    script, the following conditions must be met.</p><ul><li>The file contains one
    or more <tt>debugger;</tt> statements at the points in your script where you want
    to start debugging.</li><li>The GatewayScript debugger is enabled.</li></ul><p>You
    run the <tt>debug-action</tt> command.</p>
  cli_alias: debug
