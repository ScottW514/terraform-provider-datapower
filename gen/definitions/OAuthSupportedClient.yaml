name: OAuthSupportedClient
description: '<p>An OAuth client profile is the basic building block for an OAuth
  client group. When you create an OAuth client profile, you define its role. As you
  select the role, the WebGUI refreshes to display the appropriate properties.</p><p>You
  can create the following types of OAuth client profiles. <ul><li>A client profile
  for authorization server endpoints: authorization endpoint and token endpoint.</li><li>A
  client profile for the enforcement point for the resource server.</li><li>A client
  profile for both authorization server endpoints and the enforcement point.</li></ul></p><p>When
  creating an OAuth client profile, you can use stylesheets or GatewayScript files
  for customization.</p><p>You can create a customized OAuth client profile that defines
  any combination of roles. Customization uses stylesheets or GatewayScript files
  that must be in the local: or store: directory. For information about the operations
  that these stylesheets or GatewayScript files must define, see the topic in IBM
  Knowledge Center.</p>'
cli_alias: oauth-supported-client
cmd_group: crypto
rest_endpoint: /mgmt/config/{domain}/OAuthSupportedClient
write_only_attrs: true
attributes:
- name: Id
  tf_name: id
  path: name
  type: String
  required: true
  test_value: '"ResTestOAuthSupportedClient"'
  test_expect_ds: '"AccTest_OAuthSupportedClient"'
  example: OAuthSupportedClientName
  description: Name of the object. Must be unique among object types in application
    domain.
  string_patterns:
  - ^[a-zA-Z0-9_-]+$
  string_min_length: 1
  string_max_length: 128
- name: AppDomain
  tf_name: app_domain
  type: String
  required: true
  example: test_domain
  description: The name of the application domain the object belongs to
  string_patterns:
  - ^[a-zA-Z0-9_-]+$
  string_min_length: 1
  string_max_length: 128
- name: UserSummary
  type: String
  description: Specifies a brief comment that describes the configuration.
  cli_alias: summary
- name: Customized
  type: Bool
  default: false
  description: 'Indicates whether the configuration is for a customized OAuth client.
    The configuration of the customized OAuth client is defined in a stylesheet or
    GatewayScript file in the local: or store: directory.'
  cli_alias: customized
- name: CustomizedProcessUrl
  type: String
  description: '<p>Specifies the location of the stylesheet or GatewayScript file
    that defines the customized OAuth client. The stylesheet or GatewayScript file
    must be in the local: or store: directory</p><p>When creating a customized OAuth
    client, the stylesheets or GatewayScript files must define all implementation
    details based on the role of the client. For information about these stylesheets
    or GatewayScript files, see the topic in IBM Knowledge Center.</p><p>You should
    provide support for the following operations: <ul><li>verify-az-request: determine
    whether the initial OAuth request is supported or not.</li><li>issue-az-code:
    issue a temporary authorization code (for the authorization code grant).</li><li>verify-az-code:
    verify a temporary authorization.</li><li>issue-access-token: issue an access_token.</li><li>verify-access-token:
    verify an access_token.</li><li>verify-refresh-token: verify a refresh_token.</li><li>client-revoke-request:
    handle client revocation request.</li><li>owner-revoke-request: handle owner revocation
    request.</li></ul></p>'
  cli_alias: customized-process-url
  required_when:
  - evaluation: property-value-in-list
    attribute: Customized
    value:
    - true
  ignored_when:
  - evaluation: logical-true
  file_locations:
  - local
  - store
- name: OAuthRole
  dm_type: DmOAuthRole
  description: Identifies the role of the client when interacting with a request to
    access a protected resource.
  cli_alias: oauth-role
  test_value: '{"azsvr": true}'
  required_when:
  - evaluation: property-value-in-list
    attribute: Customized
    value:
    - false
  ignored_when:
  - evaluation: logical-true
- name: AZGrant
  dm_type: DmOAuthAZGrantType
  description: Identifies the method to obtain the access token for authorization
    based on the grant type.
  cli_alias: az-grant
  test_value: '{"code": true}'
  required_when:
  - evaluation: logical-or
    conditions:
    - evaluation: property-value-in-list
      attribute: Customized
      value:
      - true
    - evaluation: property-value-in-list
      attribute: OAuthRole
      value:
      - azsvr
  ignored_when:
  - evaluation: logical-true
- name: ClientType
  type: String
  enum:
  - confidential
  - public
  default: confidential
  description: Sets the type of client based on its ability to authenticate securely
    with authorization server endpoints. The client type is based on the definitions
    that the authorization server endpoints use for secure authentication and acceptable
    exposure of client credentials. If the client can securely authenticate, its classification
    is <tt>confidential</tt> .
  cli_alias: client-type
  required_when:
  - evaluation: logical-or
    conditions:
    - evaluation: property-value-in-list
      attribute: Customized
      value:
      - true
    - evaluation: logical-and
      conditions:
      - evaluation: property-value-in-list
        attribute: Customized
        value:
        - false
      - evaluation: property-value-in-list
        attribute: OAuthRole
        value:
        - azsvr
      - evaluation: property-value-in-list
        attribute: AZGrant
        value:
        - code
        - implicit
        - password
        - jwt
    - evaluation: logical-and
      conditions:
      - evaluation: property-value-in-list
        attribute: Customized
        value:
        - false
      - evaluation: property-value-in-list
        attribute: OAuthRole
        value:
        - rssvr
      - evaluation: logical-or
        conditions:
        - evaluation: property-value-in-list
          attribute: UseValidationUrl
          value:
          - true
        - evaluation: property-value-in-list
          attribute: CheckClientCredential
          value:
          - true
  ignored_when:
  - evaluation: logical-true
- name: CheckClientCredential
  type: Bool
  default: false
  description: Identifies whether to verify the client credentials when the DataPower
    Gateway protects the resource server by using access tokens.
  cli_alias: check-client-credential
  ignored_when:
  - evaluation: logical-or
    conditions:
    - evaluation: property-value-in-list
      attribute: Customized
      value:
      - true
    - evaluation: property-value-not-in-list
      attribute: OAuthRole
      value:
      - rssvr
- name: UseValidationUrl
  type: Bool
  default: false
  description: Uses a remote URL to validate the access token.
  cli_alias: use-validation-url
  ignored_when:
  - evaluation: logical-or
    conditions:
    - evaluation: property-value-in-list
      attribute: Customized
      value:
      - true
    - evaluation: property-value-not-in-list
      attribute: OAuthRole
      value:
      - rssvr
- name: ClientAuthenMethod
  type: String
  enum:
  - secret
  - ssl
  - jwt
  default: secret
  description: Identifies the method to authenticate this client.
  cli_alias: client-authen-method
  required_when:
  - evaluation: logical-and
    conditions:
    - evaluation: property-value-in-list
      attribute: Customized
      value:
      - false
    - evaluation: logical-or
      conditions:
      - evaluation: property-value-in-list
        attribute: ClientType
        value:
        - confidential
      - evaluation: logical-and
        conditions:
        - evaluation: property-value-in-list
          attribute: OAuthRole
          value:
          - azsvr
        - evaluation: property-value-in-list
          attribute: AZGrant
          value:
          - client
    - evaluation: logical-or
      conditions:
      - evaluation: logical-and
        conditions:
        - evaluation: property-value-in-list
          attribute: OAuthRole
          value:
          - azsvr
        - evaluation: property-value-in-list
          attribute: AZGrant
          value:
          - code
          - implicit
          - password
          - client
          - jwt
      - evaluation: logical-and
        conditions:
        - evaluation: property-value-in-list
          attribute: OAuthRole
          value:
          - rssvr
        - evaluation: logical-or
          conditions:
          - evaluation: property-value-in-list
            attribute: UseValidationUrl
            value:
            - true
          - evaluation: property-value-in-list
            attribute: CheckClientCredential
            value:
            - true
  ignored_when:
  - evaluation: logical-true
- name: ClientValCred
  type: String
  reference_to: CryptoValCred
  description: An TLS credential used to authenticate the OAuth client sent by remote
    TLS peer during the TLS handshake.
  cli_alias: client-valcred
  required_when:
  - evaluation: logical-and
    conditions:
    - evaluation: property-value-in-list
      attribute: Customized
      value:
      - false
    - evaluation: logical-or
      conditions:
      - evaluation: property-value-in-list
        attribute: ClientType
        value:
        - confidential
      - evaluation: logical-and
        conditions:
        - evaluation: property-value-in-list
          attribute: OAuthRole
          value:
          - azsvr
        - evaluation: property-value-in-list
          attribute: AZGrant
          value:
          - client
    - evaluation: property-value-in-list
      attribute: ClientAuthenMethod
      value:
      - ssl
    - evaluation: logical-or
      conditions:
      - evaluation: logical-and
        conditions:
        - evaluation: property-value-in-list
          attribute: OAuthRole
          value:
          - azsvr
        - evaluation: property-value-in-list
          attribute: AZGrant
          value:
          - code
          - implicit
          - password
          - client
          - jwt
      - evaluation: logical-and
        conditions:
        - evaluation: property-value-in-list
          attribute: OAuthRole
          value:
          - rssvr
        - evaluation: property-value-not-in-list
          attribute: OAuthRole
          value:
          - azsvr
        - evaluation: property-value-in-list
          attribute: CheckClientCredential
          value:
          - true
  ignored_when:
  - evaluation: logical-true
- name: GenerateClientSecret
  type: Bool
  default: true
  test_value: 'false'
  test_expect_ds: '"false"'
  description: <p>Indicates whether to generate the client secret for the OAuth client.
    The specification refers to the client secret as <tt>client_secret</tt> .</p><ul><li>If
    you generate the passphrase, the passphrase becomes the client secret.</li><li>If
    you do not generate the passphrase, you must explicitly define the client secret.</li></ul>
  cli_alias: generate-client-secret
  required_when:
  - evaluation: logical-and
    conditions:
    - evaluation: property-value-in-list
      attribute: Customized
      value:
      - false
    - evaluation: property-value-in-list
      attribute: OAuthRole
      value:
      - azsvr
    - evaluation: logical-or
      conditions:
      - evaluation: property-value-in-list
        attribute: ClientType
        value:
        - confidential
      - evaluation: logical-and
        conditions:
        - evaluation: property-value-in-list
          attribute: OAuthRole
          value:
          - azsvr
        - evaluation: property-value-in-list
          attribute: AZGrant
          value:
          - client
    - evaluation: property-value-in-list
      attribute: ClientSecret
      value:
      - ''
    - evaluation: property-value-in-list
      attribute: AZGrant
      value:
      - code
      - implicit
      - password
      - client
      - jwt
    - evaluation: property-value-in-list
      attribute: ClientAuthenMethod
      value:
      - secret
  ignored_when:
  - evaluation: logical-true
- name: ClientSecret
  type: String
  sensitive: true
  description: Specifies the client secret for the OAuth client. The specification
    references the client secret as <tt>client_secret</tt> .
  cli_alias: client-secret
  test_value: '"secret"'
  write_only: true
  required_when:
  - evaluation: logical-and
    conditions:
    - evaluation: property-value-in-list
      attribute: Customized
      value:
      - false
    - evaluation: logical-or
      conditions:
      - evaluation: property-value-in-list
        attribute: ClientType
        value:
        - confidential
      - evaluation: logical-and
        conditions:
        - evaluation: property-value-in-list
          attribute: OAuthRole
          value:
          - azsvr
        - evaluation: property-value-in-list
          attribute: AZGrant
          value:
          - client
    - evaluation: property-value-in-list
      attribute: ClientAuthenMethod
      value:
      - secret
    - evaluation: logical-or
      conditions:
      - evaluation: logical-and
        conditions:
        - evaluation: property-value-in-list
          attribute: OAuthRole
          value:
          - azsvr
        - evaluation: property-value-in-list
          attribute: GenerateClientSecret
          value:
          - false
        - evaluation: property-value-in-list
          attribute: AZGrant
          value:
          - code
          - implicit
          - password
          - client
          - jwt
          - saml20bearer
      - evaluation: logical-and
        conditions:
        - evaluation: property-value-in-list
          attribute: OAuthRole
          value:
          - rssvr
        - evaluation: property-value-not-in-list
          attribute: OAuthRole
          value:
          - azsvr
        - evaluation: logical-or
          conditions:
          - evaluation: property-value-in-list
            attribute: CheckClientCredential
            value:
            - true
          - evaluation: property-value-in-list
            attribute: UseValidationUrl
            value:
            - true
  ignored_when:
  - evaluation: logical-true
  string_max_length: 127
  string_min_length: 4
- name: Caching
  type: String
  enum:
  - replay
  - system
  - custom
  - diststore
  default: replay
  description: Specifies the caching mechanism to be used.
  cli_alias: caching
  ignored_when:
  - evaluation: logical-or
    conditions:
    - evaluation: property-value-in-list
      attribute: Customized
      value:
      - true
    - evaluation: logical-and
      conditions:
      - evaluation: property-value-not-in-list
        attribute: OAuthRole
        value:
        - azsvr
      - evaluation: property-value-in-list
        attribute: OAuthRole
        value:
        - rssvr
      - evaluation: property-value-in-list
        attribute: UseValidationUrl
        value:
        - true
- name: ValidationURL
  type: String
  example: https://example.com/validate-token
  description: Specifies the validation url.
  cli_alias: validation-url
  required_when:
  - evaluation: logical-and
    conditions:
    - evaluation: property-value-in-list
      attribute: Customized
      value:
      - false
    - evaluation: property-value-in-list
      attribute: OAuthRole
      value:
      - rssvr
    - evaluation: property-value-in-list
      attribute: UseValidationUrl
      value:
      - true
  ignored_when:
  - evaluation: logical-true
  string_max_length: 255
  string_min_length: 7
  string_patterns:
  - https://\[?[-_a-z0-9A-Z.:]+\]?(:[0-9]+)?/[ -~]+$
- name: ValidationFeatures
  dm_type: DmValidationFeatures
  description: Customize how to handle the validation grant type.
  cli_alias: validation-features
  ignored_when:
  - evaluation: logical-or
    conditions:
    - evaluation: property-value-in-list
      attribute: Customized
      value:
      - true
    - evaluation: property-value-not-in-list
      attribute: OAuthRole
      value:
      - azsvr
    - evaluation: property-value-in-list
      attribute: AZGrant
      value:
      - novalidate
- name: RedirectURI
  type: List
  element_type: String
  list_example:
  - ^https://example.com/redirect$
  description: <p>Defines redirection URIs that the OAuth client supports to exchange
    tokens. Specify each redirection URI as a PCRE.</p><p>Redirection URIs help to
    detect malicious clients and prevent phishing attacks. The authorization endpoint
    must have the registered redirection URIs before the authorization endpoint can
    validate the authorization request from the client. For mobile applications, the
    redirection URI can be an application URL; for example, <tt>mobiletrafficapp://</tt>
    that is defined with the <tt>^mobiletrafficapp:\/\/?</tt> PCRE.</p>
  cli_alias: redirect-uri
  test_value: '["^https://example.com/redirect$"]'
  required_when:
  - evaluation: logical-and
    conditions:
    - evaluation: property-value-in-list
      attribute: Customized
      value:
      - false
    - evaluation: property-value-in-list
      attribute: OAuthRole
      value:
      - azsvr
    - evaluation: property-value-in-list
      attribute: AZGrant
      value:
      - implicit
      - code
  ignored_when:
  - evaluation: logical-or
    conditions:
    - evaluation: property-value-in-list
      attribute: Customized
      value:
      - true
    - evaluation: property-value-not-in-list
      attribute: OAuthRole
      value:
      - azsvr
    - evaluation: logical-and
      conditions:
      - evaluation: property-value-in-list
        attribute: Customized
        value:
        - false
      - evaluation: property-value-not-in-list
        attribute: AZGrant
        value:
        - code
        - implicit
- name: CustomScopeCheck
  type: Bool
  default: false
  description: '<p>Indicates how to check the scope for authorization grants and access
    tokens.</p><ul><li>When checking the scope with custom processing, specify the
    location of the stylesheet or GatewayScript file with the <b>Scope Customized
    Process</b> property. The stylesheet or GatewayScript file must be in the local:
    or store: directory.</li><li>When checking the scope with a PCRE, specify the
    expression with the <b>Scope</b> property.</li></ul><p>You should use a custom
    scope check in the following situations. <ul><li>An authorization request where
    the OAuth client requests an authorization code.</li><li>An access request where
    the OAuth client requests an access token.</li><li>A resource request where the
    OAuth client requests a resource.</li></ul></p>'
  cli_alias: custom-scope-check
  ignored_when:
  - evaluation: logical-or
    conditions:
    - evaluation: property-value-in-list
      attribute: Customized
      value:
      - true
    - evaluation: logical-and
      conditions:
      - evaluation: property-value-not-in-list
        attribute: OAuthRole
        value:
        - azsvr
      - evaluation: property-value-in-list
        attribute: UseValidationUrl
        value:
        - true
- name: Scope
  type: String
  example: ^MyPicture$|^MyVideo$
  description: Specifies the PCRE to check the scope. The minimum length of the expression
    is 1 character. The maximum length of the expression is 1023 characters.
  cli_alias: scope
  test_value: '"*"'
  required_when:
  - evaluation: logical-and
    conditions:
    - evaluation: property-value-in-list
      attribute: Customized
      value:
      - false
    - evaluation: property-value-in-list
      attribute: CustomScopeCheck
      value:
      - false
    - evaluation: logical-or
      conditions:
      - evaluation: property-value-in-list
        attribute: OAuthRole
        value:
        - azsvr
      - evaluation: property-value-in-list
        attribute: UseValidationUrl
        value:
        - false
  ignored_when:
  - evaluation: logical-true
  string_max_length: 1023
  string_min_length: 1
- name: ScopeUrl
  type: String
  description: 'Specifies the location of the stylesheet or GatewayScript file for
    a custom scope check. The stylesheet or GatewayScript file must be in the local:
    or store: directory. The stylesheet or GatewayScript file validates and sets the
    scope to check.'
  cli_alias: scope-url
  required_when:
  - evaluation: logical-and
    conditions:
    - evaluation: property-value-in-list
      attribute: Customized
      value:
      - false
    - evaluation: property-value-in-list
      attribute: CustomScopeCheck
      value:
      - true
    - evaluation: logical-or
      conditions:
      - evaluation: property-value-in-list
        attribute: OAuthRole
        value:
        - azsvr
      - evaluation: property-value-in-list
        attribute: UseValidationUrl
        value:
        - false
  ignored_when:
  - evaluation: logical-true
  file_locations:
  - local
  - store
- name: DefaultScope
  type: String
  description: Specifies the default value of the scope if the client does not define
    any scope value in the request.
  cli_alias: default-scope
  ignored_when:
  - evaluation: logical-or
    conditions:
    - evaluation: property-value-in-list
      attribute: Customized
      value:
      - true
    - evaluation: property-value-not-in-list
      attribute: OAuthRole
      value:
      - azsvr
  string_max_length: 255
  string_min_length: 0
- name: TokenSecret
  type: String
  reference_to: CryptoSSKey
  description: Assigns the shared secret key to protect tokens that use the OAuth
    protocol. The shared secret must be at least 32 bytes in length.
  cli_alias: token-secret
  test_value: '"AccTest_CryptoSSKey"'
  test_bed_value: datapower_crypto_sskey.acc_test.id
  required_when:
  - evaluation: logical-or
    conditions:
    - evaluation: logical-and
      conditions:
      - evaluation: property-value-in-list
        attribute: Customized
        value:
        - false
      - evaluation: logical-or
        conditions:
        - evaluation: property-value-in-list
          attribute: OAuthRole
          value:
          - azsvr
        - evaluation: logical-and
          conditions:
          - evaluation: property-value-not-in-list
            attribute: OAuthRole
            value:
            - azsrv
          - evaluation: property-value-in-list
            attribute: UseValidationUrl
            value:
            - false
    - evaluation: logical-and
      conditions:
      - evaluation: property-value-in-list
        attribute: Customized
        value:
        - true
      - evaluation: property-value-in-list
        attribute: AZGrant
        value:
        - code
        - implicit
      - evaluation: logical-or
        conditions:
        - evaluation: property-value-in-list
          attribute: OAuthRole
          value:
          - azsvr
        - evaluation: logical-and
          conditions:
          - evaluation: property-value-not-in-list
            attribute: OAuthRole
            value:
            - azsvr
          - evaluation: property-value-in-list
            attribute: UseValidationUrl
            value:
            - false
  ignored_when:
  - evaluation: logical-true
- name: LocalAZPageUrl
  type: String
  default: store:///OAuth-Generate-HTML.xsl
  description: '<p>Specifies the location of the stylesheet or GatewayScript file
    that generates the authorization form for the resource owner and handles errors.
    The file must be in the local: or store: directory. You can use the <tt>OAuth-Generate-HTML.xsl</tt>
    stylesheet in the store: directory or copy this file to the local: directory and
    modify as needed.</p><p>The stylesheet or GatewayScript file must be on the DataPower
    Gateway in the local: or store: directory. The HTML authorization form remains
    operational for the duration defined with the <b>DataPower State Lifetime</b>
    property. If the user does not submit the request before the duration elapses,
    the authorization from the OAuth client is rejected.</p>'
  cli_alias: local-az-page-url
  required_when:
  - evaluation: logical-and
    conditions:
    - evaluation: logical-or
      conditions:
      - evaluation: property-value-in-list
        attribute: Customized
        value:
        - true
      - evaluation: property-value-in-list
        attribute: OAuthRole
        value:
        - azsvr
    - evaluation: property-value-in-list
      attribute: AZGrant
      value:
      - code
      - implicit
  ignored_when:
  - evaluation: logical-true
  file_locations:
  - local
  - store
- name: DPStateLifeTime
  type: Int64
  minimum: 1
  maximum: 600
  default: 300
  description: <p>Sets the operational duration in seconds for the local authorization
    page. Enter a value in the range 1 - 600. The default value is 300.</p><p>If the
    user does not submit the request before the duration elapses, the authorization
    request from the OAuth client is rejected. The location of the stylesheet or GatewayScript
    file that defines the local authorization page and the error handling is set with
    the <b>Authorization Form</b> property.</p>
  cli_alias: dp-state-lifetime
  required_when:
  - evaluation: logical-and
    conditions:
    - evaluation: logical-or
      conditions:
      - evaluation: property-value-in-list
        attribute: Customized
        value:
        - true
      - evaluation: property-value-in-list
        attribute: OAuthRole
        value:
        - azsvr
    - evaluation: property-value-in-list
      attribute: AZGrant
      value:
      - code
      - implicit
  ignored_when:
  - evaluation: logical-true
- name: AUCodeLifeTime
  type: Int64
  minimum: 1
  maximum: 600
  default: 300
  description: <p>Sets the lifetime for an authorization code in seconds. Enter a
    value in the range 1 - 600. The default value is 300.</p><p>An authorization code
    is the intermediary result of a successful authorization. The client uses authorization
    codes to obtain the access token. Instead of sending tokens to a client, clients
    receives authorization codes on their redirection URI. Each supported redirection
    URI for the client is defined with the <b>Redirect URI</b> property.</p>
  cli_alias: au-code-lifetime
  required_when:
  - evaluation: logical-and
    conditions:
    - evaluation: property-value-in-list
      attribute: Customized
      value:
      - false
    - evaluation: property-value-in-list
      attribute: OAuthRole
      value:
      - azsvr
    - evaluation: property-value-in-list
      attribute: AZGrant
      value:
      - code
  ignored_when:
  - evaluation: logical-true
- name: AccessTokenLifeTime
  type: Int64
  minimum: 1
  maximum: 63244800
  default: 3600
  description: Sets the lifetime for the access token in seconds. Enter a value in
    the range 1 - 63244800. The default value is 3600.
  cli_alias: access-token-lifetime
  required_when:
  - evaluation: logical-and
    conditions:
    - evaluation: property-value-in-list
      attribute: Customized
      value:
      - false
    - evaluation: property-value-in-list
      attribute: OAuthRole
      value:
      - azsvr
  ignored_when:
  - evaluation: logical-true
- name: RefreshTokenAllowed
  type: Int64
  minimum: 0
  maximum: 4096
  default: 0
  description: <p>Sets the maximum number of refresh tokens that can be generated
    for a specific permission set. A permission set is defined as a combination of
    the resource owner, application, and protected resources. For example, <tt>jack,mobileapp1,scope1</tt>
    and <tt>john,mobileapp1,scope1</tt> are different permission sets. When an application
    asks the resource owner for access to protected resources again, the application
    receives a new permission set with its own counter for refresh tokens.</p><p>Enter
    a value in the range 0 - 4096. The default value is 0. Remember that refresh tokens
    and access tokens are distributed in pairs.</p>
  cli_alias: refresh-token-allowed
  required_when:
  - evaluation: logical-and
    conditions:
    - evaluation: property-value-in-list
      attribute: Customized
      value:
      - false
    - evaluation: property-value-in-list
      attribute: OAuthRole
      value:
      - azsvr
    - evaluation: property-value-in-list
      attribute: AZGrant
      value:
      - code
      - password
      - jwt
  ignored_when:
  - evaluation: logical-true
- name: RefreshTokenLifeTime
  type: Int64
  minimum: 2
  maximum: 252979200
  default: 5400
  description: Sets the lifetime for the refresh token in seconds. Enter a value in
    the range 2 - 252979200. The default value is 5400. The lifetime for a refresh
    token must be longer than that for the corresponding access token.
  cli_alias: refresh-token-lifetime
  required_when:
  - evaluation: logical-and
    conditions:
    - evaluation: property-value-in-list
      attribute: Customized
      value:
      - false
    - evaluation: property-value-in-list
      attribute: OAuthRole
      value:
      - azsvr
    - evaluation: property-value-in-list
      attribute: AZGrant
      value:
      - code
      - password
      - jwt
    - evaluation: property-value-not-in-list
      attribute: RefreshTokenAllowed
      value:
      - '0'
  ignored_when:
  - evaluation: logical-true
- name: MaxConsentLifeTime
  type: Int64
  maximum: 2529792000
  description: <p>Maximum lifetime that the permission is valid before the application
    must gather consent again. Enter a value in the range 0 - 2529792000. The default
    value is 0, which disables this feature.</p>
  cli_alias: max-consent-lifetime
  required_when:
  - evaluation: logical-and
    conditions:
    - evaluation: property-value-in-list
      attribute: Customized
      value:
      - false
    - evaluation: property-value-in-list
      attribute: OAuthRole
      value:
      - azsvr
    - evaluation: property-value-in-list
      attribute: AZGrant
      value:
      - code
      - password
      - jwt
    - evaluation: property-value-not-in-list
      attribute: RefreshTokenAllowed
      value:
      - '0'
  ignored_when:
  - evaluation: logical-true
- name: CustomResourceOwner
  type: Bool
  default: false
  description: '<p>Indicates whether to use a stylesheet or GatewayScript file to
    extract information about the resource owner. When extracting using custom processing,
    use the <b>Resource Owner Process</b> property to specify the location of the
    file. The stylesheet or GatewayScript file must be in the local: or store: directory.</p><p>By
    default, the resource owner is the user name from the extracted identity. For
    custom handling, you must provide a stylesheet or GatewayScript file that overrides
    information about the resource owner.</p><ul><li>For AAA identity extraction,
    the extraction method can be basic authentication or forms-based login.</li><li>For
    custom handling, the stylesheet or GatewayScript file overrides data about the
    resource owner with information from authentication.</li></ul><p>You should use
    custom handling in the following situations: <ul><li>When presenting the authorization
    form to the resource owner</li><li>When issuing a code for an authorization code
    grant type</li><li>When issuing an access token</li></ul></p>'
  cli_alias: custom-resource-owner
  ignored_when:
  - evaluation: logical-or
    conditions:
    - evaluation: property-value-in-list
      attribute: Customized
      value:
      - true
    - evaluation: property-value-not-in-list
      attribute: OAuthRole
      value:
      - azsvr
- name: ResourceOwnerUrl
  type: String
  description: 'Specifies the location of the stylesheet or GatewayScript file to
    extract information about the resource owner. The file must be in the local: or
    store: directory.'
  cli_alias: resource-owner-url
  required_when:
  - evaluation: logical-and
    conditions:
    - evaluation: property-value-in-list
      attribute: Customized
      value:
      - false
    - evaluation: property-value-in-list
      attribute: OAuthRole
      value:
      - azsvr
    - evaluation: property-value-in-list
      attribute: CustomResourceOwner
      value:
      - true
  ignored_when:
  - evaluation: logical-true
  file_locations:
  - local
  - store
- name: AdditionalOAuthProcessUrl
  type: String
  description: '<p>Specifies the location of the stylesheet or GatewayScript file
    to process after generating a code, after generating an access token, or after
    generating an access token but before sending it to the resource server. The stylesheet
    or GatewayScript file must be in the local: or store: directory.</p><p>You can
    use custom additional OAuth processing in the following situations.</p><ul><li>An
    authorization form request allows custom processing to handle the consent form
    with the <tt>authorization_form</tt> operation. This operations allows custom
    handling of the consent form.</li><li>An authorization request after successfully
    generating a code for an authorization code grant with the <tt>authorization_request</tt>
    operation. Processing returns a node set. This information becomes part of the
    query string and is returned to the OAuth client during authorization code grant
    type.</li><li>An access request after successfully generating an access token
    with the <tt>access_request</tt> operation. Processing returns a node set. This
    information becomes part of the JSON object that contains the access token.</li><li>A
    resource request after successfully verifying an access token but before sending
    the request to the resource server with the <tt>resource_request</tt> operation.</li><li>A
    revoke request allows custom handling of a revocation request with the <tt>revoke_request</tt>
    operation. For example, this operation provides a way to persist the revocation
    information in a persistent store off the DataPower Gateway.</li><li>A check revocation
    request verifies whether an access request was revoked previously with the <tt>check_revocation_request</tt>
    operation. For example, this operation can be used to check against the persistent
    store off the DataPower Gateway to determine whether an access permission was
    revoked previously.</li><li>A pre-approval request allows the consent form to
    be by-passed in either an authorization code or implicit grant type with the <tt>preapproved_check</tt>
    operation. Depending on the result of this operation, the client''s request is
    approved, denied, or the consent form to be presented.</li><li>A validation request
    allows custom handling of a validation request grant type with the <tt>validate_request</tt>
    operation. The response must be in a node set that can be converted into a JSON
    response, in responding to a validation request.</li><li>A miscinfo request allows
    the OAuth client to add miscellaneous information to the token with the <tt>miscinfo_request</tt>
    operation. The authorization server adds the response to the token and returns
    it to the OAuth client. The maximum number of characters in this information is
    512.</li></ul>'
  cli_alias: additional-oauth-process-url
  required_when:
  - evaluation: logical-and
    conditions:
    - evaluation: property-value-in-list
      attribute: Customized
      value:
      - false
    - evaluation: property-value-in-list
      attribute: Caching
      value:
      - custom
  ignored_when:
  - evaluation: property-value-in-list
    attribute: Customized
    value:
    - true
  file_locations:
  - local
  - store
- name: RSSetHeader
  dm_type: DmOAuthRSSetHeader
  description: Identifies which HTTP headers to create and send to the remote resource
    server.
  cli_alias: rs-set-header
  ignored_when:
  - evaluation: logical-or
    conditions:
    - evaluation: property-value-in-list
      attribute: Customized
      value:
      - true
    - evaluation: property-value-not-in-list
      attribute: OAuthRole
      value:
      - rssvr
- name: ValidationURLSSLClientType
  type: String
  enum:
  - client
  default: client
  description: The TLS profile type to secure connections between the DataPower Gateway
    and its targets.
  cli_alias: validation-url-ssl-client-type
  required_when:
  - evaluation: logical-and
    conditions:
    - evaluation: property-value-in-list
      attribute: Customized
      value:
      - false
    - evaluation: property-value-in-list
      attribute: OAuthRole
      value:
      - rssvr
    - evaluation: property-value-in-list
      attribute: UseValidationUrl
      value:
      - true
  ignored_when:
  - evaluation: logical-true
- name: ValidationURLSSLClient
  type: String
  reference_to: SSLClientProfile
  description: Specifies the TLS Client Profile for the validation URL.
  cli_alias: validation-url-ssl-client
  required_when:
  - evaluation: logical-and
    conditions:
    - evaluation: property-value-in-list
      attribute: Customized
      value:
      - false
    - evaluation: property-value-in-list
      attribute: OAuthRole
      value:
      - rssvr
    - evaluation: property-value-in-list
      attribute: UseValidationUrl
      value:
      - true
    - evaluation: property-value-in-list
      attribute: ValidationURLSSLClientType
      value:
      - client
  ignored_when:
  - evaluation: logical-true
- name: JWTGrantValidator
  type: String
  reference_to: AAAJWTValidator
  description: <p>Specify the JWT validator configuration to verify a JWT for JWT
    authorization grant. The JWT validator configuration must meet the following requirements.</p><ul><li>Must
    treat the "sub" claim as the resource owner.</li><li>Must check the "iss" claim.</li><li>Must
    check the "aud" claim. The "aud" claim can be a client ID or the redirect URI.</li><li>Must
    be configured to verify a signed JWT.</li></ul>
  cli_alias: jwt-grant-validator
  required_when:
  - evaluation: logical-and
    conditions:
    - evaluation: property-value-in-list
      attribute: Customized
      value:
      - false
    - evaluation: property-value-in-list
      attribute: OAuthRole
      value:
      - azsvr
    - evaluation: property-value-in-list
      attribute: AZGrant
      value:
      - jwt
  ignored_when:
  - evaluation: logical-true
- name: ClientJWTValidator
  type: String
  reference_to: AAAJWTValidator
  description: <p>Specify the JWT validator configuration to verify the client credentials.
    The JWT validator configuration must meet the following requirements.</p><ul><li>The
    "sub" claim must be the same as client ID.</li><li>Must check the "iss" claim.</li><li>Must
    check the "aud" claim.</li><li>Must be configured to verify a signed JWT.</li></ul>
  cli_alias: client-jwt-validator
  required_when:
  - evaluation: logical-and
    conditions:
    - evaluation: property-value-in-list
      attribute: Customized
      value:
      - false
    - evaluation: logical-or
      conditions:
      - evaluation: property-value-in-list
        attribute: ClientType
        value:
        - confidential
      - evaluation: logical-and
        conditions:
        - evaluation: property-value-in-list
          attribute: OAuthRole
          value:
          - azsvr
        - evaluation: property-value-in-list
          attribute: AZGrant
          value:
          - client
    - evaluation: property-value-in-list
      attribute: ClientAuthenMethod
      value:
      - jwt
    - evaluation: logical-or
      conditions:
      - evaluation: logical-and
        conditions:
        - evaluation: property-value-in-list
          attribute: OAuthRole
          value:
          - azsvr
        - evaluation: property-value-in-list
          attribute: AZGrant
          value:
          - code
          - implicit
          - password
          - client
          - jwt
      - evaluation: logical-and
        conditions:
        - evaluation: property-value-in-list
          attribute: OAuthRole
          value:
          - rssvr
        - evaluation: property-value-not-in-list
          attribute: OAuthRole
          value:
          - azsvr
        - evaluation: property-value-in-list
          attribute: CheckClientCredential
          value:
          - true
  ignored_when:
  - evaluation: logical-true
- name: OIDCIDTokenGenerator
  type: String
  reference_to: AAAJWTGenerator
  description: <p>Specify the JWT generator configuration that generates an ID token.
    The JWT generator configuration must meet the following requirements.</p><ul><li>Must
    configure "Issuer" for the "iss" claim.</li><li>Must support "Issued at" for the
    "iat" claim.</li><li>Must support signing of the JWT.</li></ul><p>The following
    items are added to the JWT.</p><ul><li>Authenticated resource owner is added as
    the value of the "sub" claim.</li><li>Client ID is added as part of the "aud"
    claim.</li><li>"Validity period" is used to generate the value of the "exp" claim.</li><li>Requested
    "nonce" is used for the "nonce" claim.</li></ul>
  cli_alias: idtoken-generator
  required_when:
  - evaluation: logical-and
    conditions:
    - evaluation: property-value-in-list
      attribute: Customized
      value:
      - false
    - evaluation: property-value-in-list
      attribute: OAuthRole
      value:
      - azsvr
    - evaluation: property-value-in-list
      attribute: AZGrant
      value:
      - oidc
    - evaluation: property-value-in-list
      attribute: AZGrant
      value:
      - code
      - implicit
      - password
      - client
      - jwt
  ignored_when:
  - evaluation: logical-true
- name: OAuthFeatures
  dm_type: DmOAuthFeatures
  description: Specify which features to enable.
  cli_alias: oauth-features
