name: RateLimitDefinition
description: A rate limit definition contains the parameters to enforce a rate limit.
cli_alias: rate-limit-definition
cmd_group: configuration
rest_endpoint: /mgmt/config/{domain}/RateLimitDefinition
attributes:
- name: Id
  tf_name: id
  path: name
  type: String
  required: true
  test_value: '"ResTestRateLimitDefinition"'
  test_expect_ds: '"AccTest_RateLimitDefinition"'
  example: RateLimitDefinitionName
  description: Name of the object. Must be unique among object types in application
    domain.
  string_patterns:
  - ^[a-zA-Z0-9_-]+$
  string_min_length: 1
  string_max_length: 128
- name: AppDomain
  tf_name: app_domain
  type: String
  required: true
  example: test_domain
  description: The name of the application domain the object belongs to
  string_patterns:
  - ^[a-zA-Z0-9_-]+$
  string_min_length: 1
  string_max_length: 128
- name: ShortName
  type: String
  description: Specify the name shown in rate limit response headers. If not specified,
    the object name is used in response headers.
  cli_alias: short-name
- name: UserSummary
  type: String
  description: Comments
  cli_alias: summary
- name: Type
  type: String
  enum:
  - rate
  - burst
  - count
  required: true
  default: rate
  description: Limit type
  cli_alias: type
- name: Rate
  type: Int64
  required: true
  minimum: 0
  maximum: 4294967295
  example: 1000
  description: Specify the maximum number of requests that the API gateway can handle
    in an interval. The value of 0 indicates no limit.
  cli_alias: rate
- name: Interval
  type: Int64
  minimum: 1
  maximum: 65535
  default: 1
  description: Specify the interval for the rate limit. Enter a value that is greater
    than or equal to 1. The default value is 1.
  cli_alias: interval
- name: Unit
  type: String
  enum:
  - second
  - minute
  - hour
  - day
  - week
  default: minute
  description: Specify the time unit for the rate limit. The default value is minute.
    When type is burst, the unit can be second or minute.
  cli_alias: unit
- name: HardLimit
  type: Bool
  default: true
  description: Specify whether to reject requests when the specified rate limit is
    exceeded. By default, requests are rejected when the limit is exceeded. When disabled,
    requests are accepted but a warning is logged.
  cli_alias: hard-limit
- name: IsClient
  type: Bool
  default: true
  description: Specify whether to apply the rate limit to the client or to an internal
    component. By default, the rate limit is applied to the client. Client rate limits
    return a 429 error when exceeded. When disabled, rate limit information is not
    applied to the client. Non-client rate limits return a 503 error when exceeded.
  cli_alias: is-client
- name: UseApiName
  type: Bool
  default: false
  description: Specify whether to include the API name in the rate limit key. By default,
    the API name is not included. When enabled, the API name is included.
  cli_alias: use-api-name
- name: UseAppId
  type: Bool
  default: false
  description: Specify whether to include the application ID in the rate limit key.
    By default, the application ID is not included. When enabled, the application
    ID is included.
  cli_alias: use-app-id
- name: UseClientId
  type: Bool
  default: false
  description: Specify whether to include the client ID in the rate limit key. By
    default, the client ID is not included. When enabled, the client ID is included.
  cli_alias: use-client-id
- name: AutoReplenish
  type: Bool
  default: true
  description: Specify whether the count limit is automatically replenished at the
    end of the transaction. By default, the count limit is automatically replenished.
    When disabled, the count limit is replenished only by applying a rate limit assembly
    action that contains the count limit with a replenish operation.
  cli_alias: auto-replenish
- name: DynamicValue
  type: String
  description: Specify the dynamic value string for the rate limit, which should contain
    one or more context variables. The default value is an empty string. <p>The dynamic
    value makes it possible to use a context variable to enforce the rate limit based
    on parameters other than those defined in the rate limit scheme, such as a username,
    incoming IP address, or server name. The context variable can be set in a GatewayScript
    action and then included in the dynamic value.</p><p>The following example uses
    the context object in a GatewayScript action to add the <tt>my.server</tt> variable
    to the API context. The dynamic value can then include the variable <tt>my.server</tt>
    , which resolves to the server name <tt>server34</tt> .</p><p><tt>context.set("my.server",
    "server34")</tt></p>
  cli_alias: dynamic-value
- name: Weight
  type: String
  default: 1
  description: Specify a JSONata expression to assign a weight value to the rate limit.
    For each API call, the value computed by the weight expression is applied to the
    rate limit. The default value is 1. If the weight expression evaluates to a value
    that is less than or equal to 0, it is set to 1. An empty string results in an
    error.
  cli_alias: weight
- name: ResponseHeaders
  type: Bool
  default: true
  description: Specify whether response headers include rate limit information. By
    default, headers include rate limit information. When disabled, headers exclude
    rate limit information.
  cli_alias: response-headers
- name: EmulateBurstHeaders
  type: Bool
  default: false
  description: Specify whether to return information about the rate limit in burst
    limit response headers instead of in rate limit response headers. By default,
    the information is in rate limit headers. When enabled, information is in burst
    limit headers.
  cli_alias: emulate-burst-headers
- name: UseIntervalOffset
  type: Bool
  default: true
  description: Specify whether to allow limit intervals to start at different offsets.
    By default, intervals can start at different offsets. When disabled, intervals
    cannot start at different offsets.
  cli_alias: use-interval-offset
- name: AllowCacheFallback
  type: Bool
  default: true
  description: Specify whether to use the cache as a fallback when gateway-peering
    instances cannot be contacted. By default, the cache can enforce rate limits when
    the cache is disabled. When disabled, the cache cannot enforce rate limits.
  cli_alias: allow-cache-fallback
- name: UseCache
  type: Bool
  default: false
  description: Specify whether to use a cache to store rate limit information. A cache
    might be faster when the number of API calls is low. A cache can cause degraded
    performance when the number of API calls is exceptionally high. By default, a
    cache cannot store information. When enabled, the cache can store information.
  cli_alias: use-cache
- name: Parameters
  type: List
  element_type: DmRateLimitDefinitionNameValuePair
  description: Parameters
  cli_alias: parameter
