name: WebSphereJMSServer
description: Define the connection details to the remote WebSphere JMS server environment.
  This configuration is responsible for JMS messaging by periodically monitoring and
  polling queues to ensure that sent messages are directed to the correct receive
  queue or are routed to another queue manager.
cli_alias: wasjms-server
cmd_group: mpgw
rest_endpoint: /mgmt/config/{domain}/WebSphereJMSServer
skip_test: true
attributes:
- name: Id
  tf_name: id
  path: name
  type: String
  required: true
  test_value: '"ResTest_WebSphereJMSServer"'
  test_expect_ds: '"AccTest_WebSphereJMSServer"'
  example: WebSphereJMSServerName
  description: Name of the object. Must be unique among object types in application
    domain.
  string_patterns:
  - ^[a-zA-Z0-9_-]+$
  string_min_length: 1
  string_max_length: 128
- name: AppDomain
  tf_name: app_domain
  type: String
  required: true
  example: test_domain
  description: The name of the application domain the object belongs to
  string_patterns:
  - ^[a-zA-Z0-9_-]+$
  string_min_length: 1
  string_max_length: 128
- name: Endpoint
  type: List
  element_type: DmWebSphereJMSEndpoint
  required: true
  description: <p>Specify JMS nondefault bootstrap server endpoints by host, port,
    and protocol to use for the bootstrap process.</p><p>A service integration bus
    (SIB) supports applications that use message-based and service-oriented architectures.
    A bus is a group of interconnected servers and clusters that were added as members.
    Applications connect to a bus at one of the messaging engines that is associated
    with its bus members.</p><p>A messaging engine is a component that runs inside
    a server. The messaging engine manages messaging resources for a bus member. Applications
    connect to a messaging engine when a SIB is accessed.</p><p>Applications, such
    as the WebSphere JMS message provider, that run outside the WebSphere Application
    Server environment cannot directly locate a suitable messaging engine to connect
    to the target bus. In such cases, the remote clients or servers must access the
    bus through a bootstrap server that is a member of the target bus. A bootstrap
    server is an application server that runs the SIB process. The bootstrap server
    does not need to run any message engines. Rather the bootstrap server selects
    a messaging engine that is running in an application server that supports the
    bootstrap protocol that was requested.</p><p>The connection sequence to a messaging
    engine is as follows. <ol><li>The remote application first connects to a bootstrap
    server.</li><li>The bootstrap server selects a messaging engine.</li><li>The bootstrap
    server tells the client application to connect to that message engine to gain
    bus access.</li></ol></p><p>A bootstrap server uses a host name or IP address,
    with a port number and a bootstrap transport chain. The transport chain identifies
    the protocol stack that is offered by the bootstrap server to define an endpoint
    address.</p><p>The protocol stack that is used to access the bootstrap server
    does not need to be the same protocol stack that is used for actual message transfer
    over the bus.</p><p>You can add multiple nondefault bootstrap servers. For failover
    capability, the endpoints must be members of the same WebSphere Application Server
    cluster.</p>
  cli_alias: endpoint
- name: TargetTransportChain
  type: String
  default: InboundBasicMessaging
  description: <p>Specify the predefined transport chain to use for WebSphere JMS
    message exchanges. The transport chain used for message exchange need not match
    the chain used for bootstrap access.</p><p>This property takes one of the following
    values. The default value is <tt>InboundBasicMessaging</tt> . <dl><dt><tt>InboundBasicMessaging</tt></dt><dd>Specifies
    the predefined <tt>InboundBasicMessaging</tt> transport chain (JFAP-TCP/IP).</dd><dt><tt>InboundHTTPMessaging</tt></dt><dd>Specifies
    the predefined <tt>InboundHTTPMessaging</tt> transport chain (tunnels JFAP using
    HTTP wrappers).</dd><dt><tt>InboundSecureMessaging</tt></dt><dd>Specifies the
    predefined <tt>InboundSecureMessaging</tt> transport chain (JFAP-SSL-TCP/IP).</dd></dl></p><p>If
    you have access to the WebSphere Administrative Console, you can view transport
    chain information through the <b>Application Servers/serverName/Transport Chain</b>
    menu.</p>
  cli_alias: target-transport-chain
- name: MessagingBus
  type: String
  required: true
  example: bus
  description: <p>Specify the SIB to access the remote WebSphere JMS service provider.</p><p>A
    SIB supports applications that use message-based and service-oriented architectures.
    A bus is a group of interconnected servers and clusters that were added as members
    of the bus. Applications connect to a bus at one of the messaging engines that
    is associated with its bus members.</p><p>If you have access to the WebSphere
    Application Server administrative console, you can view bus information through
    the <b>Service integration/Buses</b> menu. This information includes bus members
    and messaging engines, queues, topics, and the bus-specific default topic space.</p>
  cli_alias: messaging-bus
- name: SSLCipher
  type: String
  enum:
  - SSL_RSA_WITH_NULL_MD5
  - SSL_RSA_EXPORT_WITH_RC2_CBC_40_MD5
  - SSL_RSA_EXPORT_WITH_RC4_40_MD5
  - SSL_RSA_WITH_RC4_128_MD5
  - SSL_RSA_WITH_NULL_SHA
  - SSL_RSA_EXPORT1024_WITH_RC4_56_SHA
  - SSL_RSA_WITH_RC4_128_SHA
  - SSL_RSA_WITH_DES_CBC_SHA
  - SSL_RSA_EXPORT1024_WITH_DES_CBC_SHA
  - SSL_RSA_FIPS_WITH_DES_CBC_SHA
  - SSL_RSA_WITH_3DES_EDE_CBC_SHA
  - SSL_RSA_FIPS_WITH_3DES_EDE_CBC_SHA
  - TLS_RSA_WITH_DES_CBC_SHA
  - TLS_RSA_WITH_3DES_EDE_CBC_SHA
  - TLS_RSA_WITH_AES_128_CBC_SHA
  - TLS_RSA_WITH_AES_256_CBC_SHA
  - TLS_RSA_WITH_AES_128_CBC_SHA256
  - TLS_RSA_WITH_AES_256_CBC_SHA256
  - TLS_RSA_WITH_NULL_SHA256
  description: Specify the IBM cipher specification when the TLS profile establishes
    a secure connection with the WebSphere JMS message provider. When you specify
    a TLS profile, the cipher suite that is associated with the profile is replaced
    by an IBM default cipher specification. The default value is <tt>SSL_RSA_WITH_NULL_MD5</tt>
    .
  cli_alias: ssl-cipher
  ignored_when:
  - evaluation: logical-or
    conditions:
    - evaluation: logical-and
      conditions:
      - evaluation: property-value-in-list
        attribute: SSLClientConfigType
        value:
        - proxy
      - evaluation: property-value-in-list
        attribute: SSLProfile
        value:
        - ''
    - evaluation: logical-and
      conditions:
      - evaluation: property-value-in-list
        attribute: SSLClientConfigType
        value:
        - client
      - evaluation: property-value-in-list
        attribute: SSLClient
        value:
        - ''
- name: FIPS
  type: Bool
  default: false
  description: Specify whether to require the assignment of a FIPS-compliant cipher
    for the WebSphere JMS message provider. By default, a FIPS-compliant cipher is
    not required. When enabled, which prevents the use of non-FIPs compliance ciphers,
    requires the use of one of the following ciphers. <ul><li><tt>TLS_RSA_WITH_AES_128_CBC_SHA</tt></li><li><tt>TLS_RSA_WITH_AES_256_CBC_SHA</tt></li><li><tt>TLS_RSA_WITH_AES_128_CBC_SHA256</tt></li><li><tt>TLS_RSA_WITH_AES_256_CBC_SHA256</tt></li></ul>
  cli_alias: ssl-fips
  ignored_when:
  - evaluation: logical-or
    conditions:
    - evaluation: logical-and
      conditions:
      - evaluation: property-value-in-list
        attribute: SSLClientConfigType
        value:
        - proxy
      - evaluation: property-value-in-list
        attribute: SSLProfile
        value:
        - ''
    - evaluation: logical-and
      conditions:
      - evaluation: property-value-in-list
        attribute: SSLClientConfigType
        value:
        - client
      - evaluation: property-value-in-list
        attribute: SSLClient
        value:
        - ''
- name: UserSummary
  type: String
  description: Comments
  cli_alias: summary
- name: UserName
  type: String
  description: Username
  cli_alias: username
  string_patterns:
  - ^[^ ]+$
- name: PasswordAlias
  type: String
  reference_to: PasswordAlias
  description: Password alias
  cli_alias: password-alias
- name: Transactional
  type: Bool
  default: false
  description: Specify whether to acknowledge messages only after the transaction
    succeeds. When enabled, messages are acknowledged only after the transaction succeeds.
    By default, transaction-based processing is disabled.
  cli_alias: transactional
- name: MemoryThreshold
  type: Int64
  minimum: 10485760
  maximum: 1073741824
  default: 268435456
  description: Specify the maximum memory allocation for pending messages in bytes.
    Enter a value in the range 10485760 - 1073741824. The default value is 268435456.
  cli_alias: memory-threshold
- name: MaximumMessageSize
  type: Int64
  minimum: 0
  maximum: 1073741824
  default: 1048576
  description: Specify the maximum message size in bytes. Enter a value in the range
    0 - 1073741824. The default value is 1048576. A value of 0 disables the enforcement
    of a maximum message size.
  cli_alias: maximum-message-size
- name: DefaultMessageType
  type: String
  enum:
  - byte
  - text
  default: byte
  description: <p>Specify the default JMS message type. This message type is provided
    only when the message type cannot be determined from the JMS message headers.
    By default, the message payload is accessed as a Java byte array.</p><p>On the
    transaction level, the <tt>DP_JMSMessageType</tt> header can change this setting.</p>
  cli_alias: default-message-type
- name: TotalConnectionLimit
  type: Int64
  minimum: 1
  default: 64
  maximum: 65535
  description: Specify the maximum number of simultaneous open connections. Enter
    a value in the range 1 - 65535. The default value is 64.
  cli_alias: total-connection-limit
- name: SessionsPerConnection
  type: Int64
  minimum: 1
  default: 100
  maximum: 65535
  description: Specify the maximum number of concurrent multiplexed sessions that
    a single connection can support. Enter a value in the range 1 - 65535. The default
    is 100. <p>Session requests in excess of the defined value trigger the establishment
    of a new connection to the server. A new connection cannot be established unless
    the number of current connections is less than the value set for total connections.</p><p>For
    example, with values of 20 sessions per connection, 5 total connections, and 3
    active fully subscribed connections, a new session request generates the establishment
    of a fourth connection.</p>
  cli_alias: sessions-per-connection
- name: AutoRetry
  type: Bool
  default: true
  description: Specify how to control the automatic error-recovery procedure for the
    connection. By default, automatic error-recovery is enabled to reestablish a connection
    that was broken in response to an error condition.
  cli_alias: auto-retry
- name: RetryInterval
  type: Int64
  minimum: 1
  maximum: 65535
  default: 1
  description: Specify the interval between attempts to reestablish a connection in
    seconds. Enter a value in the range 1 - 65535. The default value is 1.
  cli_alias: retry-interval
- name: EnableLogging
  type: Bool
  default: false
  description: Specify how to control JMS-specific expanded logging. By default, expanded
    logging is disabled.
  cli_alias: enable-logging
- name: SSLClientConfigType
  type: String
  enum:
  - client
  default: client
  description: TLS client type
  cli_alias: ssl-client-type
- name: SSLClient
  type: String
  reference_to: SSLClientProfile
  description: TLS client profile
  cli_alias: ssl-client
  ignored_when:
  - evaluation: property-value-in-list
    attribute: SSLClientConfigType
    value:
    - proxy
