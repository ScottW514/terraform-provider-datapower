name: AssemblyActionValidate
description: The validate assembly action validates JSON and XML payloads against
  a schema.
cli_alias: assembly-validate
cmd_group: assembly
rest_endpoint: /mgmt/config/{domain}/AssemblyActionValidate
attributes:
- name: Id
  tf_name: id
  path: name
  type: String
  required: true
  test_value: '"ResTestAssemblyActionValidate"'
  test_expect_ds: '"AccTest_AssemblyActionValidate"'
  example: AssemblyActionValidateName
  description: Name of the object. Must be unique among object types in application
    domain.
  string_patterns:
  - ^[a-zA-Z0-9_-]+$
  string_min_length: 1
  string_max_length: 128
- name: AppDomain
  tf_name: app_domain
  type: String
  required: true
  example: test_domain
  description: The name of the application domain the object belongs to
  string_patterns:
  - ^[a-zA-Z0-9_-]+$
  string_min_length: 1
  string_max_length: 128
- name: ValidateAgainst
  type: String
  enum:
  - url
  - wsdl
  - body-param
  - response-param
  - definition
  - graphql
  default: url
  description: Validate against
  cli_alias: validate-against
- name: ErrorPolicy
  type: String
  enum:
  - none
  - ignore
  - all
  default: all
  description: GraphQL error policy
  cli_alias: error-policy
- name: Schema
  type: String
  reference_to: APISchema
  description: Schema
  test_value: '"AccTest_APISchema"'
  test_bed_value: datapower_api_schema.acc_test.id
  cli_alias: schema
- name: Input
  type: String
  default: message
  description: Specify the variable in the API context that contains the data to validate.
    The content of the <tt>body</tt> field is the input to validate. The default variable
    is <tt>message</tt> .
  cli_alias: input
- name: Output
  type: String
  description: <p>Specify the variable in the API context to store the results. For
    a JSON schema, adds any default values that are missing from the payload.</p><p>Without
    an output variable, the results are not stored. By default, no output variable
    is specified.</p><p>If the validation fails, no output is stored.</p>
  cli_alias: output
- name: Definition
  type: String
  description: Specify the path to a schema in the API definition. Use the format
    <tt>#/definitions/mySchema</tt> or <tt>mySchema</tt> to specify a previously defined
    schema.
  cli_alias: definition
- name: CompileSettings
  type: String
  reference_to: CompileSettings
  description: Compile settings
  cli_alias: compile-settings-validate
- name: UserSummary
  type: String
  description: Comments
  cli_alias: summary
- name: Title
  type: String
  description: Title
  cli_alias: title
- name: CorrelationPath
  type: String
  description: Specify the path that correlates the API action to a specific part
    of the API specification. The correlation path specifies the part of the API definition
    that correlates with the API action. This path is exposed in the debug data by
    the API gateway for use by debugging tools. For example, for an API configuration
    that is retrieved from API Connect and specified in an OpenAPI document with IBM
    extensions, this path is the JSON path to the assembly policy in the IBM extensions
    section of the document. The path can be expressed in any form that the debugging
    tool can correlate to the API definition.
  cli_alias: correlation-path
- name: ActionDebug
  type: Bool
  default: false
  description: <p>Specify whether to enable the GatewayScript debugger to troubleshoot
    the following GatewayScript files or script.</p><ul><li>Troubleshoot a GatewayScript
    file that is called from the GatewayScript assembly action.</li><li>Troubleshoot
    a GatewayScript file that is called from an XSLT assembly action that uses the
    <tt>gatewayscript()</tt> extension function.</li><li>Troubleshoot a GatewayScript
    script that is called through the <tt>value</tt> or <tt>default</tt> property
    in the JSON file from the map assembly action.</li></ul><p>To debug a file or
    script, the following conditions must be met.</p><ul><li>The file contains one
    or more <tt>debugger;</tt> statements at the points in your script where you want
    to start debugging.</li><li>The GatewayScript debugger is enabled.</li></ul><p>You
    run the <tt>debug-action</tt> command.</p>
  cli_alias: debug
