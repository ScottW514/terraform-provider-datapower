name: B2BProfile
description: B2B partner profile
cli_alias: b2b-profile
cmd_group: b2b
rest_endpoint: /mgmt/config/{domain}/B2BProfile
attributes:
- name: Id
  tf_name: id
  path: name
  type: String
  required: true
  test_value: '"ResTestB2BProfile"'
  test_expect_ds: '"AccTest_B2BProfile"'
  example: B2BProfileName
  description: Name of the object. Must be unique among object types in application
    domain.
  string_patterns:
  - ^[a-zA-Z0-9_-]+$
  string_min_length: 1
  string_max_length: 128
- name: AppDomain
  tf_name: app_domain
  type: String
  required: true
  example: test_domain
  description: The name of the application domain the object belongs to
  string_patterns:
  - ^[a-zA-Z0-9_-]+$
  string_min_length: 1
  string_max_length: 128
- name: UserSummary
  type: String
  description: Comments
  cli_alias: summary
- name: ProfileType
  type: String
  enum:
  - internal
  - external
  default: internal
  description: Specify whether the profile is for an internal or external partner.
    The default value is internal.
  cli_alias: profile-type
- name: BusinessIDs
  tf_name: business_ids
  type: List
  element_type: String
  test_value: '["businessid"]'
  description: 'Specify the identifier for the partners. When configuring a trading
    partner, its identifier (ID) must be unique within a specific B2B gateway. The
    identifiers are equivalent to one of the following values. <ul><li>In AS messages,
    a value for an <tt>AS*-From</tt> or <tt>AS*-To</tt> header, where * is 1, 2, or
    3.</li><li>In ebMS messages, a value for an <tt>PartyID</tt> element, where the
    PartyID element can be under either From or To element.</li><li>In other messages,
    a value that is extracted from the body of the EDI message: <tt>SenderID</tt>
    or <tt>ReceiverID</tt> .</li></ul>'
  cli_alias: business-id
- name: BusinessIDsDUNS
  tf_name: business_id_duns
  type: List
  element_type: String
  description: Specify the 9-digit DUNS (Data Universal Numbering System) identification
    number for the partner. When configuring a trading partner, the identifier (ID)
    must be unique not only within the 3 types of ID System (Freeform, DUNS, and DUNS+4)
    but also within a specific B2B gateway.
  cli_alias: business-id-duns
  string_patterns:
  - ^[0-9]{9}$
- name: BusinessIDsDUNSPlus4
  tf_name: business_id_duns4
  type: List
  element_type: String
  description: Specifies the 13-digit D-U-N-S (Data Universal Numbering System + 4)
    identification number for the partner. When configuring a trading partner, the
    identifier (ID) must be unique not only within the 3 types of ID System (Freeform,
    DUNS, and DUNS+4) but also within a specific B2B gateway.
  cli_alias: business-id-duns4
  string_patterns:
  - ^[0-9]{13}$
- name: CustomStylePolicy
  type: String
  reference_to: StylePolicy
  description: Processing policy
  cli_alias: stylepolicy
- name: ResponseType
  type: String
  enum:
  - soap
  - xml
  - unprocessed
  - preprocessed
  default: preprocessed
  description: Characterize the traffic that originates from <tt>To</tt> partners.
    For inbound transaction, this is the traffic type that originates from internal
    partner. For outbound transaction, this is the traffic type that originates from
    external partner. The default value is Non-XML.
  cli_alias: response-type
- name: EmailAddresses
  type: List
  element_type: String
  description: Specify the identifier (e-mail address) for the partner. When configuring
    a partner, their email address must be unique within a specific B2B gateway configuration.
    The email addresses for the partner must be equivalent to one of the following
    values. <ul><li>In AS1 messages, a value for a <tt>From</tt> or <tt>To</tt> header</li><li>In
    non-AS1 messages, a value that is extracted from the body of the EDI message -
    <tt>SenderID</tt> or <tt>ReceiverID</tt> .</li></ul>
  cli_alias: email-address
- name: Destinations
  type: List
  element_type: DmB2BDestination
  required: true
  description: Specify the routing information for the partner. The first destination
    is the default destination. The gateway uses the default destination when no specific
    destination is assigned or when no matching destination is found.
  cli_alias: destination
- name: InboundVerifyValCred
  type: String
  reference_to: CryptoValCred
  description: Inbound signature validation credentials
  cli_alias: verify-valcred
  ignored_when:
  - evaluation: property-value-in-list
    attribute: ProfileType
    value:
    - internal
- name: InboundRequireSigned
  type: Bool
  default: false
  description: Specify whether inbound AS messages must be signed. The default behavior
    is off.
  cli_alias: require-signed
  ignored_when:
  - evaluation: property-value-in-list
    attribute: ProfileType
    value:
    - external
- name: InboundRequireEncrypted
  type: Bool
  default: false
  description: Specify whether inbound AS messages must be encrypted. The default
    behavior is off.
  cli_alias: require-encrypted
  ignored_when:
  - evaluation: property-value-in-list
    attribute: ProfileType
    value:
    - external
- name: InboundDecryptIdCred
  type: String
  reference_to: CryptoIdentCred
  description: Inbound decryption identification credentials
  cli_alias: decrypt-idcred
  required_when:
  - evaluation: logical-and
    conditions:
    - evaluation: property-value-in-list
      attribute: ProfileType
      value:
      - internal
    - evaluation: property-value-in-list
      attribute: InboundRequireEncrypted
      value:
      - true
  ignored_when:
  - evaluation: property-value-in-list
    attribute: ProfileType
    value:
    - external
- name: OutboundSign
  type: Bool
  default: false
  description: Specify whether to sign outbound messages. The default behavior is
    off. <ul><li>If enabled, sign outbound messages with the configured identification
    credentials and algorithm. If the destination indicates to send messages unsigned,
    messages from this partner to that destination are not signed.</li><li>If disabled,
    does not sign outbound messages.</li></ul><p>This setting has no effect on outbound
    MDN messages. Regardless of this setting and if a partner requests a signed MDN,
    the outbound MDN is signed if this partner has a configured identification credentials.</p>
  cli_alias: sign
  ignored_when:
  - evaluation: property-value-in-list
    attribute: ProfileType
    value:
    - external
- name: OutboundSignIdCred
  type: String
  reference_to: CryptoIdentCred
  description: Specify the identification credentials to sign an outbound message
    or outbound MDN. The outbound MDN is signed if requested by a partner and this
    setting is configured.
  cli_alias: sign-idcred
  required_when:
  - evaluation: logical-and
    conditions:
    - evaluation: property-value-in-list
      attribute: ProfileType
      value:
      - internal
    - evaluation: property-value-in-list
      attribute: OutboundSign
      value:
      - true
  ignored_when:
  - evaluation: property-value-in-list
    attribute: ProfileType
    value:
    - external
- name: OutboundSignDigestAlg
  type: String
  enum:
  - sha1
  - md5
  - sha256
  - sha384
  - sha512
  default: sha1
  description: Signing digest algorithm
  cli_alias: sign-digest-alg
  ignored_when:
  - evaluation: logical-or
    conditions:
    - evaluation: property-value-in-list
      attribute: ProfileType
      value:
      - external
    - evaluation: property-value-in-list
      attribute: OutboundSign
      value:
      - false
- name: OutboundSignMICAlgVersion
  type: String
  enum:
  - SMIME3.1
  - SMIME3.2
  description: 'Specify the S/MIME specification version to generate the micalg parameter
    value in a multipart/signed message. The following value is a sample <tt>Content-Type</tt>
    header of the multipart/signed message. <p><tt>Content-Type: multipart/signed;protocol="application/pkcs7-signature";micalg=sha1;
    boundary=...</tt></p><p>The micalg parameter indicates which message digest algorithm
    (such as, MD5, SHA-1, SHA-256, SHA-384, and SHA-512) to use in the calculation
    of the Message Integrity Check (MIC). The formats of the micalg value differ between
    S/MIME Version 3.1 (RFC 3851) and Version 3.2 (RFC 5751).</p><ul><li>In Version
    3.1, the micalg parameter value has micalg=[md5|sha1|sha256|sha384|sha512].</li><li>In
    Version 3.2, the micalg parameter value has micalg=[md5|sha-1|sha-256|sha-384|sha-512].</li></ul>'
  cli_alias: sign-micalg-version
  ignored_when:
  - evaluation: property-value-in-list
    attribute: ProfileType
    value:
    - external
- name: Contacts
  type: List
  element_type: DmB2BContact
  description: Specify the contact information for partners. To define the contact
    information, you must provide information for at least one property.
  cli_alias: contact
- name: OverrideASID
  type: String
  description: Specify the override the identifiers in AS message headers. <ul><li>For
    outbound messages, the value to use for the <tt>AS*-From</tt> or <tt>AS*-To</tt>
    header, where * is 1, 2, or 3. If blank, the transaction retains the identifiers
    that were extracted from the message payload.</li><li>For inbound messages, the
    value becomes another valid identifier for the partner in addition to those already
    defined for the partner.</li></ul>
  cli_alias: override-as-identifier
- name: ASAllowDuplicateMessage
  type: String
  enum:
  - never
  - always
  - on-error
  default: never
  description: Specify when to allow and reprocess duplicate AS inbound messages.
    The default behavior is never. This option does not apply to MDN.
  cli_alias: as-allow-dup-msg
  ignored_when:
  - evaluation: property-value-in-list
    attribute: ProfileType
    value:
    - internal
- name: PreserveFilename
  type: Bool
  default: false
  description: Specify whether to expose the <tt>Content-Disposition</tt> header of
    inbound AS messages for file name preservation. According to RFC 2183, the file
    name information is optional in <tt>Content-Disposition</tt> header. When enabled,
    the <tt>Content-Disposition</tt> header of the inbound AS message is exposed if
    the inbound AS message is in S/MIME format. Then, the receiving partner can retrieve
    the original file name that is contained in the header and transfer the received
    file to its backend system with the received file name.
  cli_alias: preserve-filename
  ignored_when:
  - evaluation: property-value-in-list
    attribute: ProfileType
    value:
    - external
- name: EBMSRole
  type: String
  description: Specify the name of authorized role of the party. When sending outbound
    message, the role associated with internal partner presents the <tt>From</tt>
    party and the role associated with external partner presents the <tt>To</tt> party.
    The value is referencing the <tt>Role</tt> specified in CPA. A <tt>Role</tt> is
    better defined as a URI, for example, http://rosettanet.org/roles/buyer.
  cli_alias: ebms-role
- name: EBMSPersistDuration
  type: Int64
  maximum: 6000000
  description: Specify the duration in seconds to retain messages in persistent storage.
    This value is used to compute the <tt>TimeToLive</tt> value. Until the value of
    the <tt>TimeToLive</tt> element elapses, the message cannot be archived.
  cli_alias: ebms-persist-duration
  ignored_when:
  - evaluation: property-value-in-list
    attribute: ProfileType
    value:
    - internal
- name: EBMSAckURL
  type: String
  description: Specify the redirection URL to send the acknowledgment message when
    received ebMS2 message requests an asynchronous response. When an asynchronous
    reply is requested by the inbound ebMS2 document, this field is required to determine
    where to send the acknowledgment.
  cli_alias: ebms-ack-url
  ignored_when:
  - evaluation: property-value-in-list
    attribute: ProfileType
    value:
    - internal
  protocols:
  - http
  - https
  file_locations:
  - '"NONE"'
- name: EBMSErrorURL
  type: String
  description: Specify the redirection URL to send the error message when received
    ebMS2 message requests an asynchronous response. When an asynchronous reply is
    requested by the inbound ebMS2 document, this field is used as the error reporting
    location to send the error message that contains the error code and the description
    of the problem. Error URL cannot be empty when the acknowledgment URL is specified.
  cli_alias: ebms-error-url
  required_when:
  - evaluation: property-value-not-in-list
    attribute: EBMSAckURL
    value:
    - ''
  ignored_when:
  - evaluation: property-value-in-list
    attribute: ProfileType
    value:
    - internal
  protocols:
  - http
  - https
  file_locations:
  - '"NONE"'
- name: EBMSInboundSendReceipt
  type: Bool
  default: false
  description: Specify whether to reply to the MSH with a receipt signal message for
    the received ebMS messages. The default behavior is off.
  cli_alias: ebms-inbound-send-receipt
  ignored_when:
  - evaluation: property-value-in-list
    attribute: ProfileType
    value:
    - internal
- name: EBMSInboundSendSignedReceipt
  type: Bool
  default: false
  description: Specify whether to reply to the MSH with a signed receipt signal message
    for the received ebMS3 message. The default behavior is off.
  cli_alias: ebms-inbound-send-signed-receipt
  ignored_when:
  - evaluation: logical-or
    conditions:
    - evaluation: property-value-in-list
      attribute: ProfileType
      value:
      - internal
    - evaluation: property-value-in-list
      attribute: EBMSInboundSendReceipt
      value:
      - false
- name: EBMSInboundReceiptReplyPattern
  type: String
  enum:
  - Response
  - Callback
  default: Response
  description: Specify the pattern to send the receipt signal. The default behavior
    is response.
  cli_alias: ebms-inbound-receipt-reply-pattern
  ignored_when:
  - evaluation: logical-or
    conditions:
    - evaluation: property-value-in-list
      attribute: ProfileType
      value:
      - internal
    - evaluation: property-value-in-list
      attribute: EBMSInboundSendReceipt
      value:
      - false
- name: EBMSReceiptURL
  type: String
  description: When the receipt reply pattern is callback, specify the URL to send
    the receipt signal.
  cli_alias: ebms-receipt-url
  required_when:
  - evaluation: logical-and
    conditions:
    - evaluation: property-value-in-list
      attribute: EBMSInboundSendReceipt
      value:
      - true
    - evaluation: property-value-in-list
      attribute: EBMSInboundReceiptReplyPattern
      value:
      - Callback
    - evaluation: property-value-in-list
      attribute: ProfileType
      value:
      - external
  ignored_when:
  - evaluation: logical-or
    conditions:
    - evaluation: property-value-in-list
      attribute: ProfileType
      value:
      - internal
    - evaluation: property-value-in-list
      attribute: EBMSInboundReceiptReplyPattern
      value:
      - Response
    - evaluation: property-value-in-list
      attribute: EBMSInboundSendReceipt
      value:
      - false
  protocols:
  - http
  - https
  file_locations:
  - '"NONE"'
- name: EBMSInboundErrorURL
  type: String
  description: When the error is sent asynchronously, specify the URL to send the
    error signal.
  cli_alias: ebms-inbound-error-url
  required_when:
  - evaluation: logical-and
    conditions:
    - evaluation: property-value-in-list
      attribute: EBMSInboundSendReceipt
      value:
      - true
    - evaluation: property-value-in-list
      attribute: EBMSInboundReceiptReplyPattern
      value:
      - Callback
    - evaluation: property-value-in-list
      attribute: ProfileType
      value:
      - external
  ignored_when:
  - evaluation: property-value-in-list
    attribute: ProfileType
    value:
    - internal
  protocols:
  - http
  - https
  file_locations:
  - '"NONE"'
- name: EBMSInboundVerifyValCred
  type: String
  reference_to: CryptoValCred
  description: Specify the validation credentials to verify the signature on an acknowledgment
    or inbound ebMS2 message. For ebMS2 messages, only <tt>X509Data</tt> and <tt>KeyName</tt>
    signature methods are supported.
  cli_alias: ebms-verify-valcred
  ignored_when:
  - evaluation: property-value-in-list
    attribute: ProfileType
    value:
    - internal
- name: EBMSDefaultSignerCert
  type: String
  reference_to: CryptoCertificate
  description: Specify the default validation certificate to verify the signature
    of an inbound ebMS2 message or an acknowledgment. The default signature validation
    certificate is used if either the <tt>keyInfo</tt> element is missing or signature
    method is unsupported.
  cli_alias: ebms-default-signer-cert
  ignored_when:
  - evaluation: property-value-in-list
    attribute: ProfileType
    value:
    - internal
- name: EBMSInboundRequireSigned
  type: Bool
  default: false
  description: Specify whether inbound ebMS2 messages must be signed. The default
    behavior is off.
  cli_alias: ebms-require-signed
  ignored_when:
  - evaluation: property-value-in-list
    attribute: ProfileType
    value:
    - external
- name: EBMSInboundRequireEncrypted
  type: Bool
  default: false
  description: Specify whether inbound ebMS2 messages must be encrypted. The default
    behavior is off.
  cli_alias: ebms-require-encrypted
  ignored_when:
  - evaluation: property-value-in-list
    attribute: ProfileType
    value:
    - external
- name: EBMSInboundDecryptIdCred
  type: String
  reference_to: CryptoIdentCred
  description: Specify the identification credentials to decrypt inbound ebMS2 messages.
  cli_alias: ebms-decrypt-idcred
  required_when:
  - evaluation: logical-and
    conditions:
    - evaluation: property-value-in-list
      attribute: ProfileType
      value:
      - internal
    - evaluation: property-value-in-list
      attribute: EBMSInboundRequireEncrypted
      value:
      - true
  ignored_when:
  - evaluation: property-value-in-list
    attribute: ProfileType
    value:
    - external
- name: EBMSOutboundSign
  type: Bool
  default: false
  description: Specify whether to sign outbound messages. The default behavior is
    disabled. <ul><li>If enabled, signs outbound messages with the configured identification
    credentials and algorithm. If the configuration of a destination indicates to
    send messages unsigned, messages from this partner to that destination are not
    signed.</li><li>If disabled, does not sign outbound messages.</li></ul><p>This
    setting has no effect on outbound acknowledgment messages. Regardless of this
    setting and if a partner requests a signed acknowledgment, the outbound acknowledgment
    is signed if this partner has a configured identification credentials.</p>
  cli_alias: ebms-sign
  ignored_when:
  - evaluation: property-value-in-list
    attribute: ProfileType
    value:
    - external
- name: EBMSOutboundSignIdCred
  type: String
  reference_to: CryptoIdentCred
  description: Specify the identification credentials to sign an outbound message
    or acknowledgment. The outbound acknowledgment is signed if requested by a partner
    and this setting is configured. For ebMS2 messages, only <tt>X509Data</tt> and
    <tt>KeyName</tt> signature methods are supported.
  cli_alias: ebms-sign-idcred
  required_when:
  - evaluation: logical-and
    conditions:
    - evaluation: property-value-in-list
      attribute: ProfileType
      value:
      - internal
    - evaluation: property-value-in-list
      attribute: EBMSOutboundSign
      value:
      - true
  ignored_when:
  - evaluation: property-value-in-list
    attribute: ProfileType
    value:
    - external
- name: EBMSOutboundSignatureAlg
  type: String
  enum:
  - dsa-sha1
  - rsa-sha1
  - rsa-sha256
  - rsa-sha384
  - rsa-sha512
  - rsa-ripemd160
  - rsa-ripemd160-2010
  - sha256-rsa-MGF1
  - rsa-md5
  - ecdsa-sha1
  - ecdsa-sha224
  - ecdsa-sha256
  - ecdsa-sha384
  - ecdsa-sha512
  default: dsa-sha1
  description: Specify the algorithm to sign the outbound ebMS2 message. The default
    value is dsa-sha1, which is recommended by the ebMS specification.
  cli_alias: ebms-signature-alg
  ignored_when:
  - evaluation: logical-or
    conditions:
    - evaluation: property-value-in-list
      attribute: ProfileType
      value:
      - external
    - evaluation: property-value-in-list
      attribute: EBMSOutboundSign
      value:
      - false
- name: EBMSOutboundSignatureC14NAlg
  type: String
  enum:
  - c14n
  - exc-c14n
  - c14n-comments
  - exc-c14n-comments
  - c14n11
  - c14n11-comments
  default: c14n
  description: Specify the algorithm to canonicalize the SOAP Envelope XML and exclude
    comments before signing outbound ebMS2 message. The default value is c14n, which
    is recommended by the ebMS specification.
  cli_alias: ebms-signature-c14n-alg
  ignored_when:
  - evaluation: logical-or
    conditions:
    - evaluation: property-value-in-list
      attribute: ProfileType
      value:
      - external
    - evaluation: property-value-in-list
      attribute: EBMSOutboundSign
      value:
      - false
- name: EBMSOutboundSignDigestAlg
  type: String
  enum:
  - sha1
  - sha256
  - sha512
  - ripemd160
  - sha224
  - sha384
  - md5
  default: sha1
  description: Specify the algorithm to hash the payload during signing. The default
    value is sha1. See http://www.w3.org/TR/xmldsig-core/
  cli_alias: ebms-sign-digest-alg
  ignored_when:
  - evaluation: logical-or
    conditions:
    - evaluation: property-value-in-list
      attribute: ProfileType
      value:
      - external
    - evaluation: property-value-in-list
      attribute: EBMSOutboundSign
      value:
      - false
- name: EBMSEnableCPABinding
  type: Bool
  default: false
  description: Specify whether to enable CPA bindings. When enabled, the CPA, service,
    and action that are specified by the matched CPA binding are used for the outbound
    ebMS2 messages instead of the default CPA, service, and action of the external
    profile. The CPA binding is matched by the internal partner profile.
  cli_alias: ebms-enable-cpa-bindings
  ignored_when:
  - evaluation: property-value-in-list
    attribute: ProfileType
    value:
    - internal
- name: EBMSProfileCPABindings
  type: List
  element_type: DmProfileCPABinding
  description: Specify the CPA binding for the external partner profile. A CPA binding
    binds a CPA entry (CPA, service, and action) that you prefer to use. When a CPA
    entry is matched through the internal partner profile, outbound messages from
    the internal partner use the CPA, service, and action that are specified by the
    matched CPA entry. You must have the CPA entry in the ebXML settings of the associated
    B2B gateway before you add the entry to the CPA bindings list.
  cli_alias: profile-cpa-binding
  ignored_when:
  - evaluation: logical-or
    conditions:
    - evaluation: property-value-in-list
      attribute: ProfileType
      value:
      - internal
    - evaluation: property-value-in-list
      attribute: EBMSEnableCPABinding
      value:
      - false
- name: EBMSCpaId
  type: String
  description: Specify the CPA ID to package in the outbound ebMS2 message header.
    This value is used when the B2B gateway is CPA-enforced.
  cli_alias: ebms-cpa-id
  ignored_when:
  - evaluation: property-value-in-list
    attribute: ProfileType
    value:
    - internal
- name: EBMSService
  type: String
  description: Specify the service to package in the outbound ebMS2 message header.
    This value is used when when the B2B gateway is CPA-enforced.
  cli_alias: ebms-service
  ignored_when:
  - evaluation: property-value-in-list
    attribute: ProfileType
    value:
    - internal
- name: EBMSAction
  type: String
  description: Specify the action to package in the outbound ebMS2 message header.
    This value is used when the B2B gateway is CPA-enforced.
  cli_alias: ebms-action
  ignored_when:
  - evaluation: property-value-in-list
    attribute: ProfileType
    value:
    - internal
- name: EBMSStartParameter
  type: Bool
  default: false
  description: Specify whether to generate a start parameter for the ebMS2 message.
    The start parameter identifies the root part of the ebMS message. This setting
    is disabled by default. If enabled, the start parameter is generated with this
    value enclosed in angle brackets.
  cli_alias: ebms-start-parameter
- name: EBMSAllowDuplicateMessage
  type: String
  enum:
  - never
  - always
  - on-error
  default: never
  description: Specify when to allow and reprocess duplicate ebMS2 inbound messages.
    The default behavior is never. This option does not apply to acknowledgments.
  cli_alias: ebms-allow-dup-msg
  ignored_when:
  - evaluation: property-value-in-list
    attribute: ProfileType
    value:
    - internal
- name: MDNSSLClientConfigType
  type: String
  enum:
  - client
  default: client
  description: MDN TLS client type
  cli_alias: mdn-ssl-client-type
  ignored_when:
  - evaluation: property-value-in-list
    attribute: ProfileType
    value:
    - internal
- name: MDNSSLClient
  type: String
  reference_to: SSLClientProfile
  description: MDN TLS client profile
  cli_alias: mdn-ssl-client
  ignored_when:
  - evaluation: logical-or
    conditions:
    - evaluation: property-value-not-in-list
      attribute: MDNSSLClientConfigType
      value:
      - client
    - evaluation: property-value-in-list
      attribute: ProfileType
      value:
      - internal
- name: EBMSAckSSLClientConfigType
  type: String
  enum:
  - client
  default: client
  description: Acknowledgment/Error TLS client type
  cli_alias: ebmsack-ssl-client-type
  ignored_when:
  - evaluation: property-value-in-list
    attribute: ProfileType
    value:
    - internal
- name: EBMSAckSSLClient
  type: String
  reference_to: SSLClientProfile
  description: Acknowledgment/Error TLS client profile
  cli_alias: ebmsack-ssl-client
  ignored_when:
  - evaluation: logical-or
    conditions:
    - evaluation: property-value-not-in-list
      attribute: EBMSAckSSLClientConfigType
      value:
      - client
    - evaluation: property-value-in-list
      attribute: ProfileType
      value:
      - internal
- name: EBMS3OutboundSign
  type: Bool
  default: false
  description: Specify whether to sign outbound messages. The default behavior is
    off. <ul><li>When enabled, signs outbound messages with the configured identification
    credentials and algorithm. If the configuration of a destination indicates to
    send messages unsigned, messages from this partner to that destination are not
    signed.</li><li>When disabled, does not sign outbound messages.</li></ul><p>This
    setting has no effect on outbound receipt signal messages. Regardless of this
    setting and whether an external partner requests a signed receipt signal, the
    outbound receipt signal is signed when this internal partner has a configured
    identification credentials.</p>
  cli_alias: ebms3-sign
  ignored_when:
  - evaluation: property-value-in-list
    attribute: ProfileType
    value:
    - external
- name: EBMS3OutboundSignIdCred
  type: String
  reference_to: CryptoIdentCred
  description: Specify the identification credentials to sign an outbound message
    or outbound receipt signal. The outbound receipt signal is signed if requested
    by a partner and this setting is configured.
  cli_alias: ebms3-sign-idcred
  required_when:
  - evaluation: logical-and
    conditions:
    - evaluation: property-value-in-list
      attribute: ProfileType
      value:
      - internal
    - evaluation: property-value-in-list
      attribute: EBMS3OutboundSign
      value:
      - true
  ignored_when:
  - evaluation: property-value-in-list
    attribute: ProfileType
    value:
    - external
- name: EBMS3OutboundSignDigestAlg
  type: String
  enum:
  - sha1
  - sha256
  - sha512
  - ripemd160
  - sha224
  - sha384
  - md5
  default: sha1
  description: Specify the algorithm to hash the payload during signing. The default
    value is sha1. See http://www.w3.org/TR/xmldsig-core/
  cli_alias: ebms3-sign-digest-alg
  ignored_when:
  - evaluation: logical-or
    conditions:
    - evaluation: property-value-in-list
      attribute: ProfileType
      value:
      - external
    - evaluation: property-value-in-list
      attribute: EBMS3OutboundSign
      value:
      - false
- name: EBMS3OutboundSignatureAlg
  type: String
  enum:
  - dsa-sha1
  - rsa-sha1
  - rsa-sha256
  - rsa-sha384
  - rsa-sha512
  - rsa-ripemd160
  - rsa-ripemd160-2010
  - sha256-rsa-MGF1
  - rsa-md5
  - ecdsa-sha1
  - ecdsa-sha224
  - ecdsa-sha256
  - ecdsa-sha384
  - ecdsa-sha512
  default: rsa-sha1
  description: Specify the algorithm to sign outbound ebMS3 messages. The default
    value is dsa-sha1, which is recommended by the ebMS specification.
  cli_alias: ebms3-signature-alg
  ignored_when:
  - evaluation: logical-or
    conditions:
    - evaluation: property-value-in-list
      attribute: ProfileType
      value:
      - external
    - evaluation: property-value-in-list
      attribute: EBMS3OutboundSign
      value:
      - false
- name: EBMS3OutboundSignatureC14NAlg
  type: String
  enum:
  - c14n
  - exc-c14n
  - c14n-comments
  - exc-c14n-comments
  - c14n11
  - c14n11-comments
  description: Specify the algorithm to canonicalize the SOAP Envelope XML and exclude
    comments before signing outbound ebMS3 messages. The default value is exc-c14n,
    which is recommended by the ebMS specification.
  cli_alias: ebms3-signature-c14n-alg
  ignored_when:
  - evaluation: logical-or
    conditions:
    - evaluation: property-value-in-list
      attribute: ProfileType
      value:
      - external
    - evaluation: property-value-in-list
      attribute: EBMS3OutboundSign
      value:
      - false
- name: EBMS3InboundVerifyValCred
  type: String
  reference_to: CryptoValCred
  description: Inbound signature validation credentials
  cli_alias: ebms3-verify-valcred
  ignored_when:
  - evaluation: property-value-in-list
    attribute: ProfileType
    value:
    - internal
- name: EBMS3DefaultSignerCert
  type: String
  reference_to: CryptoCertificate
  description: Specify the default validation certificate to verify the signature
    of an inbound ebMS3 message or a receipt. This certificate is used when the <tt>keyInfo</tt>
    element is missing or the signature method is unsupported.
  cli_alias: ebms3-default-signer-cert
  ignored_when:
  - evaluation: property-value-in-list
    attribute: ProfileType
    value:
    - internal
- name: EBMS3InboundRequireSigned
  type: Bool
  default: false
  description: Specify whether inbound ebMS3 messages must be signed. The default
    behavior is off.
  cli_alias: ebms3-require-signed
  ignored_when:
  - evaluation: property-value-in-list
    attribute: ProfileType
    value:
    - external
- name: EBMS3InboundRequireEncrypted
  type: Bool
  default: false
  description: Specify whether inbound ebMS3 messages must be encrypted. The default
    behavior is off.
  cli_alias: ebms3-require-encrypted
  ignored_when:
  - evaluation: property-value-in-list
    attribute: ProfileType
    value:
    - external
- name: EBMS3InboundDecryptIdCred
  type: String
  reference_to: CryptoIdentCred
  description: Inbound decryption identification credentials
  cli_alias: ebms3-decrypt-idcred
  required_when:
  - evaluation: logical-and
    conditions:
    - evaluation: property-value-in-list
      attribute: ProfileType
      value:
      - internal
    - evaluation: property-value-in-list
      attribute: EBMS3InboundRequireEncrypted
      value:
      - true
  ignored_when:
  - evaluation: property-value-in-list
    attribute: ProfileType
    value:
    - external
- name: EBMS3InboundRequireCompressed
  type: Bool
  default: false
  description: Specify whether internal partners require compressed inbound ebMS3
    messages. The default behavior is not to require compression.
  cli_alias: ebms3-require-compressed
  ignored_when:
  - evaluation: property-value-in-list
    attribute: ProfileType
    value:
    - external
- name: EBMS3ReceiptSSLClientConfigType
  type: String
  enum:
  - client
  default: client
  description: Receipt/Error TLS client type
  cli_alias: ebms3-receipt-ssl-client-type
  ignored_when:
  - evaluation: property-value-in-list
    attribute: ProfileType
    value:
    - internal
- name: EBMS3ReceiptSSLClient
  type: String
  reference_to: SSLClientProfile
  description: Receipt/Error TLS client profile
  cli_alias: ebms3-receipt-ssl-client
  required_when:
  - evaluation: logical-and
    conditions:
    - evaluation: property-value-in-list
      attribute: EBMS3ReceiptSSLClientConfigType
      value:
      - client
    - evaluation: logical-or
      conditions:
      - evaluation: property-url-protocol-in-list
        attribute: EBMSReceiptURL
        value:
        - https
      - evaluation: property-url-protocol-in-list
        attribute: EBMSInboundErrorURL
        value:
        - https
    - evaluation: property-value-in-list
      attribute: ProfileType
      value:
      - external
    - evaluation: property-value-in-list
      attribute: EBMSInboundSendReceipt
      value:
      - true
    - evaluation: property-value-in-list
      attribute: EBMSInboundReceiptReplyPattern
      value:
      - Callback
  ignored_when:
  - evaluation: logical-or
    conditions:
    - evaluation: property-value-not-in-list
      attribute: EBMS3ReceiptSSLClientConfigType
      value:
      - client
    - evaluation: property-value-in-list
      attribute: ProfileType
      value:
      - internal
- name: EBMSNotification
  type: Bool
  default: false
  description: Specify whether to enable notification. When enabled, send notifications
    to the message producer or consumer when there are specific errors. The default
    behavior is off.
  cli_alias: ebms-notification
  ignored_when:
  - evaluation: property-value-in-list
    attribute: ProfileType
    value:
    - external
- name: EBMSNotificationURL
  type: String
  description: Notification URL
  cli_alias: ebms-notification-url
  required_when:
  - evaluation: property-value-in-list
    attribute: EBMSNotification
    value:
    - true
  ignored_when:
  - evaluation: property-value-in-list
    attribute: ProfileType
    value:
    - external
  protocols:
  - http
  - https
  file_locations:
  - '"NONE"'
- name: EBMSNotificationSSLClientConfigType
  type: String
  enum:
  - client
  default: client
  description: Notification TLS client type
  cli_alias: ebms-notification-ssl-client-type
  ignored_when:
  - evaluation: logical-or
    conditions:
    - evaluation: property-value-in-list
      attribute: ProfileType
      value:
      - external
    - evaluation: property-url-protocol-not-in-list
      attribute: EBMSNotificationURL
      value:
      - https
- name: EBMSNotificationSSLClient
  type: String
  reference_to: SSLClientProfile
  description: Notification TLS client profile
  cli_alias: ebms-notification-ssl-client
  required_when:
  - evaluation: logical-and
    conditions:
    - evaluation: property-value-in-list
      attribute: EBMSNotificationSSLClientConfigType
      value:
      - client
    - evaluation: property-url-protocol-in-list
      attribute: EBMSNotificationURL
      value:
      - https
    - evaluation: property-value-in-list
      attribute: ProfileType
      value:
      - internal
    - evaluation: property-value-in-list
      attribute: EBMSNotification
      value:
      - true
  ignored_when:
  - evaluation: logical-or
    conditions:
    - evaluation: property-value-not-in-list
      attribute: EBMSNotificationSSLClientConfigType
      value:
      - client
    - evaluation: property-value-in-list
      attribute: ProfileType
      value:
      - external
    - evaluation: property-url-protocol-not-in-list
      attribute: EBMSNotificationURL
      value:
      - https
- name: EBMS3AllowDuplicateMessage
  type: String
  enum:
  - never
  - always
  - on-error
  default: never
  description: Specify when to allow and reprocess duplicate ebMS3 inbound messages.
    The default behavior is never. This option does not apply to the receipt signal
    messages.
  cli_alias: ebms3-allow-dup-msg
  ignored_when:
  - evaluation: property-value-in-list
    attribute: ProfileType
    value:
    - internal
- name: EBMS3DuplicateDetectionNotification
  type: Bool
  default: false
  description: Specify whether to enable duplicate detection notification. When enabled,
    send notification to the message consumer when a duplicate message is detected.
    The default behavior is disabled.
  cli_alias: ebms3-duplicate-detection-notification
  ignored_when:
  - evaluation: property-value-in-list
    attribute: ProfileType
    value:
    - internal
- name: EBMSMessageProperties
  type: List
  element_type: DmB2BMessageProperties
  description: Specify the <tt>eb:Property</tt> elements to add to the <tt>eb:MessageProperties</tt>
    node. Define message properties to meet your business needs and the agreement
    between partners.
  cli_alias: ebms-messageproperties
  ignored_when:
  - evaluation: property-value-in-list
    attribute: ProfileType
    value:
    - internal
