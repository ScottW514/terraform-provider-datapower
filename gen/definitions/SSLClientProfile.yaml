name: SSLClientProfile
description: A TLS client profile define how to secure a connection remote endpoint.
cli_alias: ssl-client
cmd_group: crypto
rest_endpoint: /mgmt/config/{domain}/SSLClientProfile
attributes:
- name: Id
  tf_name: id
  path: name
  type: String
  required: true
  test_value: '"ResTestSSLClientProfile"'
  test_expect_ds: '"AccTest_SSLClientProfile"'
  example: SSLClientProfileName
  description: Name of the object. Must be unique among object types in application
    domain.
  string_patterns:
  - ^[a-zA-Z0-9_-]+$
  string_min_length: 1
  string_max_length: 128
- name: AppDomain
  tf_name: app_domain
  type: String
  required: true
  example: test_domain
  description: The name of the application domain the object belongs to
  string_patterns:
  - ^[a-zA-Z0-9_-]+$
  string_min_length: 1
  string_max_length: 128
- name: UserSummary
  type: String
  description: Comments
  cli_alias: summary
- name: Protocols
  dm_type: DmSSLProtoVersionsBitmap
  default: TLSv1d1+TLSv1d2+TLSv1d3
  description: Protocols
  cli_alias: protocols
- name: Ciphers
  type: List
  enum:
  - RSA_WITH_NULL_MD5
  - RSA_WITH_NULL_SHA
  - RSA_WITH_RC4_128_MD5
  - RSA_WITH_RC4_128_SHA
  - RSA_WITH_DES_CBC_SHA
  - RSA_WITH_3DES_EDE_CBC_SHA
  - DHE_DSS_WITH_DES_CBC_SHA
  - DHE_DSS_WITH_3DES_EDE_CBC_SHA
  - DHE_RSA_WITH_DES_CBC_SHA
  - DHE_RSA_WITH_3DES_EDE_CBC_SHA
  - RSA_WITH_AES_128_CBC_SHA
  - DHE_DSS_WITH_AES_128_CBC_SHA
  - DHE_RSA_WITH_AES_128_CBC_SHA
  - RSA_WITH_AES_256_CBC_SHA
  - DHE_DSS_WITH_AES_256_CBC_SHA
  - DHE_RSA_WITH_AES_256_CBC_SHA
  - RSA_WITH_NULL_SHA256
  - RSA_WITH_AES_128_CBC_SHA256
  - RSA_WITH_AES_256_CBC_SHA256
  - DHE_DSS_WITH_AES_128_CBC_SHA256
  - DHE_RSA_WITH_AES_128_CBC_SHA256
  - DHE_DSS_WITH_AES_256_CBC_SHA256
  - DHE_RSA_WITH_AES_256_CBC_SHA256
  - RSA_WITH_AES_128_GCM_SHA256
  - RSA_WITH_AES_256_GCM_SHA384
  - DHE_RSA_WITH_AES_128_GCM_SHA256
  - DHE_RSA_WITH_AES_256_GCM_SHA384
  - DHE_DSS_WITH_AES_128_GCM_SHA256
  - DHE_DSS_WITH_AES_256_GCM_SHA384
  - AES_128_GCM_SHA256
  - AES_256_GCM_SHA384
  - CHACHA20_POLY1305_SHA256
  - AES_128_CCM_SHA256
  - AES_128_CCM_8_SHA256
  - ECDHE_RSA_WITH_NULL_SHA
  - ECDHE_RSA_WITH_RC4_128_SHA
  - ECDHE_RSA_WITH_3DES_EDE_CBC_SHA
  - ECDHE_RSA_WITH_AES_128_CBC_SHA
  - ECDHE_RSA_WITH_AES_256_CBC_SHA
  - ECDHE_RSA_WITH_AES_128_CBC_SHA256
  - ECDHE_RSA_WITH_AES_256_CBC_SHA384
  - ECDHE_RSA_WITH_AES_128_GCM_SHA256
  - ECDHE_RSA_WITH_AES_256_GCM_SHA384
  - ECDHE_ECDSA_WITH_NULL_SHA
  - ECDHE_ECDSA_WITH_RC4_128_SHA
  - ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA
  - ECDHE_ECDSA_WITH_AES_128_CBC_SHA
  - ECDHE_ECDSA_WITH_AES_256_CBC_SHA
  - ECDHE_ECDSA_WITH_AES_128_CBC_SHA256
  - ECDHE_ECDSA_WITH_AES_256_CBC_SHA384
  - ECDHE_ECDSA_WITH_AES_128_GCM_SHA256
  - ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
  element_type: String
  required: true
  list_default:
  - AES_256_GCM_SHA384
  - CHACHA20_POLY1305_SHA256
  - AES_128_GCM_SHA256
  - ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
  - ECDHE_ECDSA_WITH_AES_256_CBC_SHA384
  - ECDHE_ECDSA_WITH_AES_128_GCM_SHA256
  - ECDHE_ECDSA_WITH_AES_128_CBC_SHA256
  - ECDHE_ECDSA_WITH_AES_256_CBC_SHA
  - ECDHE_ECDSA_WITH_AES_128_CBC_SHA
  - ECDHE_RSA_WITH_AES_256_GCM_SHA384
  - ECDHE_RSA_WITH_AES_256_CBC_SHA384
  - ECDHE_RSA_WITH_AES_128_GCM_SHA256
  - ECDHE_RSA_WITH_AES_128_CBC_SHA256
  - ECDHE_RSA_WITH_AES_256_CBC_SHA
  - ECDHE_RSA_WITH_AES_128_CBC_SHA
  - DHE_RSA_WITH_AES_256_GCM_SHA384
  - DHE_RSA_WITH_AES_256_CBC_SHA256
  - DHE_RSA_WITH_AES_128_GCM_SHA256
  - DHE_RSA_WITH_AES_128_CBC_SHA256
  - DHE_RSA_WITH_AES_256_CBC_SHA
  - DHE_RSA_WITH_AES_128_CBC_SHA
  description: Specify the list of cipher suites to support in preference order. Ensure
    that the displayed order of cipher suites are in preference order. Otherwise,
    change the sequence to meet your preference.
  cli_alias: ciphers
- name: Idcred
  type: String
  reference_to: CryptoIdentCred
  description: Identification credentials
  cli_alias: idcred
- name: ValidateServerCert
  type: Bool
  default: true
  test_value: 'false'
  description: Validate server certificate
  cli_alias: validate-server-cert
- name: Valcred
  type: String
  reference_to: CryptoValCred
  description: Validation credentials
  cli_alias: valcred
- name: Caching
  type: Bool
  default: true
  description: Enable session caching
  cli_alias: caching
- name: CacheTimeout
  type: Int64
  minimum: 1
  maximum: 86400
  default: 300
  description: Specify the duration in seconds that TLS sessions remain in the session
    cache before they are removed. Enter a value in the range 1 - 86400. The default
    value is 300.
  cli_alias: cache-timeout
- name: CacheSize
  type: Int64
  minimum: 1
  maximum: 500000
  default: 100
  description: Specify the maximum number of entries of the session cache. Enter a
    value in the range 1 - 500000. The default value is 100.
  cli_alias: cache-size
- name: SSLClientFeatures
  dm_type: DmSSLClientFeatures
  description: Features
  cli_alias: ssl-client-features
- name: EllipticCurves
  type: List
  enum:
  - sect163k1
  - sect163r1
  - sect163r2
  - sect193r1
  - sect193r2
  - sect233k1
  - sect233r1
  - sect239k1
  - sect283k1
  - sect283r1
  - sect409k1
  - sect409r1
  - sect571k1
  - sect571r1
  - secp160k1
  - secp160r1
  - secp160r2
  - secp192k1
  - secp192r1
  - secp224k1
  - secp224r1
  - secp256k1
  - secp256r1
  - secp384r1
  - secp521r1
  - brainpoolP256r1
  - brainpoolP384r1
  - brainpoolP512r1
  element_type: String
  list_default:
  - secp521r1
  - secp384r1
  - secp256k1
  - secp256r1
  description: Elliptic curves
  cli_alias: curves
- name: UseCustomSNIHostname
  type: Bool
  bool_type: flag
  default: false
  description: Specify whether to use a custom server name in the SNI extension in
    the TLS client <tt>hello</tt> message. By default, the hostname of the target
    is used in the SNI extension.
  cli_alias: use-custom-sni-hostname
- name: CustomSNIHostname
  type: String
  description: Custom SNI hostname
  cli_alias: custom-sni-hostname
- name: ValidateHostname
  type: Bool
  default: false
  description: Validate server hostname
  cli_alias: validate-hostname
- name: HostnameValidationFlags
  dm_type: DmSSLHostnameValidationFlags
  description: Specify the flags that fine tune the validation methods and settings
    during the handshake. The default behavior uses the subject DN only when the <tt>Subject
    Alternative Name</tt> (SAN) extension contains no DNS name.
  cli_alias: hostname-validation-flags
- name: HostnameValidationFailOnError
  type: Bool
  default: false
  description: Specify whether to terminate the handshake when hostname validation
    fails or to ignore the failure, log an event, and continue with server certificate
    validation. The default behavior is to ignore the failure, log an event, and continue
    with any configured server certificate validation.
  cli_alias: hostname-validation-fail
- name: EnableTLS13Compat
  type: Bool
  default: true
  description: Specify whether to send extra TLS messages to look more like TLSv1.2.
    Some network middleboxes might not recognize TLSv1.3 and drop the connection.
    Enable this option to send dummy Change Cipher Spec messages, which makes TLSv1.3
    look more like TLSv1.2.
  cli_alias: enable-tls13-compat
- name: DisableRenegotiation
  type: Bool
  default: true
  description: Disable renegotiation
  cli_alias: disable-renegotiation
- name: SigAlgs
  type: List
  enum:
  - ecdsa_secp256r1_sha256
  - ecdsa_secp384r1_sha384
  - ecdsa_secp521r1_sha512
  - ed25519
  - ed448
  - ecdsa_sha224
  - ecdsa_sha1
  - rsa_pss_rsae_sha256
  - rsa_pss_rsae_sha384
  - rsa_pss_rsae_sha512
  - rsa_pss_pss_sha256
  - rsa_pss_pss_sha384
  - rsa_pss_pss_sha512
  - rsa_pkcs1_sha256
  - rsa_pkcs1_sha384
  - rsa_pkcs1_sha512
  - rsa_pkcs1_sha224
  - rsa_pkcs1_sha1
  - dsa_sha256
  - dsa_sha384
  - dsa_sha512
  - dsa_sha224
  - dsa_sha1
  element_type: String
  list_default:
  - ecdsa_secp256r1_sha256
  - ecdsa_secp384r1_sha384
  - ecdsa_secp521r1_sha512
  - ed25519
  - ed448
  - rsa_pss_rsae_sha256
  - rsa_pss_rsae_sha384
  - rsa_pss_rsae_sha512
  - rsa_pss_pss_sha256
  - rsa_pss_pss_sha384
  - rsa_pss_pss_sha512
  - rsa_pkcs1_sha256
  - rsa_pkcs1_sha384
  - rsa_pkcs1_sha512
  - ecdsa_sha224
  - ecdsa_sha1
  - rsa_pkcs1_sha224
  - rsa_pkcs1_sha1
  - dsa_sha256
  - dsa_sha384
  - dsa_sha512
  description: Specify the list of signature algorithms to advertise and support.
    An empty list implies the use of all of the default algorithms.
  cli_alias: sign-alg
- name: RequireClosureNotification
  type: Bool
  default: true
  description: Require closure notification
  cli_alias: require-closure-notification
