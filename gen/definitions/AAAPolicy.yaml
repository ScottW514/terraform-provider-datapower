name: AAAPolicy
description: <p>Define the support to authenticate users and authorize their access
  to resources. An AAA policy consists of the following phases.</p><ul><li>During
  AAA processing, the identity extraction phase defines which methods the AAA policy
  uses to extract the claimed identity of the service requester.</li><li>After the
  claimed identity of the service requester is extracted, an AAA policy authenticates
  the claimed identity. The authentication process can use internal or external resources.</li><li>After
  authentication credentials are received, an AAA policy can map these credentials.</li><li>After
  client authentication, an AAA policy identifies the specific resource that is being
  requested by that client.</li><li>After requested resources are identified, you
  might need to map extracted resource to a form that is compatible with the authorization
  method.</li><li>After the service requester is authenticated from the extracted
  identity, an AAA policy authorizes the client to the requested resource.</li><li>After
  client-authorization, an AAA policy can run postprocessing activities.</li></ul>
cli_alias: aaapolicy
cmd_group: aaapolicy
rest_endpoint: /mgmt/config/{domain}/AAAPolicy
actions:
- name: flush_cache
  body: '{"FlushAAACache": {"PolicyName": "{name}"}}'
attributes:
- name: Id
  tf_name: id
  path: name
  type: String
  required: true
  test_value: '"ResTestAAAPolicy"'
  test_expect_ds: '"AccTest_AAAPolicy"'
  example: AAAPolicyName
  description: Name of the object. Must be unique among object types in application
    domain.
  string_patterns:
  - ^[a-zA-Z0-9_-]+$
  string_min_length: 1
  string_max_length: 128
- name: AppDomain
  tf_name: app_domain
  type: String
  required: true
  example: test_domain
  description: The name of the application domain the object belongs to
  string_patterns:
  - ^[a-zA-Z0-9_-]+$
  string_min_length: 1
  string_max_length: 128
- name: UserSummary
  type: String
  description: Comments
  cli_alias: summary
- name: AuthorizedCounter
  type: String
  reference_to: CountMonitor
  description: Specify the monitor for authorized messages. Ensure that this count
    monitor is configured with an XPath as the measure.
  cli_alias: authorized-counter
- name: RejectedCounter
  type: String
  reference_to: CountMonitor
  description: Specify the monitor for rejected messages. Ensure that this count monitor
    is configured with an XPath as the measure.
  cli_alias: rejected-counter
- name: NamespaceMapping
  type: List
  element_type: DmNamespaceMapping
  description: Define XML namespace maps. Each map is a prefix with its URI.
  cli_alias: namespace-mapping
- name: ExtractIdentity
  dm_type: DmAAAPExtractIdentity
  description: Specify the methods to extract the identity of the service requester.
    For some methods, you must define more properties.
  cli_alias: extract-identity
- name: Authenticate
  dm_type: DmAAAPAuthenticate
  description: Specify the method to authenticate the extracted identity. For some
    methods, you must define more properties.
  cli_alias: authenticate
- name: MapCredentials
  dm_type: DmAAAPMapCredentials
  description: Specify the method to map credentials for authorization. For some methods,
    you must define more properties.
  cli_alias: map-credentials
- name: ExtractResource
  dm_type: DmAAAPExtractResource
  description: Specify the methods to extract the identity of a requested resource.
    For some methods, you must define more properties.
  cli_alias: extract-resource
- name: MapResource
  dm_type: DmAAAPMapResource
  description: Specify the method to map resources for authorization. For some methods,
    you must define more properties.
  cli_alias: map-resource
- name: Authorize
  dm_type: DmAAAPAuthorize
  description: Specify the method to authorize the identity to resources. For some
    methods, you must define more properties.
  cli_alias: authorize
- name: PostProcess
  dm_type: DmAAAPPostProcess
  description: Specify postprocessing activities. For some methods, you must define
    more properties.
  cli_alias: post-process
- name: SAMLAttribute
  type: List
  element_type: DmSAMLAttributeNameAndValue
  description: Specify SAML attributes. Each attribute consists of its namespace URI,
    local name, and expected value.
  cli_alias: saml-attribute
- name: LTPAAttributes
  type: List
  element_type: DmLTPAUserAttributeNameAndValue
  description: <p>Specify user attributes to include in the LTPA token. Attributes
    are relevant for only WebSphere tokens.</p><p>For each attribute, its value can
    be static or resolved at run time. <ul><li>When static, its value is a fixed value.</li><li>When
    resolved at run time, its value is resolved at run time with an XPath expression.</li></ul></p>
  cli_alias: ltpa-attribute
- name: TransactionPriority
  type: List
  element_type: DmAAATransactionPriority
  description: Define the transactional priority for users. For each user, you must
    specify the name of the output credentials, their priority for scheduling or resource
    allocation, and whether authorization is required.
  cli_alias: transaction-priority
- name: SAMLValcred
  type: String
  reference_to: CryptoValCred
  description: SAML signature validation credentials
  cli_alias: saml-valcred
- name: SAMLSigningKey
  type: String
  reference_to: CryptoKey
  description: Specify the key to sign SAML messages. To sign messages, you must specify
    a key and a certificate.
  cli_alias: saml-sign-key
- name: SAMLSigningCert
  type: String
  reference_to: CryptoCertificate
  description: Specify the certificate to sign SAML messages. To sign messages, you
    must specify a key and a certificate.
  cli_alias: saml-sign-cert
- name: SAMLSigningHashAlg
  type: String
  enum:
  - sha1
  - sha256
  - sha512
  - ripemd160
  - sha224
  - sha384
  - md5
  default: sha1
  description: Specify the algorithm to calculate the message digest for signing.
    The default value is sha1.
  cli_alias: saml-sign-hash
- name: SAMLSigningAlg
  type: String
  enum:
  - rsa-sha1
  - dsa-sha1
  - rsa-sha256
  - rsa-sha384
  - rsa-sha512
  - rsa-ripemd160
  - rsa-ripemd160-2010
  - sha256-rsa-MGF1
  - rsa-md5
  - rsa
  - dsa
  - ecdsa-sha1
  - ecdsa-sha224
  - ecdsa-sha256
  - ecdsa-sha384
  - ecdsa-sha512
  default: rsa
  description: Specify the algorithm to sign SAML messages. The default value is rsa.
  cli_alias: saml-sign-alg
- name: LDAPsuffix
  type: String
  description: Specify the LDAP suffix to add to the username to form the base distinguished
    name (DN) for authentication. The suffix and the username are separated with a
    comma. If the suffix is <tt>O=example.com</tt> and the username is <tt>Bob</tt>
    , the DN is <tt>CN=Bob,O=example.com</tt> .
  cli_alias: ldap-suffix
- name: LogAllowed
  type: Bool
  default: false
  description: Whether to log successful AAA operations. When enabled and if needed,
    modify the default logging level from informational.
  cli_alias: log-allowed
- name: LogAllowedLevel
  type: String
  enum:
  - emerg
  - alert
  - critic
  - error
  - warn
  - notice
  - info
  - debug
  default: info
  description: Set the logging level for successful AAA operations. The default level
    is informational.
  cli_alias: log-allowed-level
  required_when:
  - evaluation: property-value-in-list
    attribute: LogAllowed
    value:
    - true
  ignored_when:
  - evaluation: logical-true
- name: LogRejected
  type: Bool
  default: true
  description: Whether to log unsuccessful AAA operations. When enabled and if needed,
    modify the default logging level from warning.
  cli_alias: log-rejected
- name: LogRejectedLevel
  type: String
  enum:
  - emerg
  - alert
  - critic
  - error
  - warn
  - notice
  - info
  - debug
  default: warn
  description: Set the logging level for unsuccessful AAA operations. The default
    level is warning.
  cli_alias: log-rejected-level
  required_when:
  - evaluation: property-value-in-list
    attribute: LogRejected
    value:
    - true
  ignored_when:
  - evaluation: logical-true
- name: WSSecureConversationCryptoKey
  type: String
  reference_to: CryptoCertificate
  description: WS-Trust encryption recipient certificate
  cli_alias: wstrust-encrypt-key
- name: SAMLSourceIDMappingFile
  type: String
  description: Specify the location of the SAML artifact-mapping file that provides
    a mapping of SAML artifact source IDs to artifact retrieval endpoints. Use this
    setting when artifacts are retrieved from multiple endpoints and the source ID
    for these endpoints are encoded in the artifact itself. If only one artifact retrieval
    URL exists, it can be specified by the SAML artifact responder URL in the authentication
    phase.
  cli_alias: saml-artifact-mapping
  file_locations:
  - local
  - store
- name: PingIdentityCompatibility
  type: Bool
  default: false
  description: Control compatibility with a PingFederate identity server. By default,
    compatibility is disabled. Enable compatibility for SAML authentication or authorization.
  cli_alias: ping-identity-compatibility
- name: SAML2MetadataFile
  type: String
  description: Specify the location of the SAML 2.0 metadata file for SAML 2.0 protocol
    message exchanges. The metadata in this file identifies identity provider endpoints
    and certificates to secure message exchanges. The file must have a root-level
    &lt;md:EntitiesDescriptor> element with an &lt;EntityDescriptor> child element
    for each identity provider.
  cli_alias: saml2-metadata
  file_locations:
  - local
  - store
- name: DoSValve
  tf_name: dos_valve
  type: Int64
  minimum: 1
  maximum: 1000
  default: 3
  description: <p>Specify the number of times to process the same request to protect
    against a denial of service (DoS) attack. Enter a value in the range 1 - 1000.
    The default value is 3.</p><p>With the default value, AAA processes only the first
    3 signature and each signature can contain up to 3 reference URIs. Additional
    signatures or reference URIs are ignored.</p><p>XML processing includes encryption,
    decryption, message signing, and signature validation. The AAA policy supports
    only identity extraction with subject DN from certificate in message signature
    and authorization with signer certificate for digitally signed messages.</p>
  cli_alias: dos-valve
- name: LDAPVersion
  type: String
  enum:
  - v2
  - v3
  default: v2
  description: Specify the LDAP version to access the LDAP server. The default value
    is v2.
  cli_alias: ldap-version
- name: EnforceSOAPActor
  type: Bool
  default: true
  description: Whether to enforce the <tt>S11:actor</tt> or <tt>S12:role</tt> on WS-Security
    messages. In general, a WS-Security message has a <tt>S11:actor</tt> or <tt>S12:role</tt>
    attribute for its <tt>Security</tt> header. Processing can enforce these attributes
    when the AAA policy tries to use the <tt>Security</tt> header. For example, the
    <tt>Security</tt> element has only one actor or role. In this case, the AAA policy
    processes only the <tt>Security</tt> header for this actor or role identifier.
    This setting applies to all AAA phases, except postprocessing. For postprocessing,
    the activity generally generates a new message for next SOAP node.
  cli_alias: enforce-actor-role
- name: WSSecActorRoleID
  type: String
  description: Set the assumed <tt>S11:actor</tt> or <tt>S12:role</tt> identifier.
    The AAA policy acts as the assumed actor or role when it consumes <tt>Security</tt>
    headers. This setting takes effect only when the AAA policy attempts to process
    the incoming message before it makes an authorization decision. Postprocessing
    does not use this setting. Postprocessing uses its own setting in generating the
    message for the next SOAP node. The default value is an empty string. <table border="1"><tr><td
    valign="left"><tt>http://schemas.xmlsoap.org/soap/actor/next</tt></td><td>Every
    one, including the intermediary and ultimate receiver, that receives the message
    can process the <tt>Security</tt> header.</td></tr><tr><td valign="left"><tt>http://www.w3.org/2003/05/soap-envelope/role/none</tt></td><td>No
    one can process the <tt>Security</tt> header.</td></tr><tr><td valign="left"><tt>http://www.w3.org/2003/05/soap-envelope/role/next</tt></td><td>Every
    one, including the intermediary and ultimate receiver, that receives the message
    can process the <tt>Security</tt> header.</td></tr><tr><td valign="left"><tt>http://www.w3.org/2003/05/soap-envelope/role/ultimateReceiver</tt></td><td>The
    ultimate receiver can process the <tt>Security</tt> header.</td></tr><tr><td valign="left">No
    value, which is an empty string</td><td>The empty string (without quotation marks)
    indicates that no "actor/role" identifier is configured. With a configured actor/role,
    the ultimate receiver is assumed for the message. No actor/role attribute is added
    during the generation of the <tt>Security</tt> header. More than one <tt>Security</tt>
    header cannot omit the actor/role identifier.</td></tr><tr><td valign="left"><tt>USE_MESSAGE_BASE_URI</tt></td><td>The
    identifier is the base URL of the message. When the SOAP message is transported,
    the base URI is the request-URI of the HTTP request.</td></tr><tr><td valign="left">A
    string value</td><td>Any string to identify the actor or role of the <tt>Security</tt>
    header.</td></tr></table>
  cli_alias: actor-role-id
  ignored_when:
  - evaluation: property-value-in-list
    attribute: EnforceSOAPActor
    value:
    - false
- name: AUSMHTTPHeader
  type: List
  element_type: String
  description: Specify HTTP headers from CA Single Sign-On authentication responses.
    These headers are included as request or response headers based on the CA Single
    Sign-on header flow.
  cli_alias: au-sm-http-header
  ignored_when:
  - evaluation: property-value-not-in-list
    attribute: AUSMHeaderFlow
    attr_type: DmSMFlow
    attr_path: '../authenticate'
    attr_default: false
    value:
    - frontend
    - backend
- name: AZSMHTTPHeader
  type: List
  element_type: String
  description: Specify HTTP headers from CA Single Sign-On authorization responses.
    These headers are included as request or response headers based on the CA Single
    Sign-On header flow.
  cli_alias: az-sm-http-header
  ignored_when:
  - evaluation: property-value-not-in-list
    attribute: AZSMHeaderFlow
    attr_type: DmSMFlow
    attr_path: '../authenticate'
    attr_default: false
    value:
    - frontend
    - backend
- name: DynConfig
  type: String
  enum:
  - none
  - current-aaa
  - external-aaa
  default: none
  description: Specify how to obtain the AAA policy configuration dynamically. With
    dynamic configuration, you can configure the AAA policy at run time. When enabled,
    the configuration of AAA is determined dynamically based on the template AAA policy
    and the parameters that the dynamic configuration custom URL returns. By default,
    uses no template.
  cli_alias: dyn-config
- name: ExternalAAATemplate
  type: String
  reference_to: AAAPolicy
  description: Specify another AAA policy to use as the template. When specified,
    this AAA policy overwrites the current AAA policy.
  cli_alias: external-aaa-template
  required_when:
  - evaluation: property-value-in-list
    attribute: DynConfig
    value:
    - external-aaa
  ignored_when:
  - evaluation: logical-true
- name: DynConfigCustomURL
  type: String
  description: <p>Specify the location of the custom stylesheet or GatewayScript file.
    The configuration of the AAA policy is obtained dynamically from this file. The
    obtained configuration overwrites the configuration in the template AAA policy.</p><p>In
    the custom file, modify only the properties to dynamically overwrite. See the
    <tt>ModifyAAAPolicy</tt> element in the <tt>store:///xml-mgmt.xsd</tt> schema
    to construct a schema-compliant AAA configuration.</p>
  cli_alias: dyn-config-custom-url
  required_when:
  - evaluation: property-value-in-list
    attribute: DynConfig
    value:
    - current-aaa
    - external-aaa
  ignored_when:
  - evaluation: logical-true
