name: DmDocCachePolicy
model_only: true
list_item: true
attributes:
- name: Match
  type: String
  description: Provide a literal or wildcard expression to define a URL set included
    in the cache policy. The following wildcard characters are available. <table><tr><td
    valign="top">asterisk (*)</td><td valign="top">Matches 0 or more occurrences of
    any character.</td></tr><tr><td valign="top">question mark (?)</td><td valign="top">Matches
    one occurrence of any single character.</td></tr><tr><td valign="top">brackets
    ( [ ] )</td><td valign="top">Defines a character or numeric range. For example,
    <tt>[1-5]</tt> matches 1, 2, 3, 4, or 5, while <tt>xs[dl]</tt> matches xsd or
    xsl.</td></tr></table>
  cli_alias: match
- name: Type
  type: String
  enum:
  - protocol
  - no-cache
  - fixed
  required: true
  default: protocol
  description: Select the cache type. The cache type determines whether to cache documents
    and the mechanism to use to remove cached entries. The default value is Protocol-Based.
  cli_alias: type
- name: TTL
  type: Int64
  minimum: 0
  maximum: 31708800
  default: 900
  description: Sets the validity period in seconds for documents in the cache. TTL
    applies to only the <tt>Fixed</tt> policy type. Enter a value in the range 5 -
    31708800. The default value is 900.
  cli_alias: ttl
  required_when:
  - evaluation: property-value-in-list
    attribute: Type
    value:
    - fixed
  ignored_when:
  - evaluation: property-value-in-list
    attribute: Type
    value:
    - protocol
    - no-cache
- name: Priority
  type: Int64
  minimum: 1
  maximum: 255
  required: true
  default: 128
  description: <p>Specifies the priority of a document to add to or remove from the
    cache. The greater the value, the higher its priority. Enter a value in the range
    1 - 255. The default value is 128.</p><ul><li>When adding documents, the cache
    uses the policy with the highest priority. If the document matches multiple policies
    with the same priority, the cache uses the first matching policy in the alphabetized
    list.</li><li>When removing documents, the cache removes documents that were added
    by policies with the lowest priority. If multiple documents have the same priority,
    the cache removes the document that was least recently accessed.</li></ul><p>When
    you define multiple policies, the DataPower Gateway retains the policies in an
    alphabetized list. The DataPower Gateway evaluates candidate documents against
    each policy. Consequently, the priority of policies is important to ensure that
    the DataPower Gateway caches candidate documents for the appropriate validity
    period.</p><ul><li>Use a high priority for policies that you want to cache.</li><li>Use
    a low priority for generic policies. For example, set the priority to 1 when <tt>*</tt>
    or <tt>*.xml</tt> is the match pattern.</li></ul>
  cli_alias: priority
- name: XC10Grid
  type: String
  description: The eXtreme Scale grid configuration to use for caching documents.
  cli_alias: xc10-grid
  ignored_when:
  - evaluation: property-value-in-list
    attribute: Type
    value:
    - no-cache
- name: CacheBackendResponses
  type: Bool
  default: false
  description: Caches responses to requests from back-end servers.
  cli_alias: cache-backend-response
  ignored_when:
  - evaluation: property-value-in-list
    attribute: Type
    value:
    - no-cache
- name: HTTPCacheValidation
  type: Bool
  default: false
  description: When a requested HTTP document results in a cache hit, HTTP cache validation
    with the origin server is performed.
  cli_alias: http-cache-validation
  ignored_when:
  - evaluation: property-value-in-list
    attribute: Type
    value:
    - no-cache
- name: ReturnExpired
  type: Bool
  default: false
  description: <p>In the following situations, whether to return expired content when
    a client requests it. <ul><li>The DataPower Gateway cannot establish a connection
    with the origin server.</li><li>The document cache is getting the newest version
    from the origin server.</li></ul></p><p>A document might persist in the cache
    after the document is expired. When enabled, the cached document is returned even
    though it is potentially stale. A warning header indicates that the document is
    stale.</p>
  cli_alias: return-expired
  ignored_when:
  - evaluation: property-value-in-list
    attribute: Type
    value:
    - no-cache
- name: RESTInvalidation
  type: Bool
  default: false
  description: Invalidate document cache on unsafe requests. For example, HTTP GET
    requests are safe requests that do not change the internal state of the server.
    When an HTTP POST to the same URL occurs, the cache needs to be invalidated because
    the internal state of the server might have changed. The next GET request must
    contact the origin service to update the cache with any changes.
  cli_alias: rest-invalidation
  ignored_when:
  - evaluation: logical-or
    conditions:
    - evaluation: property-value-in-list
      attribute: Type
      value:
      - no-cache
    - evaluation: property-value-in-list
      attribute: CacheUnsafeResponse
      value:
      - true
- name: CacheUnsafeResponse
  type: Bool
  default: false
  description: 'Caches responses to POST and PUT requests when the cache policy type
    is set to fixed. The response to these requests is the result of an action on
    the server that might change its resource state. You might want to cache responses
    to these requests when you know that the action (for example: HTTP POST) will
    not change the server state.'
  cli_alias: cache-unsafe-response
  ignored_when:
  - evaluation: logical-or
    conditions:
    - evaluation: property-value-not-in-list
      attribute: Type
      value:
      - fixed
    - evaluation: property-value-in-list
      attribute: RESTInvalidation
      value:
      - true
