name: DmURLRewriteRule
model_only: true
list_item: true
attributes:
- name: Type
  type: String
  enum:
  - rewrite
  - absolute-rewrite
  - post-body
  - header-rewrite
  - content-type
  required: true
  description: Select the type of rule for the URL Rewrite Policy.
  cli_alias: type
  example: header-rewrite
- name: MatchRegexp
  type: String
  required: true
  description: <p>Specify a PCRE that defines the match condition that triggers the
    rewrite rule. Depending on the rule type, a candidate URL or header field is matched
    against the expression.</p><ul><li>For <b>absolute-rewrite</b> , <b>content-type</b>
    , and <b>post-body</b> , defines the expression to be matched against the URL.
    For example, .* or * matches any string, while (.*)xsl=(.*)\?(.*) matches a text
    subpattern followed by xsl= followed by a text subpattern followed by a ? followed
    by a text subpattern.</li><li>For <b>header-rewrite</b> , defines the expression
    to be matched against the contents of a specific header field. For example, *.*
    matches any value.</li></ul><p>PCRE documentation is available at http://www.pcre.org</p>
  cli_alias: match
  example: Test
- name: InputReplaceRegexp
  type: String
  description: <p>Specify a Perl-style replacement that defines the rewritten URL,
    header field, or HTTP POST body.</p><ul><li>For <b>absolute-rewrite</b> , defines
    the rewritten URL. If the match pattern is *, specify the complete replacement.
    If the match pattern is (.*)xsl=(.*)\?(.*), specify the evaluation replacement
    for any text subpattern or retain the original subpattern. To retain the first
    subpattern, specify $1; to retain the second text subpattern, specify $2; and
    so forth. To replace the second text subpattern only, specify $1xsl=ident.xsl$3.
    <p>If a rewritten URL begins with a host name or port that is different from the
    configured remote address, the host name or port portion of the rewritten URL
    is ignored.</p></li><li>For <b>content-type</b> , define the replace value for
    the Content-Type header.</li><li>For <b>header-rewrite</b> , define the replacement
    value for the specified header.</li><li>For <b>post-body</b> , define the rewritten
    body of the HTTP POST. If the match pattern is .*, specify the complete replacement.
    If the match pattern is (.*)xsl=(.*)\?(.*), specify the evaluation replacement
    for any text subpattern or retain the original subpattern. To retain the first
    subpattern, specify $1; to retain the second text subpattern, specify $2; and
    so forth. To omit the second text subpattern only, specify $1$3.</li></ul>
  cli_alias: input-expression
  example: Replace
- name: StyleReplaceRegexp
  type: String
  description: <p>Specify a Perl-style replacement that identifies the replacement
    stylesheet. This option is available for <b>absolute-rewrite</b> and <b>post-body</b>
    only.</p><p>If the match pattern is .*, specify the complete replacement. If the
    match pattern is (.*)xsl=(.*)\?(.*), specify the evaluation replacement for any
    text subpattern or retain the original subpattern. To retain the first subpattern,
    specify $1; to retain the second text subpattern, specify $2; and so forth. To
    retain the second text subpattern only and not use the third text subpattern,
    specify http://mantis:8000$2.</p>
  cli_alias: stylesheet-expression
- name: InputUnescape
  type: Bool
  default: false
  description: Replace URL-encoded characters (for example, "%2F") with the equivalent
    literal character. Select on to replace escape sequences, or off to retain them.
  cli_alias: input-unescape
- name: StylesheetUnescape
  type: Bool
  default: true
  description: Replace URL-encoded characters (for example, "%2F") with the equivalent
    literal character. Select on to replace escape sequences, or off to retain them.
  cli_alias: stylesheet-unescape
- name: Header
  type: String
  default: none
  description: Name HTTP Header to Rewrite
  example: HEADER
- name: NormalizeURL
  type: Bool
  default: false
  description: Normalize URL by converting '\' to '/' and compressing '.' and '..'
  cli_alias: normalize-url
