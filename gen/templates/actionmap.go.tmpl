// Copyright Â© 2025 Scott Wiederhold <s.e.wiederhold@gmail.com>
// All rights reserved.
//
// Licensed under the Mozilla Public License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://mozilla.org/MPL/2.0/
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// SPDX-License-Identifier: MPL-2.0

// This file is generated "gen/generator.go"
// !!CHANGES TO THIS FILE WILL BE OVERWRITTEN!!

package actions

type action struct {
	Body  string
}

type target struct {
	ObjectName   string
	ValidActions map[string]action
}

const DomainQuiesceBody    = `{"DomainQuiesce": {"name": "{domain}", "timeout": 60}}`
const DomainUnquiesceBody  = `{"DomainUnquiesce": {"name": "{domain}"}}`
const ServiceQuiesceBody   = `{"ServiceQuiesce": {"type": "{type}", "name": "{name}", "timeout": 60}}`
const ServiceUnquiesceBody = `{"ServiceUnquiesce": {"type": "{type}", "name": "{name}"}}`


var actionMap = map[string]target{
{{- range .}}
    {{- if len .Actions}}
	"resource_datapower_{{snakeCase .Name}}": {
		ObjectName: "{{.Name}}",
		ValidActions: map[string]action{
        {{- range .Actions}}
			"{{.Name}}": {
            {{- if and (len .Body) (ne .Name "quiesce")}}
                Body: `{{.Body}}`,
            {{- end}}
			},
        {{- end}}
		},
	},
    {{- end}}
{{- end}}
}
