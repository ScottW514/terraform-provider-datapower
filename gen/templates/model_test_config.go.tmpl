//go:build ignore
// Copyright Â© 2025 Scott Wiederhold <s.e.wiederhold@gmail.com>
// All rights reserved.
//
// Licensed under the Mozilla Public License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://mozilla.org/MPL/2.0/
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// SPDX-License-Identifier: MPL-2.0

// This file is generated "gen/generator.go"
// !!CHANGES TO THIS FILE WILL BE OVERWRITTEN!!

package testconfig

var {{.Name}}TestConfig = ModelTestConfig{
    Name:         "{{.Name}}",
{{- if not .ModelOnly}}
    Resource:    `
resource "datapower_{{snakeCase .Name}}" "test" {
{{- else}}
    Model:    `{
{{- end}}
{{- $root := .}}
{{- range  .Attributes}}
	{{- if eq .Name "AppDomain"}}
        {{- if not $root.DefaultDomainOnly}}
            {{- if eq $root.Name "Domain"}}
  app_domain = "domain_resource_test"
	         {{- else}}
  app_domain = "acc_test_domain"
            {{- end}}
        {{- end}}
	{{- else if or .Required .TestValue}}
        {{- if .TestValue}}
  {{.TfName}} = {{.TestValue}}
		{{- else if .ReferenceTo}}
  {{.TfName}} = {{if eq .Type "List"}}[{{end}}datapower_{{snakeCase .ReferenceTo}}.test.id{{if eq .Type "List"}}]{{end}}
		{{- else if or (isObject .) (isObjectList .)}}
  {{.TfName}} = ` + {{if isObjectList .}}{{.ElementType}}{{else}}{{.DmType}}{{end}}TestConfig.GetModel{{if isObjectList .}}List{{end}}Config() + `
        {{- else if and (len .ListDefault) (eq .Type "List")}}
  {{.TfName}} = [{{- range .ListDefault}}{{quote .}},{{- end}}]
        {{- else if and (len .ListExample) (eq .Type "List")}}
  {{.TfName}} = [{{- range .ListExample}}{{quote .}},{{- end}}]
        {{- else if len .Example}}
  {{.TfName}} = {{if eq .Type "String"}}{{quote .Example}}{{else}}{{.Example}}{{end}}
        {{- else if len .Default}}
  {{.TfName}} = {{if eq .Type "String"}}{{quote .Default}}{{else}}{{.Default}}{{end}}
		{{- end}}
	{{- end}}
{{- end}}
}`,
{{- if not .ModelOnly}}
    Data:   `
data "datapower_{{snakeCase .Name}}" "test" {
  depends_on = [ datapower_{{snakeCase .Name}}.test ]
    {{- if not .DefaultDomainOnly}}
        {{- $modelName := .Name}}
        {{- range  .Attributes}}
            {{- if and (eq .Name "AppDomain") (ne $modelName "Domain")}}
  app_domain = "acc_test_domain"
            {{- end}}
        {{- end}}
    {{- end}}
}`,
{{- end}}
    ModelOnly:    {{if .ModelOnly}}true{{else}}false{{end}},
    Dependencies: map[string]*ModelTestConfig{
{{- range (getTestDependencies .)}}
        "{{.}}": &{{.}}TestConfig,
{{- end}}
    },
    ReferencesTo: map[string]*ModelTestConfig{
{{- range (getTestReferencesTo .)}}
        "{{.}}": &{{.}}TestConfig,
{{- end}}
    },
    TestPre:  `
{{- .TestPrerequisites}}
`,
}
