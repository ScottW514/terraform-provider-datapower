// Copyright Â© 2025 Scott Wiederhold <s.e.wiederhold@gmail.com>
// All rights reserved.
//
// Licensed under the Mozilla Public License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://mozilla.org/MPL/2.0/
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// SPDX-License-Identifier: MPL-2.0

//go:build ignore

package main

import (
	"log"
	"os"
	"path/filepath"

	"github.com/scottw514/terraform-provider-datapower/internal/provider/models/testconfig"
)

var endPoints = map[string]testconfig.ModelTestConfig{
	"file": testconfig.FileTestConfig,
{{- range .}}
	{{- if not .ModelOnly}}
	"{{snakeCase .Name}}": testconfig.{{.Name}}TestConfig,
	{{- end}}
{{- end}}
}

func writeOutput(outputPath, content string) {
	// Create directories if needed.
	if err := os.MkdirAll(filepath.Dir(outputPath), 0755); err != nil {
		log.Fatalf("Error creating directories: %v", err)
	}

	// Write to output file.
	f, err := os.Create(outputPath)
	if err != nil {
		log.Fatalf("Error creating output file: %v", err)
	}

	defer f.Close()
	if _, err := f.WriteString(content); err != nil {
		log.Fatalf("Error writing output file: %v", err)
	}
}

func main() {
	for k, v := range endPoints {
		if v.Data != "" {
			writeOutput("./examples/data-sources/datapower_"+k+"/data-source.tf", v.Data)
		}
		writeOutput("./examples/resources/datapower_"+k+"/resource.tf", v.Resource)
	}
}
